{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/Input/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","changeStyle","changeValue","downLayer","removeLayer","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","StyledInput","input","Input_templateObject","Input","Dl","ul","ImageLayerStyles_templateObject","ImageLayerStyles","_ref","onChange","opacity","rotate","scale","atoms_Input","max","min","name","step","type","value","Div","div","Information_templateObject","Information","gridSize","height","overflow","width","defaultChecked","Ul","Layers_templateObject","Layers","index","layers","onClick","onFocus","map","layer","layerIndex","v","data-index","url","style","backgroundImage","concat","key","reverse","LayerSetting_templateObject","LayerSetting","children","LayerSetting_Ul","Loading_templateObject","Loading","$","css","Loading_Div","react_spinners","color","React","Menu_templateObject","Menu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","isShowLoading","_this2","prevOverflow","_this$props","changePreviewOverflow","domtoimage","toBlob","then","blob","saveAs","setState","_this3","Menu_Ul","ReactDOM","templates_Loading","ImagePreview","id","uniqid","element","Image","onload","naturalHeight","naturalWidth","context","getContext","image","src","drawImage","_this$props$style","objectWithoutProperties","_this$state","objectSpread","transform","TextPreview_templateObject","TextPreview","_ref$style","_ref$style$color","a","b","g","r","fontFamily","fontSize","fontWeight","lineHeight","TextPreview_Div","split","Preview_templateObject","Preview","_ref$preview","preview","previews","node","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","TextLayerStyles_Dl","react_color_lib","react_select_esm","options","_ref2","label","Dropzone_templateObject","Dropzone","onClickCloseButton","onDrop","Dropzone_Div","es","accept","getRootProps","getInputProps","isDragActive","assign","Logo_templateObject","Logo","loading","Logo_Div","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","target","reader","FileReader","result","JSON","parse","counter","append","_ref3","join","WebFont","active","setTimeout","custom","families","_ref4","fontactive","Math","ceil","length","fontinactive","readAsText","send","prevLayers","_ref5","addImageLayers","changeColor","changeFontFamily","changePreviewValue","styles","undefined","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","organisms_Menu","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","disabled","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref11","_ref11$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","_ref6","rgb","_ref7","_ref7$currentTarget","currentTarget","checked","_ref8","_ref8$currentTarget","_ref9","_ref10","dataset","parseInt","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","parseFloat","tmpLayer","splice","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.51807568.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\r\n\r\nexport default setFonts;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\r\n\r\nexport default addImageLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\r\n\r\nexport default addTextLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeStyle = actionCreator<{ name: string; value: any }>(\r\n  'LAYER.CHANGE_STYLE'\r\n);\r\n\r\nexport default changeStyle;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\r\n\r\nexport default changeValue;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\r\n\r\nexport default downLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\r\n\r\nexport default removeLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\r\n\r\nexport default selectLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst upLayer = actionCreator('LAYER.UP_LAYER');\r\n\r\nexport default upLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ name: string; value: boolean | string }>(\r\n  'PREVIEW.CHANGE_VALUE'\r\n);\r\n\r\nexport default changeValue;\r\n","import * as React from 'react';\r\nimport { TiArrowUpOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowUpOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\r\n  props: ArrowUpOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowUpOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowUpOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiArrowDownOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowDownOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\r\n  props: ArrowDownOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowDownOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowDownOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentAddButtonProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\r\n  props: DocumentAddButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentAdd className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentAddButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentDelete } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentDeleteButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\r\n  props: DocumentDeleteButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentDelete className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentDeleteButton;\r\n","import * as React from 'react';\r\nimport { TiImage } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ImageButtonProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\r\n  <Button {...props}>\r\n    <TiImage className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ImageButton;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  background-color: #fff;\r\n  border: 1px #ddd solid;\r\n\r\n  &[type='checkbox'] {\r\n    height: 15px;\r\n    width: 15px;\r\n\r\n    &:checked {\r\n      background-color: #bbb;\r\n    }\r\n  }\r\n\r\n  &[type='number'] {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport interface InputProps {\r\n  defaultChecked?: boolean;\r\n  className?: string;\r\n  max?: number;\r\n  min?: number;\r\n  name: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  step?: number;\r\n  type: string;\r\n  value?: number | string;\r\n}\r\n\r\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\r\n  <StyledInput {...props} />\r\n);\r\n\r\nexport default Input;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.ul`\r\n  dt:not(:first-child) {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n\r\n    .input {\r\n      width: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ImageLayerStylesProps {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n  scale: number;\r\n}\r\n\r\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\r\n  onChange,\r\n  opacity,\r\n  rotate,\r\n  scale\r\n}: ImageLayerStylesProps) => (\r\n  <Dl>\r\n    <dt>opacity</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={1}\r\n        min={0}\r\n        name=\"opacity\"\r\n        onChange={onChange}\r\n        step={0.01}\r\n        type=\"number\"\r\n        value={opacity}\r\n      />\r\n    </dd>\r\n    <dt>rotate</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name=\"rotate\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={rotate}\r\n      />\r\n      deg\r\n    </dd>\r\n    <dt>scale</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"scale\"\r\n        onChange={onChange}\r\n        step={0.01}\r\n        type=\"number\"\r\n        value={scale}\r\n      />\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default ImageLayerStyles;\r\n","import Input, { InputProps } from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  dl {\r\n    align-items: center;\r\n    display: flex;\r\n\r\n    dt:not(:first-child) {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    dd {\r\n      align-items: center;\r\n      display: flex;\r\n      margin-left: 5px;\r\n\r\n      .input {\r\n        width: 60px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface InformationProps {\r\n  gridSize: number;\r\n  height: number;\r\n  onChange: InputProps['onChange'];\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst Information: React.SFC<InformationProps> = ({\r\n  gridSize,\r\n  height,\r\n  onChange,\r\n  overflow,\r\n  scale,\r\n  width\r\n}: InformationProps) => (\r\n  <Div>\r\n    <dl>\r\n      <dt>width</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={0}\r\n          name=\"width\"\r\n          onChange={onChange}\r\n          type=\"number\"\r\n          value={width}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>height</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={0}\r\n          name=\"height\"\r\n          onChange={onChange}\r\n          type=\"number\"\r\n          value={height}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>scale</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={0}\r\n          name=\"scale\"\r\n          onChange={onChange}\r\n          step={0.1}\r\n          type=\"number\"\r\n          value={scale}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>grid-size</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          max={500}\r\n          min={0}\r\n          name=\"gridSize\"\r\n          onChange={onChange}\r\n          type=\"number\"\r\n          value={gridSize}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>overflow</dt>\r\n      <dd>\r\n        <Input\r\n          defaultChecked={overflow}\r\n          name=\"overflow\"\r\n          onChange={onChange}\r\n          type=\"checkbox\"\r\n        />\r\n      </dd>\r\n    </dl>\r\n  </Div>\r\n);\r\n\r\nexport default Information;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  margin-bottom: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    border: 1px solid #ddd;\r\n    padding: 2.5px;\r\n\r\n    &.select {\r\n      border: solid #b33e5c 1px;\r\n    }\r\n\r\n    textarea {\r\n      border: 1px solid #ddd;\r\n      font-size: 1.2rem;\r\n      height: 50px;\r\n      min-height: 50px;\r\n      overflow-y: scroll;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n\r\n    .image {\r\n      background-position: center;\r\n      background-size: cover;\r\n      height: 50px;\r\n      overflow: hidden;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ImageLayer {\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  value: string;\r\n}\r\n\r\nexport interface LayersProps {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst Layers: React.SFC<LayersProps> = ({\r\n  index,\r\n  layers,\r\n  onChange,\r\n  onClick,\r\n  onFocus\r\n}: LayersProps) => (\r\n  <Ul>\r\n    {layers\r\n      .map((layer, layerIndex) => {\r\n        let v = <React.Fragment />;\r\n\r\n        if ('value' in layer) {\r\n          const { value } = layer;\r\n\r\n          v = (\r\n            <textarea\r\n              data-index={layerIndex}\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              value={value}\r\n            />\r\n          );\r\n        } else if ('url' in layer) {\r\n          const { url } = layer;\r\n\r\n          v = (\r\n            <div\r\n              className=\"image\"\r\n              data-index={layerIndex}\r\n              onClick={onClick}\r\n              style={{ backgroundImage: `url(${url})` }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return (\r\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\r\n            {v}\r\n          </li>\r\n        );\r\n      })\r\n      .reverse()}\r\n  </Ul>\r\n);\r\n\r\nexport default Layers;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  background-color: #bbb;\r\n  display: grid;\r\n  grid-auto-rows: 25px;\r\n  grid-gap: 5px;\r\n  grid-template-columns: repeat(auto-fill, 25px);\r\n  padding: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    button {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      .icon {\r\n        color: white;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LayerSettingProps {\r\n  children: React.ReactNodeArray;\r\n}\r\n\r\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\r\n  children\r\n}: LayerSettingProps) => (\r\n  <Ul>\r\n    {children.map((value, index) => (\r\n      <li key={index}>{value}</li>\r\n    ))}\r\n  </Ul>\r\n);\r\n\r\nexport default LayerSetting;\r\n","import * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport { DotLoader } from 'react-spinners';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  p {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nclass Loading extends React.Component {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Div className=\"portal\">\r\n        <DotLoader color=\"#234794\" />\r\n        <p>Generating... wait a minutes.</p>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import Loading from 'components/templates/Loading';\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  font-size: 1.2rem;\r\n\r\n  > li {\r\n    position: relative;\r\n\r\n    &:hover {\r\n      background-color: #fff;\r\n\r\n      > ul {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    > p {\r\n      align-items: center;\r\n      display: flex;\r\n      height: 24px;\r\n      justify-content: center;\r\n      width: 50px;\r\n    }\r\n\r\n    > ul {\r\n      background-color: #fff;\r\n      border: 1px #ddd solid;\r\n      display: none;\r\n      left: -1px;\r\n      position: absolute;\r\n      top: 100%;\r\n\r\n      > li {\r\n        > button,\r\n        > p {\r\n          align-items: center;\r\n          display: flex;\r\n          height: 24px;\r\n          margin: 0 30px 0 15px;\r\n          white-space: nowrap;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface MenuProps {\r\n  changePreviewOverflow: (value: boolean) => void;\r\n  overflow: boolean;\r\n}\r\n\r\ninterface MenuState {\r\n  isShowLoading: boolean;\r\n}\r\n\r\nclass Menu extends React.Component<MenuProps, MenuState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: MenuProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      isShowLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\r\n    const { changePreviewOverflow, overflow } = this.props;\r\n    const { isShowLoading } = this.state;\r\n\r\n    if (isShowLoading) {\r\n      if (overflow) {\r\n        changePreviewOverflow(false);\r\n\r\n        return;\r\n      }\r\n\r\n      domtoimage.toBlob(document.getElementById('capture')!).then(blob => {\r\n        saveAs(blob, 'image.png');\r\n\r\n        this.setState(\r\n          {\r\n            isShowLoading: false\r\n          },\r\n          () => {\r\n            if (prevOverflow) {\r\n              changePreviewOverflow(true);\r\n            }\r\n          }\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isShowLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Ul>\r\n          <li>\r\n            <p>File</p>\r\n            <ul>\r\n              <li>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ isShowLoading: true });\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </li>\r\n              {/* <li>\r\n          <p>Save As...</p>\r\n        </li> */}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <p>Help</p>\r\n            <ul>\r\n              <li>\r\n                <p>About Image Maker</p>\r\n              </li>\r\n            </ul>\r\n          </li>\r\n        </Ul>\r\n        {isShowLoading ? (\r\n          ReactDOM.createPortal(<Loading />, this.rootEl)\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import * as React from 'react';\r\nimport * as uniqid from 'uniqid';\r\n\r\nexport interface ImagePreviewProps {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface ImagePreviewState {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nclass ImagePreview extends React.Component<\r\n  ImagePreviewProps,\r\n  ImagePreviewState\r\n> {\r\n  id: string;\r\n\r\n  constructor(props: ImagePreviewProps) {\r\n    super(props);\r\n\r\n    this.id = uniqid();\r\n    this.state = {\r\n      height: 0,\r\n      width: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { url } = this.props;\r\n    const element = new Image();\r\n\r\n    element.onload = () => {\r\n      const { naturalHeight: height, naturalWidth: width } = element;\r\n\r\n      this.setState(\r\n        {\r\n          height,\r\n          width\r\n        },\r\n        () => {\r\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\r\n          const context = canvas.getContext('2d');\r\n          const image = new Image();\r\n\r\n          image.src = url;\r\n          image.onload = () => {\r\n            context!.drawImage(image, 0, 0, width, height);\r\n          };\r\n        }\r\n      );\r\n    };\r\n    element.src = url;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style: { rotate, scale, ...style }\r\n    } = this.props;\r\n    const { height, width } = this.state;\r\n\r\n    return (\r\n      <canvas\r\n        height={height}\r\n        id={this.id}\r\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\r\n        width={width}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport interface TextPreviewProps {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    rotate: number;\r\n  };\r\n  value: string;\r\n}\r\n\r\nconst TextPreview: React.SFC<TextPreviewProps> = ({\r\n  style: {\r\n    color: { a, b, g, r },\r\n    fontFamily: { value: fontFamily },\r\n    fontSize,\r\n    fontWeight,\r\n    lineHeight,\r\n    rotate\r\n  },\r\n  value\r\n}: TextPreviewProps) => (\r\n  <Div\r\n    style={{\r\n      fontFamily,\r\n      fontWeight,\r\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n      fontSize: `${fontSize}px`,\r\n      transform: `rotate(${rotate}deg)`\r\n    }}\r\n  >\r\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\r\n      <div\r\n        key={index}\r\n        style={{\r\n          height: `${lineHeight}px`,\r\n          lineHeight: `${lineHeight}px`\r\n        }}\r\n      >\r\n        {v}\r\n      </div>\r\n    ))}\r\n  </Div>\r\n);\r\n\r\nexport default TextPreview;\r\n","import ImagePreview, {\r\n  ImagePreviewProps\r\n} from 'components/molecules/ImagePreview';\r\nimport TextPreview, {\r\n  TextPreviewProps\r\n} from 'components/molecules/TextPreview';\r\nimport * as React from 'react';\r\nimport ReactScalableDraggable from 'react-scalable-draggable';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #bbb;\r\n  height: 100%;\r\n  overflow: scroll;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  .wrapper {\r\n    box-sizing: content-box;\r\n    left: 0;\r\n    padding: 50px;\r\n    position: absolute;\r\n    top: 0;\r\n    transform-origin: top left;\r\n\r\n    #capture {\r\n      height: inherit;\r\n      width: inherit;\r\n\r\n      .screen {\r\n        background-color: white;\r\n        height: inherit;\r\n        position: relative;\r\n        width: inherit;\r\n\r\n        &::before {\r\n          background-image: url(/images/grid.png);\r\n          background-repeat: repeat;\r\n          background-size: inherit;\r\n          content: '';\r\n          display: block;\r\n          height: 100%;\r\n          left: 0;\r\n          position: absolute;\r\n          top: 0;\r\n          width: 100%;\r\n        }\r\n\r\n        .draggable {\r\n          cursor: move;\r\n          position: absolute;\r\n          word-break: keep-all;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface PreviewProps {\r\n  layers: (ImagePreviewProps | TextPreviewProps)[];\r\n  preview: {\r\n    gridSize: number;\r\n    height: number;\r\n    overflow: boolean;\r\n    scale: number;\r\n    width: number;\r\n  };\r\n}\r\n\r\nconst Preview: React.SFC<PreviewProps> = ({\r\n  layers,\r\n  preview: { gridSize, height, overflow, scale, width }\r\n}) => {\r\n  const previews = layers.map(layer => {\r\n    const { id } = layer;\r\n\r\n    let node = <React.Fragment />;\r\n\r\n    if ('value' in layer) {\r\n      node = <TextPreview {...layer} />;\r\n    } else if ('url' in layer) {\r\n      node = <ImagePreview {...layer} />;\r\n    }\r\n\r\n    return (\r\n      <ReactScalableDraggable\r\n        className=\"draggable\"\r\n        key={id}\r\n        parentScale={scale}\r\n      >\r\n        {node}\r\n      </ReactScalableDraggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Div id=\"preview\">\r\n      <div\r\n        className=\"wrapper\"\r\n        style={{\r\n          height: `${height}px`,\r\n          transform: `scale(${scale})`,\r\n          width: `${width}px`\r\n        }}\r\n      >\r\n        <div id=\"capture\">\r\n          <div\r\n            className=\"screen\"\r\n            style={{\r\n              backgroundSize: `${gridSize}px`,\r\n              overflow: overflow ? 'visible' : 'hidden'\r\n            }}\r\n          >\r\n            {previews}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport Select from 'react-select';\r\nimport { Props } from 'react-select/lib/Select';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.ul`\r\n  dt:not(:first-child) {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n\r\n    .select {\r\n      width: 220px;\r\n    }\r\n\r\n    .input {\r\n      width: 60px;\r\n    }\r\n\r\n    .picker .chrome-picker {\r\n      background-color: #fff;\r\n      border: 1px #ddd solid;\r\n      border-radius: 0 !important;\r\n      box-shadow: none !important;\r\n      font-family: inherit !important;\r\n\r\n      > div {\r\n        border-radius: 0 !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface TextLayerStylesProps {\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  fontFamily: {\r\n    label: string;\r\n    value: string;\r\n  };\r\n  fonts: Font[];\r\n  fontSize: number;\r\n  fontWeight: number;\r\n  lineHeight: number;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeColor: (color: ColorResult) => void;\r\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n}\r\n\r\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\r\n  color,\r\n  fontFamily,\r\n  fonts,\r\n  fontSize,\r\n  fontWeight,\r\n  lineHeight,\r\n  onChange,\r\n  onChangeColor,\r\n  onChangeFontFamily,\r\n  opacity,\r\n  rotate\r\n}: TextLayerStylesProps) => (\r\n  <Dl>\r\n    <dt>color</dt>\r\n    <dd>\r\n      <div className=\"picker\">\r\n        <ChromePicker color={color} onChange={onChangeColor} />\r\n      </div>\r\n    </dd>\r\n    <dt>font-family</dt>\r\n    <dd>\r\n      <Select\r\n        className=\"select\"\r\n        onChange={onChangeFontFamily}\r\n        options={fonts.map(({ fontFamily: value, name: label }) => ({\r\n          label,\r\n          value\r\n        }))}\r\n        value={fontFamily}\r\n      />\r\n    </dd>\r\n    <dt>font-size</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"fontSize\"\r\n        onChange={onChange}\r\n        type=\"number\"\r\n        value={fontSize}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>font-weight</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={900}\r\n        min={100}\r\n        name=\"fontWeight\"\r\n        onChange={onChange}\r\n        step={100}\r\n        type=\"number\"\r\n        value={fontWeight}\r\n      />\r\n    </dd>\r\n    <dt>line-height</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"lineHeight\"\r\n        onChange={onChange}\r\n        type=\"number\"\r\n        value={lineHeight}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>opacity</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={1}\r\n        min={0}\r\n        name=\"opacity\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={opacity}\r\n      />\r\n    </dd>\r\n    <dt>rotate</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name=\"rotate\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={rotate}\r\n      />\r\n      deg\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default TextLayerStyles;\r\n","import * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport ReactDropzone, {\r\n  DropzoneProps as ReactDropzoneProps\r\n} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  height: 100%;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .wrapper {\r\n    align-items: center;\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: center;\r\n    width: 100%;\r\n\r\n    img {\r\n      height: calc(231px / 3);\r\n      opacity: 0.75;\r\n      width: calc(289px / 3);\r\n    }\r\n\r\n    p {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n\r\n  .close-button {\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 50px;\r\n\r\n    &::before,\r\n    &::after {\r\n      background-color: #000;\r\n      display: block;\r\n      content: '';\r\n      left: 50%;\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%) rotate(45deg);\r\n    }\r\n\r\n    &::before {\r\n      height: 1px;\r\n      width: 100%;\r\n    }\r\n\r\n    &::after {\r\n      height: 100%;\r\n      width: 1px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DropzoneProps {\r\n  onClickCloseButton: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  onDrop: ReactDropzoneProps['onDrop'];\r\n}\r\n\r\nclass Dropzone extends React.Component<DropzoneProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { onClickCloseButton, onDrop } = this.props;\r\n\r\n    return (\r\n      <Div className=\"portal\">\r\n        <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\r\n          {({ getRootProps, getInputProps, isDragActive }) => (\r\n            <div {...getRootProps()} className=\"wrapper\">\r\n              <input {...getInputProps()} />\r\n              <img src=\"/images/dd.png\" />\r\n              <p>\r\n                {isDragActive\r\n                  ? 'Drop files here...'\r\n                  : 'Try dropping some image files here, or click to select files to upload.'}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </ReactDropzone>\r\n        <button className=\"close-button\" onClick={onClickCloseButton} />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropzone;\r\n","import * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .wrapper {\r\n    height: 360px;\r\n    position: relative;\r\n    width: 640px;\r\n\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n\r\n    p {\r\n      bottom: 80px;\r\n      color: #ef64a0;\r\n      font-size: 1.2em;\r\n      position: absolute;\r\n      right: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LogoProps {\r\n  loading: number;\r\n}\r\n\r\nclass Logo extends React.Component<LogoProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.props;\r\n\r\n    return (\r\n      <Div className=\"portal\">\r\n        <div className=\"wrapper\">\r\n          <img src=\"/images/top.png\" />\r\n          <p>fonts loading... {loading}%</p>\r\n        </div>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import setFonts from 'actions/fonts/setFonts';\r\nimport addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\r\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\r\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\r\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\r\nimport ImageButton from 'components/atoms/ImageButton';\r\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\r\nimport Information, {\r\n  InformationProps\r\n} from 'components/organisms/Information';\r\nimport Layers, { LayersProps } from 'components/organisms/Layers';\r\nimport LayerSetting from 'components/organisms/LayerSetting';\r\nimport Menu, { MenuProps } from 'components/organisms/Menu';\r\nimport Preview from 'components/organisms/Preview';\r\nimport TextLayerStyles, {\r\n  TextLayerStylesProps\r\n} from 'components/organisms/TextLayerStyles';\r\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\r\nimport Logo from 'components/templates/Logo';\r\nimport * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { State } from 'reducers';\r\nimport { Dispatch } from 'redux';\r\nimport styled from 'styled-components';\r\nimport * as WebFont from 'webfontloader';\r\n\r\nconst Div = styled.div`\r\n  background-color: #fbfbfb;\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 275px 1fr 200px;\r\n  grid-template-rows: 25px 1fr;\r\n\r\n  .header {\r\n    border-bottom: 1px #ddd inset;\r\n    grid-column: 1 / 4;\r\n  }\r\n\r\n  .detail {\r\n    overflow-y: scroll;\r\n    padding: 5px 10px;\r\n  }\r\n\r\n  .preview {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-rows: 1fr 20px;\r\n    padding: 5px;\r\n  }\r\n\r\n  .side-layers {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .layers {\r\n      flex-basis: 0;\r\n      flex-grow: 1;\r\n      overflow-y: scroll;\r\n      padding: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PagesProps\r\n  extends ReturnType<typeof mapDispatchToProps>,\r\n    ReturnType<typeof mapStateToProps>,\r\n    RouteComponentProps {}\r\n\r\ninterface PagesState {\r\n  isShowDropzone: boolean;\r\n  isShowLogo: boolean;\r\n  loading: number;\r\n}\r\n\r\nclass Pages extends React.Component<PagesProps, PagesState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: PagesProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = { isShowDropzone: false, isShowLogo: true, loading: 0 };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFonts } = this.props;\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open('GET', '/jsons/fonts.json', true);\r\n    request.responseType = 'blob';\r\n    request.onload = ({ target: { response } }: any) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = ({ target: { result } }: any) => {\r\n        const fonts: Font[] = JSON.parse(result);\r\n\r\n        let counter = 0;\r\n\r\n        setFonts(fonts);\r\n\r\n        $('head').append(\r\n          `<style type=\"text/css\">${fonts\r\n            .map(\r\n              ({ fontFamily }) =>\r\n                `@font-face {font-family: '${fontFamily}';src: url('/fonts/${fontFamily}.woff2') format('woff2'),url('/fonts/${fontFamily}.woff') format('woff'),url('/fonts/${fontFamily}.ttf') format('truetype');}`\r\n            )\r\n            .join('')}</style>`\r\n        );\r\n\r\n        WebFont.load({\r\n          active: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false });\r\n            }, 1000);\r\n          },\r\n          custom: { families: fonts.map(({ fontFamily }) => fontFamily) },\r\n          fontactive: () => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.ceil((counter / fonts.length) * 100)\r\n            });\r\n          },\r\n          fontinactive: () => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.ceil((counter / fonts.length) * 100)\r\n            });\r\n          }\r\n        });\r\n      };\r\n      reader.readAsText(response);\r\n    };\r\n    request.send();\r\n  }\r\n\r\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\r\n    const { layers } = this.props;\r\n    const { isShowDropzone } = this.state;\r\n\r\n    if (isShowDropzone && prevLayers.length !== layers.length) {\r\n      this.setState({ isShowDropzone: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addImageLayers,\r\n      addTextLayer,\r\n      changeColor,\r\n      changeFontFamily,\r\n      changePreviewOverflow,\r\n      changePreviewValue,\r\n      changeStyle,\r\n      changeValue,\r\n      downLayer,\r\n      fonts,\r\n      index,\r\n      layers,\r\n      preview,\r\n      removeLayer,\r\n      selectLayer,\r\n      upLayer\r\n    } = this.props;\r\n    const { isShowDropzone, isShowLogo, loading } = this.state;\r\n\r\n    let styles = <React.Fragment />;\r\n\r\n    if (index !== undefined) {\r\n      const layer = layers[index];\r\n\r\n      if ('value' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = (\r\n          <TextLayerStyles\r\n            {...style}\r\n            fonts={fonts}\r\n            onChange={changeStyle}\r\n            onChangeColor={changeColor}\r\n            onChangeFontFamily={changeFontFamily}\r\n          />\r\n        );\r\n      } else if ('url' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Div>\r\n        <header className=\"header\">\r\n          <Menu {...preview} changePreviewOverflow={changePreviewOverflow} />\r\n        </header>\r\n        <aside className=\"detail\">{styles}</aside>\r\n        <div className=\"preview\">\r\n          <Preview layers={layers} preview={preview} />\r\n          <Information {...preview} onChange={changePreviewValue} />\r\n        </div>\r\n        <aside className=\"side-layers\">\r\n          <LayerSetting>\r\n            {[\r\n              <DocumentAddButton key=\"add\" onClick={addTextLayer} />,\r\n              <DocumentDeleteButton\r\n                disabled={index === undefined}\r\n                key=\"delete\"\r\n                onClick={removeLayer}\r\n              />,\r\n              <ImageButton\r\n                key=\"image\"\r\n                onClick={() => {\r\n                  this.setState({ isShowDropzone: true });\r\n                }}\r\n              />,\r\n              <ArrowUpOutlineButton\r\n                disabled={index === undefined || index === layers.length - 1}\r\n                key=\"up\"\r\n                onClick={upLayer}\r\n              />,\r\n              <ArrowDownOutlineButton\r\n                disabled={!index}\r\n                key=\"down\"\r\n                onClick={downLayer}\r\n              />\r\n            ]}\r\n          </LayerSetting>\r\n          <div className=\"layers\">\r\n            <Layers\r\n              index={index}\r\n              layers={layers}\r\n              onChange={changeValue}\r\n              onClick={selectLayer}\r\n              onFocus={selectLayer}\r\n            />\r\n          </div>\r\n        </aside>\r\n        {isShowDropzone ? (\r\n          ReactDOM.createPortal(\r\n            <Dropzone\r\n              onClickCloseButton={() => {\r\n                this.setState({ isShowDropzone: false });\r\n              }}\r\n              onDrop={addImageLayers}\r\n            />,\r\n            this.rootEl\r\n          )\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n        {isShowLogo ? (\r\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  addImageLayers: (\r\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\r\n  ) => {\r\n    acceptedFiles.forEach(acceptedFile => {\r\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\r\n    });\r\n  },\r\n  addTextLayer: () => dispatch(addTextLayer()),\r\n  changeColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changeStyle({ value, name: 'color' })),\r\n  changeFontFamily: (\r\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\r\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\r\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\r\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\r\n  changePreviewValue: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeStyle: ({\r\n    currentTarget: { name, value }\r\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\r\n    dispatch(changeStyle({ name, value })),\r\n  changeValue: ({\r\n    target: { value }\r\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n    dispatch(changeValue({ value })),\r\n  downLayer: () => dispatch(downLayer()),\r\n  removeLayer: () => dispatch(removeLayer()),\r\n  selectLayer: ({\r\n    currentTarget: { dataset }\r\n  }:\r\n    | ArgumentTypes<LayersProps['onClick']>[0]\r\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\r\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\r\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\r\n  upLayer: () => dispatch(upLayer())\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  fonts: { fonts },\r\n  layer: { index, layers },\r\n  preview\r\n}: State) => ({\r\n  fonts,\r\n  index,\r\n  layers,\r\n  preview\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pages);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface FontsState {\r\n  fonts: Font[];\r\n}\r\n\r\nconst initialState: FontsState = {\r\n  fonts: []\r\n};\r\n\r\nconst fonts = reducerWithInitialState(initialState).case(\r\n  setFonts,\r\n  (state, { fonts }) => ({ ...state, fonts })\r\n);\r\n\r\nexport default fonts;\r\n","import addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport * as uniqid from 'uniqid';\r\n\r\ninterface ImageLayer {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n  };\r\n  value: string;\r\n}\r\n\r\nexport interface LayerState {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n}\r\n\r\nconst initialState: LayerState = {\r\n  index: undefined,\r\n  layers: []\r\n};\r\n\r\nconst layer = reducerWithInitialState(initialState)\r\n  .case(addImageLayer, (state, { url }) => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      url,\r\n      id: uniqid(),\r\n      style: {\r\n        opacity: 1,\r\n        rotate: 0,\r\n        scale: 1\r\n      }\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(addTextLayer, state => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      id: uniqid(),\r\n      style: {\r\n        color: {\r\n          a: 1,\r\n          b: 0,\r\n          g: 0,\r\n          r: 0\r\n        },\r\n        fontFamily: {\r\n          label: '機械彫刻用標準書体 M',\r\n          value: 'KikaiChokokuJIS-Md'\r\n        },\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        lineHeight: 16,\r\n        opacity: 1,\r\n        rotate: 0\r\n      },\r\n      value: ''\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeStyle, (state, { name, value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    if (name === 'fontSize' || name === 'fontWeight' || name === 'lineHeight') {\r\n      layers[index].style[name] = parseInt(value, 10);\r\n    } else if (name === 'opacity' || name === 'rotate' || name === 'scale') {\r\n      layers[index].style[name] = parseFloat(value);\r\n    } else {\r\n      layers[index].style[name] = value;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeValue, (state, { value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const layer = layers[index];\r\n\r\n    if ('value' in layer) {\r\n      layer.value = value;\r\n\r\n      layers[index] = layer;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(downLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index - 1];\r\n    layers[index - 1] = tmpLayer;\r\n\r\n    return { ...state, index: index - 1, layers };\r\n  })\r\n  .case(removeLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n\r\n    if (index === undefined) {\r\n      return state;\r\n    }\r\n\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.splice(index, 1);\r\n\r\n    return {\r\n      layers,\r\n      index: undefined\r\n    };\r\n  })\r\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\r\n  .case(upLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index + 1];\r\n    layers[index + 1] = tmpLayer;\r\n\r\n    return { ...state, index: index + 1, layers };\r\n  });\r\n\r\nexport default layer;\r\n","import changeValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface PreviewState {\r\n  gridSize: number;\r\n  height: number;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst initialState: PreviewState = {\r\n  gridSize: 0,\r\n  height: 300,\r\n  overflow: true,\r\n  scale: 1,\r\n  width: 400\r\n};\r\n\r\nconst preview = reducerWithInitialState(initialState).case(\r\n  changeValue,\r\n  (state, { name, value: newValue }) => {\r\n    let value;\r\n\r\n    if (name === 'gridSize' || name === 'height' || name === 'width') {\r\n      value = parseInt(newValue as string, 10);\r\n    } else if (name === 'scale') {\r\n      value = parseFloat(newValue as string);\r\n    } else {\r\n      value = newValue;\r\n    }\r\n\r\n    return { ...state, ...{ [name]: value } };\r\n  }\r\n);\r\n\r\nexport default preview;\r\n","import { combineReducers } from 'redux';\r\nimport fonts, { FontsState } from './fonts';\r\nimport layer, { LayerState } from './layer';\r\nimport preview, { PreviewState } from './preview';\r\n\r\nexport interface State {\r\n  fonts: FontsState;\r\n  layer: LayerState;\r\n  preview: PreviewState;\r\n}\r\n\r\nconst reducers = () => combineReducers({ fonts, layer, preview });\r\n\r\nexport default reducers;\r\n","import Pages from 'containers/pages';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport 'ress';\nimport { createGlobalStyle } from 'styled-components';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst store = createStore(reducers());\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\n    font-size: 62.5%;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: 400;\n    height: 100%;\n    line-height: 1.2;\n    overflow: hidden !important;\n    -webkit-overflow-scrolling: touch;\n    width: 100%;\n  \n    body {\n      font-size: 1.4rem;\n      height: 100%;\n      width: 100%;\n    \n      #root {\n        height: 100%;\n        width: 100%;\n\n        * {\n          appearance: none;\n          \n          &:focus {\n            outline: none;\n          }\n        }\n  \n        a {\n          line-height: 0;\n        }\n\n        ul {\n          list-style: none;\n        }\n      }\n    }\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\n    >\n      <Switch>\n        <Route component={Pages} exact={true} path=\"/\" />\n      </Switch>\n    </BrowserRouter>\n    <GlobalStyle />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}