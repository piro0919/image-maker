{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/Input/index.tsx","components/molecules/LayerStyles/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/atoms/DownloadButton/index.tsx","components/atoms/CloseButton/index.tsx","components/templates/Portal/index.tsx","components/templates/Image/index.tsx","components/atoms/DocumentButton/index.tsx","components/templates/New/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","changeStyle","changeValue","downLayer","removeLayer","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","StyledInput","input","Input_templateObject","Input","Dl","dl","LayerStyles_templateObject","LayerStyles","_ref","children","map","_ref2","name","node","key","StyledLayerStyles","ImageLayerStyles_templateObject","ImageLayerStyles","onChange","opacity","rotate","scale","atoms_Input","max","min","step","type","value","Div","div","Information_templateObject","Information","backgroundColor","gridSize","height","isInitialize","onChangeBackgroundColor","overflow","width","a","b","g","r","style","concat","react_color_lib","color","defaultChecked","Ul","ul","Layers_templateObject","Layers","index","layers","onClick","onFocus","layer","layerIndex","v","data-index","url","backgroundImage","reverse","LayerSetting_templateObject","LayerSetting","LayerSetting_Ul","DownloadButton_templateObject","DownloadButton","DownloadButton_Button","CloseButton_templateObject","CloseButton","CloseButton_Button","Portal_templateObject","Portal","$","css","_this$props","this","onClickCloseButton","Portal_Div","atoms_CloseButton","React","StyledPortal","Image_templateObject","Image","extension","src","atoms_DownloadButton","saveAs","DocumentButton_templateObject","DocumentButton","DocumentButton_Button","New_templateObject","New","changePreviewIsInitialize","onChangePreviewBackgroundColor","onChangePreviewValue","New_StyledPortal","atoms_DocumentButton","disabled","e","Loading_templateObject","Loading","Loading_StyledPortal","react_spinners","Menu_templateObject","Menu","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","undefined","imageUrl","isNew","isShowLoading","_this2","prevOverflow","changePreviewOverflow","_this$state","callback","setState","domtoimage","toJpeg","then","toPng","toSvg","_this3","_this$state2","Menu_Ul","href","target","ReactDOM","templates_Image","templates_New","assign","templates_Loading","ImagePreview","id","uniqid","element","onload","naturalHeight","naturalWidth","context","getContext","image","drawImage","_this$props$style","objectWithoutProperties","objectSpread","transform","TextPreview_templateObject","fontFamily","process","_ref3","_ref4","TextPreview","_ref5","_ref5$style","_ref5$style$color","fontSize","fontWeight","lineHeight","TextPreview_Div","split","Preview_templateObject","Preview","_ref$preview","preview","_ref$preview$backgrou","previews","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","TextLayerStyles_StyledLayerStyles","react_select_esm","options","label","Dropzone_templateObject","Dropzone","onDrop","Dropzone_StyledPortal","es","accept","getRootProps","getInputProps","isDragActive","Logo_templateObject","Logo","loading","Logo_StyledPortal","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","reader","FileReader","result","JSON","parse","counter","WebFont","active","setTimeout","classes","custom","families","fontactive","familyName","fvd","Math","floor","length","fontinactive","inactive","readAsText","send","prevLayers","addImageLayers","changeColor","changeFontFamily","changePreviewBackgroundColor","changePreviewValue","styles","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","organisms_Menu","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref11","_ref11$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","rgb","_ref6","_ref7","_ref7$currentTarget","currentTarget","checked","_ref8","_ref8$currentTarget","_ref9","_ref10","dataset","parseInt","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","textShadows","parseFloat","tmpLayer","splice","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab1de534.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\r\n\r\nexport default setFonts;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\r\n\r\nexport default addImageLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\r\n\r\nexport default addTextLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeStyle = actionCreator<{ name: string; value: any }>(\r\n  'LAYER.CHANGE_STYLE'\r\n);\r\n\r\nexport default changeStyle;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\r\n\r\nexport default changeValue;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\r\n\r\nexport default downLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\r\n\r\nexport default removeLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\r\n\r\nexport default selectLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst upLayer = actionCreator('LAYER.UP_LAYER');\r\n\r\nexport default upLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ name: string; value: any }>(\r\n  'PREVIEW.CHANGE_VALUE'\r\n);\r\n\r\nexport default changeValue;\r\n","import * as React from 'react';\r\nimport { TiArrowUpOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowUpOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\r\n  props: ArrowUpOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowUpOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowUpOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiArrowDownOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowDownOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\r\n  props: ArrowDownOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowDownOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowDownOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentAddButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\r\n  props: DocumentAddButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentAdd className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentAddButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentDelete } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentDeleteButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\r\n  props: DocumentDeleteButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentDelete className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentDeleteButton;\r\n","import * as React from 'react';\r\nimport { TiImage } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ImageButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\r\n  <Button {...props}>\r\n    <TiImage className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ImageButton;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  background-color: #fff;\r\n  border: 1px #ddd solid;\r\n\r\n  &[type='checkbox'] {\r\n    height: 15px;\r\n    width: 15px;\r\n\r\n    &:checked {\r\n      background-color: #bbb;\r\n    }\r\n  }\r\n\r\n  &[type='number'] {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport interface InputProps {\r\n  defaultChecked?: boolean;\r\n  className?: string;\r\n  max?: number;\r\n  min?: number;\r\n  name: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  step?: number;\r\n  type: string;\r\n  value?: number | string;\r\n}\r\n\r\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\r\n  <StyledInput {...props} />\r\n);\r\n\r\nexport default Input;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.dl`\r\n  > div {\r\n    padding: 10px 10px;\r\n\r\n    &:hover {\r\n      background-color: rgba(35, 71, 148, 0.1);\r\n    }\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\ninterface Child {\r\n  name: string;\r\n  node: React.ReactNode;\r\n}\r\n\r\nexport interface LayerStylesProps {\r\n  children: Child[];\r\n  className?: string;\r\n}\r\n\r\nconst LayerStyles: React.SFC<LayerStylesProps> = ({\r\n  children,\r\n  className\r\n}: LayerStylesProps) => (\r\n  <Dl className={className}>\r\n    {children.map(({ name, node }) => (\r\n      <div key={name}>\r\n        <dt>{name}</dt>\r\n        <dd>{node}</dd>\r\n      </div>\r\n    ))}\r\n  </Dl>\r\n);\r\n\r\nexport default LayerStyles;\r\n","import Input from 'components/atoms/Input';\r\nimport LayerStyles from 'components/molecules/LayerStyles';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLayerStyles = styled(LayerStyles)`\r\n  .input {\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface ImageLayerStylesProps {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n  scale: number;\r\n}\r\n\r\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\r\n  onChange,\r\n  opacity,\r\n  rotate,\r\n  scale\r\n}: ImageLayerStylesProps) => (\r\n  <StyledLayerStyles>\r\n    {[\r\n      {\r\n        name: 'opacity',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            max={1}\r\n            min={0}\r\n            name=\"opacity\"\r\n            onChange={onChange}\r\n            step={0.01}\r\n            type=\"number\"\r\n            value={opacity}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'rotate',\r\n        node: (\r\n          <React.Fragment>\r\n            <Input\r\n              className=\"input\"\r\n              name=\"rotate\"\r\n              onChange={onChange}\r\n              step={0.1}\r\n              type=\"number\"\r\n              value={rotate}\r\n            />\r\n            deg\r\n          </React.Fragment>\r\n        )\r\n      },\r\n      {\r\n        name: 'scale',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            min={0}\r\n            name=\"scale\"\r\n            onChange={onChange}\r\n            step={0.01}\r\n            type=\"number\"\r\n            value={scale}\r\n          />\r\n        )\r\n      }\r\n    ]}\r\n  </StyledLayerStyles>\r\n);\r\n\r\nexport default ImageLayerStyles;\r\n","import Input, { InputProps } from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  dl {\r\n    align-items: center;\r\n    display: flex;\r\n\r\n    dt:not(:first-child) {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    dd {\r\n      align-items: center;\r\n      display: flex;\r\n      margin-left: 5px;\r\n\r\n      .input {\r\n        width: 50px;\r\n      }\r\n\r\n      .background-color {\r\n        border: 1px #ddd solid;\r\n        display: flex;\r\n        height: 15px;\r\n        justify-content: center;\r\n        position: relative;\r\n        width: 15px;\r\n\r\n        &:hover .picker {\r\n          display: block;\r\n        }\r\n\r\n        .picker {\r\n          background-color: #fff;\r\n          border: 1px #ddd solid;\r\n          bottom: 100%;\r\n          display: none;\r\n          padding: 10px;\r\n          position: absolute;\r\n\r\n          .chrome-picker {\r\n            background-color: inherit !important;\r\n            border: none !important;\r\n            border-radius: 0 !important;\r\n            box-shadow: none !important;\r\n            font-family: inherit !important;\r\n\r\n            > div {\r\n              border-radius: 0 !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface InformationProps {\r\n  backgroundColor: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  gridSize: number;\r\n  height: number;\r\n  isInitialize: boolean;\r\n  onChange: InputProps['onChange'];\r\n  onChangeBackgroundColor: (color: ColorResult) => void;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst Information: React.SFC<InformationProps> = ({\r\n  backgroundColor,\r\n  gridSize,\r\n  height,\r\n  isInitialize,\r\n  onChange,\r\n  onChangeBackgroundColor,\r\n  overflow,\r\n  scale,\r\n  width\r\n}: InformationProps) => {\r\n  const { a, b, g, r } = backgroundColor;\r\n\r\n  return (\r\n    <Div>\r\n      {isInitialize && (\r\n        <dl>\r\n          <dt>width</dt>\r\n          <dd>\r\n            <Input\r\n              className=\"input\"\r\n              min={1}\r\n              name=\"width\"\r\n              onChange={onChange}\r\n              type=\"number\"\r\n              value={width}\r\n            />\r\n            px\r\n          </dd>\r\n          <dt>height</dt>\r\n          <dd>\r\n            <Input\r\n              className=\"input\"\r\n              min={1}\r\n              name=\"height\"\r\n              onChange={onChange}\r\n              type=\"number\"\r\n              value={height}\r\n            />\r\n            px\r\n          </dd>\r\n          <dt>scale</dt>\r\n          <dd>\r\n            <Input\r\n              className=\"input\"\r\n              min={0}\r\n              name=\"scale\"\r\n              onChange={onChange}\r\n              step={0.1}\r\n              type=\"number\"\r\n              value={scale}\r\n            />\r\n            px\r\n          </dd>\r\n          <dt>grid-size</dt>\r\n          <dd>\r\n            <Input\r\n              className=\"input\"\r\n              max={500}\r\n              min={0}\r\n              name=\"gridSize\"\r\n              onChange={onChange}\r\n              type=\"number\"\r\n              value={gridSize}\r\n            />\r\n            px\r\n          </dd>\r\n          <dt>background-color</dt>\r\n          <dd>\r\n            <div\r\n              className=\"background-color\"\r\n              style={{ backgroundColor: `rgba(${r},${g}, ${b},${a})` }}\r\n            >\r\n              <div className=\"picker\">\r\n                <ChromePicker\r\n                  color={backgroundColor}\r\n                  onChange={onChangeBackgroundColor}\r\n                />\r\n              </div>\r\n            </div>\r\n          </dd>\r\n          <dt>overflow</dt>\r\n          <dd>\r\n            <Input\r\n              defaultChecked={overflow}\r\n              name=\"overflow\"\r\n              onChange={onChange}\r\n              type=\"checkbox\"\r\n            />\r\n          </dd>\r\n        </dl>\r\n      )}\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  margin-bottom: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    border: 1px solid #ddd;\r\n    padding: 2.5px;\r\n\r\n    &.select {\r\n      border: solid #b33e5c 1px;\r\n    }\r\n\r\n    textarea {\r\n      border: 1px solid #ddd;\r\n      font-size: 1.2rem;\r\n      height: 50px;\r\n      min-height: 50px;\r\n      overflow-y: scroll;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n\r\n    .image {\r\n      background-position: center;\r\n      background-size: cover;\r\n      height: 50px;\r\n      overflow: hidden;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ImageLayer {\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  value: string;\r\n}\r\n\r\nexport interface LayersProps {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst Layers: React.SFC<LayersProps> = ({\r\n  index,\r\n  layers,\r\n  onChange,\r\n  onClick,\r\n  onFocus\r\n}: LayersProps) => (\r\n  <Ul>\r\n    {layers\r\n      .map((layer, layerIndex) => {\r\n        let v = <React.Fragment />;\r\n\r\n        if ('value' in layer) {\r\n          const { value } = layer;\r\n\r\n          v = (\r\n            <textarea\r\n              data-index={layerIndex}\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              value={value}\r\n            />\r\n          );\r\n        } else if ('url' in layer) {\r\n          const { url } = layer;\r\n\r\n          v = (\r\n            <div\r\n              className=\"image\"\r\n              data-index={layerIndex}\r\n              onClick={onClick}\r\n              style={{ backgroundImage: `url(${url})` }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return (\r\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\r\n            {v}\r\n          </li>\r\n        );\r\n      })\r\n      .reverse()}\r\n  </Ul>\r\n);\r\n\r\nexport default Layers;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  background-color: #bbb;\r\n  display: grid;\r\n  grid-auto-rows: 25px;\r\n  grid-gap: 5px;\r\n  grid-template-columns: repeat(auto-fill, 25px);\r\n  padding: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    button {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      .icon {\r\n        color: white;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LayerSettingProps {\r\n  children: React.ReactNodeArray;\r\n}\r\n\r\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\r\n  children\r\n}: LayerSettingProps) => (\r\n  <Ul>\r\n    {children.map((value, index) => (\r\n      <li key={index}>{value}</li>\r\n    ))}\r\n  </Ul>\r\n);\r\n\r\nexport default LayerSetting;\r\n","import * as React from 'react';\r\nimport { TiDownload } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DownloadButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DownloadButton: React.SFC<DownloadButtonProps> = (\r\n  props: DownloadButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDownload className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DownloadButton;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  position: relative;\r\n\r\n  &::before,\r\n  &::after {\r\n    background-color: #000;\r\n    display: block;\r\n    content: '';\r\n    left: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n  }\r\n\r\n  &::before {\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    height: 100%;\r\n    width: 1px;\r\n  }\r\n`;\r\n\r\nexport interface CloseButtonProps {\r\n  className?: string;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst CloseButton: React.SFC<CloseButtonProps> = (props: CloseButtonProps) => (\r\n  <Button {...props} />\r\n);\r\n\r\nexport default CloseButton;\r\n","import CloseButton, { CloseButtonProps } from 'components/atoms/CloseButton';\r\nimport * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .close-button {\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface PortalProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  onClickCloseButton?: CloseButtonProps['onClick'];\r\n}\r\n\r\nclass Portal extends React.Component<PortalProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { children, className, onClickCloseButton } = this.props;\r\n\r\n    return (\r\n      <Div className={`portal ${className}`}>\r\n        {children}\r\n        {onClickCloseButton ? (\r\n          <CloseButton className=\"close-button\" onClick={onClickCloseButton} />\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portal;\r\n","import DownloadButton from 'components/atoms/DownloadButton';\r\nimport Portal, { PortalProps } from 'components/templates/Portal';\r\nimport { saveAs } from 'file-saver';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  img {\r\n    max-height: 90%;\r\n    max-width: 90%;\r\n  }\r\n\r\n  .download-button {\r\n    bottom: 10px;\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface ImageProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  extension: 'jpg' | 'png' | 'svg';\r\n  src: string;\r\n}\r\n\r\nconst Image: React.SFC<ImageProps> = ({\r\n  extension,\r\n  onClickCloseButton,\r\n  src\r\n}: ImageProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <img src={src} />\r\n    <DownloadButton\r\n      className=\"download-button\"\r\n      onClick={() => {\r\n        saveAs(src, `image.${extension}`);\r\n      }}\r\n    />\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Image;\r\n","import * as React from 'react';\r\nimport { TiDocument } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\nimport { string } from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentButtonProps {\r\n  className?: string;\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentButton: React.SFC<DocumentButtonProps> = (\r\n  props: DocumentButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocument className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentButton;\r\n","import DocumentButton, {\r\n  DocumentButtonProps\r\n} from 'components/atoms/DocumentButton';\r\nimport Input from 'components/atoms/Input';\r\nimport Portal, { PortalProps } from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 227px;\r\n\r\n    dt:not(:first-child) {\r\n      margin-top: 15px;\r\n    }\r\n\r\n    dd {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n\r\n      .input {\r\n        width: 50px;\r\n      }\r\n\r\n      .picker .chrome-picker {\r\n        background-color: #fff !important;\r\n        border: 1px #ddd solid !important;\r\n        border-radius: 0 !important;\r\n        box-shadow: none !important;\r\n        font-family: inherit !important;\r\n\r\n        > div {\r\n          border-radius: 0 !important;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .document-button {\r\n    bottom: 10px;\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface NewProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  backgroundColor: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  changePreviewIsInitialize: (value: boolean) => void;\r\n  height: number;\r\n  onChangePreviewBackgroundColor: (color: ColorResult) => void;\r\n  onChangePreviewValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  width: number;\r\n}\r\n\r\nconst New: React.SFC<NewProps> = ({\r\n  backgroundColor,\r\n  changePreviewIsInitialize,\r\n  height,\r\n  onChangePreviewBackgroundColor,\r\n  onChangePreviewValue,\r\n  onClickCloseButton,\r\n  width\r\n}: NewProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <dl className=\"wrapper\">\r\n      <dt>width</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          onChange={onChangePreviewValue}\r\n          min={1}\r\n          name=\"width\"\r\n          type=\"number\"\r\n          value={width}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>height</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          onChange={onChangePreviewValue}\r\n          min={1}\r\n          name=\"height\"\r\n          type=\"number\"\r\n          value={height}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>background-color</dt>\r\n      <dd>\r\n        <div className=\"picker\">\r\n          <ChromePicker\r\n            color={backgroundColor}\r\n            onChange={onChangePreviewBackgroundColor}\r\n          />\r\n        </div>\r\n      </dd>\r\n    </dl>\r\n    <DocumentButton\r\n      className=\"document-button\"\r\n      disabled={!height || !width}\r\n      onClick={(e: ArgumentTypes<DocumentButtonProps['onClick']>[0]) => {\r\n        changePreviewIsInitialize(true);\r\n        onClickCloseButton(e);\r\n      }}\r\n    />\r\n  </StyledPortal>\r\n);\r\n\r\nexport default New;\r\n","import Portal from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport { DotLoader } from 'react-spinners';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  p {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst Loading: React.SFC = () => (\r\n  <StyledPortal>\r\n    <DotLoader color=\"#234794\" />\r\n    <p>Generating... wait a minutes.</p>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Loading;\r\n","import Image, { ImageProps } from 'components/templates/Image';\r\nimport New, { NewProps } from 'components/templates/New';\r\nimport Loading from 'components/templates/Loading';\r\nimport domtoimage from 'dom-to-image';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n\r\n  * {\r\n    cursor: default;\r\n  }\r\n\r\n  ul {\r\n    background-color: #fff;\r\n    border: 1px #ddd solid;\r\n    position: absolute;\r\n  }\r\n\r\n  li {\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    white-space: nowrap;\r\n\r\n    &:hover {\r\n      background-color: rgba(35, 71, 148, 0.1);\r\n\r\n      > ul > li {\r\n        display: flex;\r\n      }\r\n    }\r\n  }\r\n\r\n  > li {\r\n    display: flex;\r\n    height: 24px;\r\n    width: 50px;\r\n\r\n    > ul {\r\n      left: -1px;\r\n      top: 100%;\r\n\r\n      li {\r\n        display: none;\r\n        height: 25px;\r\n\r\n        > *:not(ul) {\r\n          align-items: center;\r\n          color: inherit;\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          padding: 0 30px 0 15px;\r\n          text-decoration: none;\r\n        }\r\n      }\r\n\r\n      > li > ul {\r\n        left: 100%;\r\n        top: 0;\r\n\r\n        &::after {\r\n          border-color: transparent transparent transparent black;\r\n          border-style: solid;\r\n          border-width: 4px 0 4px 4px;\r\n          content: '';\r\n          display: block;\r\n          height: 0;\r\n          left: -10px;\r\n          position: absolute;\r\n          top: 9px;\r\n          width: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface MenuProps\r\n  extends Pick<\r\n    NewProps,\r\n    | 'backgroundColor'\r\n    | 'changePreviewIsInitialize'\r\n    | 'height'\r\n    | 'onChangePreviewBackgroundColor'\r\n    | 'onChangePreviewValue'\r\n    | 'width'\r\n  > {\r\n  changePreviewOverflow: (value: boolean) => void;\r\n  overflow: boolean;\r\n}\r\n\r\ninterface MenuState {\r\n  extension?: ImageProps['extension'];\r\n  imageUrl: string;\r\n  isNew: boolean;\r\n  isShowLoading: boolean;\r\n}\r\n\r\nclass Menu extends React.Component<MenuProps, MenuState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: MenuProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      extension: undefined,\r\n      imageUrl: '',\r\n      isNew: false,\r\n      isShowLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\r\n    const { changePreviewOverflow, overflow } = this.props;\r\n    const { extension, isShowLoading } = this.state;\r\n\r\n    if (isShowLoading) {\r\n      if (overflow) {\r\n        changePreviewOverflow(false);\r\n\r\n        return;\r\n      }\r\n\r\n      const callback = (imageUrl: string) => {\r\n        this.setState(\r\n          {\r\n            imageUrl,\r\n            isShowLoading: false\r\n          },\r\n          () => {\r\n            if (prevOverflow) {\r\n              changePreviewOverflow(true);\r\n            }\r\n          }\r\n        );\r\n      };\r\n\r\n      if (extension === 'jpg') {\r\n        domtoimage.toJpeg(document.getElementById('capture')!).then(callback);\r\n      }\r\n\r\n      if (extension === 'png') {\r\n        domtoimage.toPng(document.getElementById('capture')!).then(callback);\r\n      }\r\n\r\n      if (extension === 'svg') {\r\n        domtoimage.toSvg(document.getElementById('capture')!).then(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { extension, imageUrl, isNew, isShowLoading } = this.state;\r\n\r\n    return (\r\n      <Ul>\r\n        <li>\r\n          <p>File</p>\r\n          <ul>\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ isNew: true });\r\n                }}\r\n              >\r\n                New\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <p>Save</p>\r\n              <ul>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'jpg',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    JPG\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'png',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    PNG\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'svg',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    SVG\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <p>Help</p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/piro0919/image-maker\" target=\"_blank\">\r\n                GitHub\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        {extension &&\r\n          imageUrl &&\r\n          ReactDOM.createPortal(\r\n            <Image\r\n              extension={extension}\r\n              onClickCloseButton={() => {\r\n                this.setState({ extension: undefined, imageUrl: '' });\r\n              }}\r\n              src={imageUrl}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isNew &&\r\n          ReactDOM.createPortal(\r\n            <New\r\n              {...this.props}\r\n              onClickCloseButton={() => {\r\n                this.setState({ isNew: false });\r\n              }}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isShowLoading && ReactDOM.createPortal(<Loading />, this.rootEl)}\r\n      </Ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import * as React from 'react';\r\nimport * as uniqid from 'uniqid';\r\n\r\nexport interface ImagePreviewProps {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface ImagePreviewState {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nclass ImagePreview extends React.Component<\r\n  ImagePreviewProps,\r\n  ImagePreviewState\r\n> {\r\n  id: string;\r\n\r\n  constructor(props: ImagePreviewProps) {\r\n    super(props);\r\n\r\n    this.id = uniqid();\r\n    this.state = {\r\n      height: 0,\r\n      width: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { url } = this.props;\r\n    const element = new Image();\r\n\r\n    element.onload = () => {\r\n      const { naturalHeight: height, naturalWidth: width } = element;\r\n\r\n      this.setState(\r\n        {\r\n          height,\r\n          width\r\n        },\r\n        () => {\r\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\r\n          const context = canvas.getContext('2d');\r\n          const image = new Image();\r\n\r\n          image.src = url;\r\n          image.onload = () => {\r\n            context!.drawImage(image, 0, 0, width, height);\r\n          };\r\n        }\r\n      );\r\n    };\r\n    element.src = url;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style: { rotate, scale, ...style }\r\n    } = this.props;\r\n    const { height, width } = this.state;\r\n\r\n    return (\r\n      <canvas\r\n        height={height}\r\n        id={this.id}\r\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\r\n        width={width}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface DivProps {\r\n  fontFamily: string;\r\n}\r\n\r\nconst Div = styled.div`\r\n  @font-face {\r\n    font-family: '${({ fontFamily }: DivProps) => fontFamily}';\r\n    src: url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.woff2') format('woff2'),\r\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.woff') format('woff'),\r\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.ttf') format('truetype');\r\n  }\r\n\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport interface TextPreviewProps {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n  };\r\n  value: string;\r\n}\r\n\r\nconst TextPreview: React.SFC<TextPreviewProps> = ({\r\n  style: {\r\n    color: { a, b, g, r },\r\n    fontFamily: { value: fontFamily },\r\n    fontSize,\r\n    fontWeight,\r\n    lineHeight,\r\n    opacity,\r\n    rotate\r\n  },\r\n  value\r\n}: TextPreviewProps) => (\r\n  <Div\r\n    fontFamily={fontFamily}\r\n    style={{\r\n      fontFamily,\r\n      fontWeight,\r\n      opacity,\r\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n      fontSize: `${fontSize}px`,\r\n      transform: `rotate(${rotate}deg)`\r\n    }}\r\n  >\r\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\r\n      <div\r\n        key={index}\r\n        style={{\r\n          height: `${lineHeight}px`,\r\n          lineHeight: `${lineHeight}px`\r\n        }}\r\n      >\r\n        {v}\r\n      </div>\r\n    ))}\r\n  </Div>\r\n);\r\n\r\nexport default TextPreview;\r\n","import ImagePreview, {\r\n  ImagePreviewProps\r\n} from 'components/molecules/ImagePreview';\r\nimport TextPreview, {\r\n  TextPreviewProps\r\n} from 'components/molecules/TextPreview';\r\nimport * as React from 'react';\r\nimport ReactScalableDraggable from 'react-scalable-draggable';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #bbb;\r\n  height: 100%;\r\n  overflow: scroll;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  .wrapper {\r\n    box-sizing: content-box;\r\n    left: 0;\r\n    padding: 50px;\r\n    position: absolute;\r\n    top: 0;\r\n    transform-origin: top left;\r\n\r\n    #capture {\r\n      height: inherit;\r\n      width: inherit;\r\n\r\n      .screen {\r\n        height: inherit;\r\n        position: relative;\r\n        width: inherit;\r\n\r\n        &::before {\r\n          background-image: url(${process.env.PUBLIC_URL}/images/grid.png);\r\n          background-repeat: repeat;\r\n          background-size: inherit;\r\n          content: '';\r\n          display: block;\r\n          height: 100%;\r\n          left: 0;\r\n          position: absolute;\r\n          top: 0;\r\n          width: 100%;\r\n        }\r\n\r\n        .draggable {\r\n          cursor: move;\r\n          position: absolute;\r\n          word-break: keep-all;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface PreviewProps {\r\n  layers: (ImagePreviewProps | TextPreviewProps)[];\r\n  preview: {\r\n    backgroundColor: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    gridSize: number;\r\n    height: number;\r\n    isInitialize: boolean;\r\n    overflow: boolean;\r\n    scale: number;\r\n    width: number;\r\n  };\r\n}\r\n\r\nconst Preview: React.SFC<PreviewProps> = ({\r\n  layers,\r\n  preview: {\r\n    backgroundColor: { a, b, g, r },\r\n    gridSize,\r\n    height,\r\n    isInitialize,\r\n    overflow,\r\n    scale,\r\n    width\r\n  }\r\n}) => {\r\n  const previews = layers.map(layer => {\r\n    const { id } = layer;\r\n\r\n    let node = <React.Fragment />;\r\n\r\n    if ('value' in layer) {\r\n      node = <TextPreview {...layer} />;\r\n    } else if ('url' in layer) {\r\n      node = <ImagePreview {...layer} />;\r\n    }\r\n\r\n    return (\r\n      <ReactScalableDraggable\r\n        className=\"draggable\"\r\n        key={id}\r\n        parentScale={scale}\r\n      >\r\n        {node}\r\n      </ReactScalableDraggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Div id=\"preview\">\r\n      <div\r\n        className=\"wrapper\"\r\n        style={{\r\n          height: `${height}px`,\r\n          transform: `scale(${scale})`,\r\n          width: `${width}px`\r\n        }}\r\n      >\r\n        <div id=\"capture\">\r\n          {isInitialize && (\r\n            <div\r\n              className=\"screen\"\r\n              style={{\r\n                backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n                backgroundSize: `${gridSize}px`,\r\n                overflow: overflow ? 'visible' : 'hidden'\r\n              }}\r\n            >\r\n              {previews}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import Input from 'components/atoms/Input';\r\nimport LayerStyles from 'components/molecules/LayerStyles';\r\nimport * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport Select from 'react-select';\r\nimport { Props } from 'react-select/lib/Select';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLayerStyles = styled(LayerStyles)`\r\n  .select {\r\n    width: 200px;\r\n  }\r\n\r\n  .input {\r\n    width: 50px;\r\n  }\r\n\r\n  .picker .chrome-picker {\r\n    background-color: #fff !important;\r\n    border: 1px #ddd solid !important;\r\n    border-radius: 0 !important;\r\n    box-shadow: none !important;\r\n    font-family: inherit !important;\r\n\r\n    > div {\r\n      border-radius: 0 !important;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface TextLayerStylesProps {\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  fontFamily: {\r\n    label: string;\r\n    value: string;\r\n  };\r\n  fonts: Font[];\r\n  fontSize: number;\r\n  fontWeight: number;\r\n  lineHeight: number;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeColor: (color: ColorResult) => void;\r\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n}\r\n\r\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\r\n  color,\r\n  fontFamily,\r\n  fonts,\r\n  fontSize,\r\n  fontWeight,\r\n  lineHeight,\r\n  onChange,\r\n  onChangeColor,\r\n  onChangeFontFamily,\r\n  opacity,\r\n  rotate\r\n}: TextLayerStylesProps) => (\r\n  <StyledLayerStyles>\r\n    {[\r\n      {\r\n        name: 'color',\r\n        node: (\r\n          <div className=\"picker\">\r\n            <ChromePicker color={color} onChange={onChangeColor} />\r\n          </div>\r\n        )\r\n      },\r\n      {\r\n        name: 'font-family',\r\n        node: (\r\n          <Select\r\n            className=\"select\"\r\n            onChange={onChangeFontFamily}\r\n            options={fonts.map(({ fontFamily: value, name: label }) => ({\r\n              label,\r\n              value\r\n            }))}\r\n            value={fontFamily}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'font-size',\r\n        node: (\r\n          <React.Fragment>\r\n            <Input\r\n              className=\"input\"\r\n              min={0}\r\n              name=\"fontSize\"\r\n              onChange={onChange}\r\n              type=\"number\"\r\n              value={fontSize}\r\n            />\r\n            px\r\n          </React.Fragment>\r\n        )\r\n      },\r\n      {\r\n        name: 'font-weight',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            max={900}\r\n            min={100}\r\n            name=\"fontWeight\"\r\n            onChange={onChange}\r\n            step={100}\r\n            type=\"number\"\r\n            value={fontWeight}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'line-height',\r\n        node: (\r\n          <React.Fragment>\r\n            <Input\r\n              className=\"input\"\r\n              min={0}\r\n              name=\"lineHeight\"\r\n              onChange={onChange}\r\n              type=\"number\"\r\n              value={lineHeight}\r\n            />\r\n            px\r\n          </React.Fragment>\r\n        )\r\n      },\r\n      {\r\n        name: 'opacity',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            max={1}\r\n            min={0}\r\n            name=\"opacity\"\r\n            onChange={onChange}\r\n            step={0.01}\r\n            type=\"number\"\r\n            value={opacity}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'rotate',\r\n        node: (\r\n          <React.Fragment>\r\n            <Input\r\n              className=\"input\"\r\n              name=\"rotate\"\r\n              onChange={onChange}\r\n              step={0.1}\r\n              type=\"number\"\r\n              value={rotate}\r\n            />\r\n            deg\r\n          </React.Fragment>\r\n        )\r\n      }\r\n    ]}\r\n  </StyledLayerStyles>\r\n);\r\n\r\nexport default TextLayerStyles;\r\n","import Portal, { PortalProps } from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport ReactDropzone, {\r\n  DropzoneProps as ReactDropzoneProps\r\n} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    align-items: center;\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: center;\r\n    width: 100%;\r\n\r\n    img {\r\n      height: calc(231px / 3);\r\n      opacity: 0.75;\r\n      width: calc(289px / 3);\r\n    }\r\n\r\n    p {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DropzoneProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  onDrop: ReactDropzoneProps['onDrop'];\r\n}\r\n\r\nconst Dropzone: React.SFC<DropzoneProps> = ({\r\n  onClickCloseButton,\r\n  onDrop\r\n}: DropzoneProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\r\n      {({ getRootProps, getInputProps, isDragActive }) => (\r\n        <div {...getRootProps()} className=\"wrapper\">\r\n          <input {...getInputProps()} />\r\n          <img src={`${process.env.PUBLIC_URL}/images/dd.png`} />\r\n          <p>\r\n            {isDragActive\r\n              ? 'Drop files here...'\r\n              : 'Try dropping some image files here, or click to select files to upload.'}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </ReactDropzone>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Dropzone;\r\n","import Portal from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    height: 360px;\r\n    position: relative;\r\n    width: 640px;\r\n\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n\r\n    p {\r\n      bottom: 80px;\r\n      color: #ef64a0;\r\n      font-size: 1.2em;\r\n      position: absolute;\r\n      right: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LogoProps {\r\n  loading: number;\r\n}\r\n\r\nconst Logo: React.SFC<LogoProps> = ({ loading }: LogoProps) => (\r\n  <StyledPortal>\r\n    <div className=\"wrapper\">\r\n      <img src={`${process.env.PUBLIC_URL}/images/top.png`} />\r\n      <p>loading... {loading}%</p>\r\n    </div>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Logo;\r\n","import setFonts from 'actions/fonts/setFonts';\r\nimport addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\r\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\r\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\r\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\r\nimport ImageButton from 'components/atoms/ImageButton';\r\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\r\nimport Information, {\r\n  InformationProps\r\n} from 'components/organisms/Information';\r\nimport Layers, { LayersProps } from 'components/organisms/Layers';\r\nimport LayerSetting from 'components/organisms/LayerSetting';\r\nimport Menu, { MenuProps } from 'components/organisms/Menu';\r\nimport Preview from 'components/organisms/Preview';\r\nimport TextLayerStyles, {\r\n  TextLayerStylesProps\r\n} from 'components/organisms/TextLayerStyles';\r\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\r\nimport Logo from 'components/templates/Logo';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { State } from 'reducers';\r\nimport { Dispatch } from 'redux';\r\nimport styled from 'styled-components';\r\nimport * as WebFont from 'webfontloader';\r\n\r\nconst Div = styled.div`\r\n  background-color: #fbfbfb;\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 275px 1fr 200px;\r\n  grid-template-rows: 25px 1fr;\r\n\r\n  .header {\r\n    border-bottom: 1px #ddd inset;\r\n    grid-column: 1 / 4;\r\n    z-index: 2;\r\n  }\r\n\r\n  .detail {\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  .preview {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-rows: 1fr 20px;\r\n    padding: 5px;\r\n  }\r\n\r\n  .side-layers {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .layers {\r\n      flex-basis: 0;\r\n      flex-grow: 1;\r\n      overflow-y: scroll;\r\n      padding: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PagesProps\r\n  extends ReturnType<typeof mapDispatchToProps>,\r\n    ReturnType<typeof mapStateToProps>,\r\n    RouteComponentProps {}\r\n\r\ninterface PagesState {\r\n  isShowDropzone: boolean;\r\n  isShowLogo: boolean;\r\n  loading: number;\r\n}\r\n\r\nclass Pages extends React.Component<PagesProps, PagesState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: PagesProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      isShowDropzone: false,\r\n      // isShowLogo: true,\r\n      isShowLogo: process.env.NODE_ENV !== 'development',\r\n      loading: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFonts } = this.props;\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open('GET', `${process.env.PUBLIC_URL}/jsons/fonts.json`, true);\r\n    request.responseType = 'blob';\r\n    request.onload = ({ target: { response } }: any) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = ({ target: { result } }: any) => {\r\n        const fonts: Font[] = JSON.parse(result);\r\n\r\n        let counter = 0;\r\n\r\n        setFonts(fonts);\r\n\r\n        WebFont.load({\r\n          active: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false, loading: 100 });\r\n            }, 1000);\r\n          },\r\n          classes: false,\r\n          custom: {\r\n            families: fonts.map(({ fontFamily }) => fontFamily)\r\n          },\r\n          fontactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.floor((counter / fonts.length) * 100)\r\n            });\r\n          },\r\n          fontinactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.floor((counter / fonts.length) * 100)\r\n            });\r\n          },\r\n          inactive: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false, loading: 100 });\r\n            }, 1000);\r\n          }\r\n        });\r\n      };\r\n      reader.readAsText(response);\r\n    };\r\n    request.send();\r\n  }\r\n\r\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\r\n    const { layers } = this.props;\r\n    const { isShowDropzone } = this.state;\r\n\r\n    if (isShowDropzone && prevLayers.length !== layers.length) {\r\n      this.setState({ isShowDropzone: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addImageLayers,\r\n      addTextLayer,\r\n      changeColor,\r\n      changeFontFamily,\r\n      changePreviewBackgroundColor,\r\n      changePreviewIsInitialize,\r\n      changePreviewOverflow,\r\n      changePreviewValue,\r\n      changeStyle,\r\n      changeValue,\r\n      downLayer,\r\n      fonts,\r\n      index,\r\n      layers,\r\n      preview,\r\n      removeLayer,\r\n      selectLayer,\r\n      upLayer\r\n    } = this.props;\r\n    const { isShowDropzone, isShowLogo, loading } = this.state;\r\n    const { isInitialize } = preview;\r\n\r\n    let styles = <React.Fragment />;\r\n\r\n    if (index !== undefined) {\r\n      const layer = layers[index];\r\n\r\n      if ('value' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = (\r\n          <TextLayerStyles\r\n            {...style}\r\n            fonts={fonts}\r\n            onChange={changeStyle}\r\n            onChangeColor={changeColor}\r\n            onChangeFontFamily={changeFontFamily}\r\n          />\r\n        );\r\n      } else if ('url' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Div>\r\n        <header className=\"header\">\r\n          <Menu\r\n            {...preview}\r\n            changePreviewOverflow={changePreviewOverflow}\r\n            onChangePreviewBackgroundColor={changePreviewBackgroundColor}\r\n            changePreviewIsInitialize={changePreviewIsInitialize}\r\n            onChangePreviewValue={changePreviewValue}\r\n          />\r\n        </header>\r\n        <aside className=\"detail\">{styles}</aside>\r\n        <div className=\"preview\">\r\n          <Preview layers={layers} preview={preview} />\r\n          <Information\r\n            {...preview}\r\n            onChange={changePreviewValue}\r\n            onChangeBackgroundColor={changePreviewBackgroundColor}\r\n          />\r\n        </div>\r\n        <aside className=\"side-layers\">\r\n          <LayerSetting>\r\n            {[\r\n              <DocumentAddButton\r\n                disabled={!isInitialize}\r\n                key=\"add\"\r\n                onClick={addTextLayer}\r\n              />,\r\n              <DocumentDeleteButton\r\n                disabled={!isInitialize || index === undefined}\r\n                key=\"delete\"\r\n                onClick={removeLayer}\r\n              />,\r\n              <ImageButton\r\n                disabled={!isInitialize}\r\n                key=\"image\"\r\n                onClick={() => {\r\n                  this.setState({ isShowDropzone: true });\r\n                }}\r\n              />,\r\n              <ArrowUpOutlineButton\r\n                disabled={\r\n                  !isInitialize ||\r\n                  index === undefined ||\r\n                  index === layers.length - 1\r\n                }\r\n                key=\"up\"\r\n                onClick={upLayer}\r\n              />,\r\n              <ArrowDownOutlineButton\r\n                disabled={!isInitialize || !index}\r\n                key=\"down\"\r\n                onClick={downLayer}\r\n              />\r\n            ]}\r\n          </LayerSetting>\r\n          <div className=\"layers\">\r\n            <Layers\r\n              index={index}\r\n              layers={layers}\r\n              onChange={changeValue}\r\n              onClick={selectLayer}\r\n              onFocus={selectLayer}\r\n            />\r\n          </div>\r\n        </aside>\r\n        {isShowDropzone &&\r\n          ReactDOM.createPortal(\r\n            <Dropzone\r\n              onClickCloseButton={() => {\r\n                this.setState({ isShowDropzone: false });\r\n              }}\r\n              onDrop={addImageLayers}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isShowLogo &&\r\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  addImageLayers: (\r\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\r\n  ) => {\r\n    acceptedFiles.forEach(acceptedFile => {\r\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\r\n    });\r\n  },\r\n  addTextLayer: () => dispatch(addTextLayer()),\r\n  changeColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changeStyle({ value, name: 'color' })),\r\n  changeFontFamily: (\r\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\r\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\r\n  changePreviewBackgroundColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changePreviewValue({ value, name: 'backgroundColor' })),\r\n  changePreviewIsInitialize: (\r\n    value: ArgumentTypes<MenuProps['changePreviewIsInitialize']>[0]\r\n  ) => dispatch(changePreviewValue({ value, name: 'isInitialize' })),\r\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\r\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\r\n  changePreviewValue: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeStyle: ({\r\n    currentTarget: { name, value }\r\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\r\n    dispatch(changeStyle({ name, value })),\r\n  changeValue: ({\r\n    target: { value }\r\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n    dispatch(changeValue({ value })),\r\n  downLayer: () => dispatch(downLayer()),\r\n  removeLayer: () => dispatch(removeLayer()),\r\n  selectLayer: ({\r\n    currentTarget: { dataset }\r\n  }:\r\n    | ArgumentTypes<LayersProps['onClick']>[0]\r\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\r\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\r\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\r\n  upLayer: () => dispatch(upLayer())\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  fonts: { fonts },\r\n  layer: { index, layers },\r\n  preview\r\n}: State) => ({\r\n  fonts,\r\n  index,\r\n  layers,\r\n  preview\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pages);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface FontsState {\r\n  fonts: Font[];\r\n}\r\n\r\nconst initialState: FontsState = {\r\n  fonts: []\r\n};\r\n\r\nconst fonts = reducerWithInitialState(initialState).case(\r\n  setFonts,\r\n  (state, { fonts }) => ({ ...state, fonts })\r\n);\r\n\r\nexport default fonts;\r\n","import addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport * as uniqid from 'uniqid';\r\n\r\ninterface ImageLayer {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface TextShadow {\r\n  blurRadius: number;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  hShadow: number;\r\n  vShadow: number;\r\n}\r\n\r\ninterface TextLayer {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n    textShadows: TextShadow[];\r\n  };\r\n  value: string;\r\n}\r\n\r\nexport interface LayerState {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n}\r\n\r\nconst initialState: LayerState = {\r\n  index: undefined,\r\n  layers: []\r\n};\r\n\r\nconst layer = reducerWithInitialState(initialState)\r\n  .case(addImageLayer, (state, { url }) => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      url,\r\n      id: uniqid(),\r\n      style: {\r\n        opacity: 1,\r\n        rotate: 0,\r\n        scale: 1\r\n      }\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(addTextLayer, state => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      id: uniqid(),\r\n      style: {\r\n        color: {\r\n          a: 1,\r\n          b: 0,\r\n          g: 0,\r\n          r: 0\r\n        },\r\n        fontFamily: {\r\n          label: 'バンバン',\r\n          value: 'BANBAN-FREE'\r\n        },\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        lineHeight: 16,\r\n        opacity: 1,\r\n        rotate: 0,\r\n        textShadows: []\r\n      },\r\n      value: ''\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeStyle, (state, { name, value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    if (name === 'fontSize' || name === 'fontWeight' || name === 'lineHeight') {\r\n      layers[index].style[name] = parseInt(value, 10);\r\n    } else if (name === 'opacity' || name === 'rotate' || name === 'scale') {\r\n      layers[index].style[name] = parseFloat(value);\r\n    } else {\r\n      layers[index].style[name] = value;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeValue, (state, { value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const layer = layers[index];\r\n\r\n    if ('value' in layer) {\r\n      layer.value = value;\r\n\r\n      layers[index] = layer;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(downLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index - 1];\r\n    layers[index - 1] = tmpLayer;\r\n\r\n    return { ...state, index: index - 1, layers };\r\n  })\r\n  .case(removeLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n\r\n    if (index === undefined) {\r\n      return state;\r\n    }\r\n\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.splice(index, 1);\r\n\r\n    return {\r\n      layers,\r\n      index: undefined\r\n    };\r\n  })\r\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\r\n  .case(upLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index + 1];\r\n    layers[index + 1] = tmpLayer;\r\n\r\n    return { ...state, index: index + 1, layers };\r\n  });\r\n\r\nexport default layer;\r\n","import changeValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface PreviewState {\r\n  backgroundColor: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  gridSize: number;\r\n  height: number;\r\n  isInitialize: boolean;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst initialState: PreviewState = {\r\n  backgroundColor: {\r\n    a: 1,\r\n    b: 255,\r\n    g: 255,\r\n    r: 255\r\n  },\r\n  gridSize: 0,\r\n  height: 1,\r\n  isInitialize: false,\r\n  overflow: false,\r\n  scale: 1,\r\n  width: 1\r\n};\r\n\r\nconst preview = reducerWithInitialState(initialState).case(\r\n  changeValue,\r\n  (state, { name, value: newValue }) => {\r\n    let value;\r\n\r\n    if (name === 'gridSize' || name === 'height' || name === 'width') {\r\n      value = parseInt(newValue as string, 10);\r\n    } else if (name === 'scale') {\r\n      value = parseFloat(newValue as string);\r\n    } else {\r\n      value = newValue;\r\n    }\r\n\r\n    return { ...state, ...{ [name]: value } };\r\n  }\r\n);\r\n\r\nexport default preview;\r\n","import { combineReducers } from 'redux';\r\nimport fonts, { FontsState } from './fonts';\r\nimport layer, { LayerState } from './layer';\r\nimport preview, { PreviewState } from './preview';\r\n\r\nexport interface State {\r\n  fonts: FontsState;\r\n  layer: LayerState;\r\n  preview: PreviewState;\r\n}\r\n\r\nconst reducers = () => combineReducers({ fonts, layer, preview });\r\n\r\nexport default reducers;\r\n","import Pages from 'containers/pages';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport 'ress';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers());\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\r\n    font-size: 62.5%;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    height: 100%;\r\n    line-height: 1.2;\r\n    overflow: hidden !important;\r\n    -webkit-overflow-scrolling: touch;\r\n    width: 100%;\r\n  \r\n    body {\r\n      font-size: 1.2rem;\r\n      height: 100%;\r\n      width: 100%;\r\n    \r\n      #root {\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        * {\r\n          appearance: none;\r\n          \r\n          &:focus {\r\n            outline: none;\r\n          }\r\n        }\r\n  \r\n        a {\r\n          line-height: 0;\r\n        }\r\n\r\n        ul {\r\n          list-style: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter\r\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\r\n    >\r\n      <Switch>\r\n        <Route component={Pages} exact={true} path=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n    <GlobalStyle />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}