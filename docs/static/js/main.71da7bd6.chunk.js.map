{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/Input/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/templates/Image/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","changeStyle","changeValue","downLayer","removeLayer","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","StyledInput","input","Input_templateObject","Input","Dl","ul","ImageLayerStyles_templateObject","ImageLayerStyles","_ref","onChange","opacity","rotate","scale","atoms_Input","max","min","name","step","type","value","Div","div","Information_templateObject","Information","backgroundColor","gridSize","height","onChangeBackgroundColor","overflow","width","a","b","g","r","style","concat","react_color_lib","color","defaultChecked","Ul","Layers_templateObject","Layers","index","layers","onClick","onFocus","map","layer","layerIndex","v","data-index","url","backgroundImage","key","reverse","LayerSetting_templateObject","LayerSetting","children","LayerSetting_Ul","Image_templateObject","Image","$","css","src","this","Image_Div","React","Loading_templateObject","Loading","Loading_Div","react_spinners","Menu_templateObject","Menu","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","imageUrl","isShowLoading","_this2","prevOverflow","_this$props","changePreviewOverflow","domtoimage","toPng","then","setState","_this3","_this$state","Menu_Ul","href","target","ReactDOM","templates_Image","templates_Loading","ImagePreview","id","uniqid","element","onload","naturalHeight","naturalWidth","context","getContext","image","drawImage","_this$props$style","objectWithoutProperties","objectSpread","transform","TextPreview_templateObject","TextPreview","_ref$style","_ref$style$color","fontFamily","fontSize","fontWeight","lineHeight","TextPreview_Div","split","Preview_templateObject","process","Preview","_ref$preview","preview","_ref$preview$backgrou","previews","node","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","TextLayerStyles_Dl","react_select_esm","options","_ref2","label","Dropzone_templateObject","Dropzone","onClickCloseButton","onDrop","Dropzone_Div","es","accept","getRootProps","getInputProps","isDragActive","assign","Logo_templateObject","Logo","loading","Logo_Div","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","reader","FileReader","result","JSON","parse","createElement","counter","appendChild","createTextNode","_ref3","join","head","WebFont","active","setTimeout","classes","custom","families","_ref4","fontactive","familyName","fvd","Math","floor","length","fontinactive","readAsText","send","prevLayers","_ref5","addImageLayers","changeColor","changeFontFamily","changePreviewBackgroundColor","changePreviewValue","styles","undefined","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","organisms_Menu","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","disabled","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref12","_ref12$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","_ref6","rgb","_ref7","_ref8","_ref8$currentTarget","currentTarget","checked","_ref9","_ref9$currentTarget","_ref10","_ref11","dataset","parseInt","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","parseFloat","tmpLayer","splice","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.71da7bd6.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\r\n\r\nexport default setFonts;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\r\n\r\nexport default addImageLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\r\n\r\nexport default addTextLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeStyle = actionCreator<{ name: string; value: any }>(\r\n  'LAYER.CHANGE_STYLE'\r\n);\r\n\r\nexport default changeStyle;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\r\n\r\nexport default changeValue;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\r\n\r\nexport default downLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\r\n\r\nexport default removeLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\r\n\r\nexport default selectLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst upLayer = actionCreator('LAYER.UP_LAYER');\r\n\r\nexport default upLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ name: string; value: any }>(\r\n  'PREVIEW.CHANGE_VALUE'\r\n);\r\n\r\nexport default changeValue;\r\n","import * as React from 'react';\r\nimport { TiArrowUpOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowUpOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\r\n  props: ArrowUpOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowUpOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowUpOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiArrowDownOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowDownOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\r\n  props: ArrowDownOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowDownOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowDownOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentAddButtonProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\r\n  props: DocumentAddButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentAdd className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentAddButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentDelete } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentDeleteButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\r\n  props: DocumentDeleteButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentDelete className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentDeleteButton;\r\n","import * as React from 'react';\r\nimport { TiImage } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ImageButtonProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\r\n  <Button {...props}>\r\n    <TiImage className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ImageButton;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  background-color: #fff;\r\n  border: 1px #ddd solid;\r\n\r\n  &[type='checkbox'] {\r\n    height: 15px;\r\n    width: 15px;\r\n\r\n    &:checked {\r\n      background-color: #bbb;\r\n    }\r\n  }\r\n\r\n  &[type='number'] {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport interface InputProps {\r\n  defaultChecked?: boolean;\r\n  className?: string;\r\n  max?: number;\r\n  min?: number;\r\n  name: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  step?: number;\r\n  type: string;\r\n  value?: number | string;\r\n}\r\n\r\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\r\n  <StyledInput {...props} />\r\n);\r\n\r\nexport default Input;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.ul`\r\n  dt:not(:first-child) {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n\r\n    .input {\r\n      width: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ImageLayerStylesProps {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n  scale: number;\r\n}\r\n\r\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\r\n  onChange,\r\n  opacity,\r\n  rotate,\r\n  scale\r\n}: ImageLayerStylesProps) => (\r\n  <Dl>\r\n    <dt>opacity</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={1}\r\n        min={0}\r\n        name=\"opacity\"\r\n        onChange={onChange}\r\n        step={0.01}\r\n        type=\"number\"\r\n        value={opacity}\r\n      />\r\n    </dd>\r\n    <dt>rotate</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name=\"rotate\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={rotate}\r\n      />\r\n      deg\r\n    </dd>\r\n    <dt>scale</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"scale\"\r\n        onChange={onChange}\r\n        step={0.01}\r\n        type=\"number\"\r\n        value={scale}\r\n      />\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default ImageLayerStyles;\r\n","import Input, { InputProps } from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  dl {\r\n    align-items: center;\r\n    display: flex;\r\n\r\n    dt:not(:first-child) {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    dd {\r\n      align-items: center;\r\n      display: flex;\r\n      margin-left: 5px;\r\n\r\n      .input {\r\n        width: 60px;\r\n      }\r\n\r\n      .background-color {\r\n        border: 1px #ddd solid;\r\n        display: flex;\r\n        height: 15px;\r\n        justify-content: center;\r\n        position: relative;\r\n        width: 15px;\r\n\r\n        &:hover .picker {\r\n          display: block;\r\n        }\r\n\r\n        .picker {\r\n          background-color: #fff;\r\n          border: 1px #ddd solid;\r\n          bottom: 100%;\r\n          display: none;\r\n          padding: 10px;\r\n          position: absolute;\r\n\r\n          .chrome-picker {\r\n            background-color: inherit !important;\r\n            border: none !important;\r\n            border-radius: 0 !important;\r\n            box-shadow: none !important;\r\n            font-family: inherit !important;\r\n\r\n            > div {\r\n              border-radius: 0 !important;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface InformationProps {\r\n  backgroundColor: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  gridSize: number;\r\n  height: number;\r\n  onChange: InputProps['onChange'];\r\n  onChangeBackgroundColor: (color: ColorResult) => void;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst Information: React.SFC<InformationProps> = ({\r\n  backgroundColor,\r\n  gridSize,\r\n  height,\r\n  onChange,\r\n  onChangeBackgroundColor,\r\n  overflow,\r\n  scale,\r\n  width\r\n}: InformationProps) => {\r\n  const { a, b, g, r } = backgroundColor;\r\n\r\n  return (\r\n    <Div>\r\n      <dl>\r\n        <dt>width</dt>\r\n        <dd>\r\n          <Input\r\n            className=\"input\"\r\n            min={0}\r\n            name=\"width\"\r\n            onChange={onChange}\r\n            type=\"number\"\r\n            value={width}\r\n          />\r\n          px\r\n        </dd>\r\n        <dt>height</dt>\r\n        <dd>\r\n          <Input\r\n            className=\"input\"\r\n            min={0}\r\n            name=\"height\"\r\n            onChange={onChange}\r\n            type=\"number\"\r\n            value={height}\r\n          />\r\n          px\r\n        </dd>\r\n        <dt>scale</dt>\r\n        <dd>\r\n          <Input\r\n            className=\"input\"\r\n            min={0}\r\n            name=\"scale\"\r\n            onChange={onChange}\r\n            step={0.1}\r\n            type=\"number\"\r\n            value={scale}\r\n          />\r\n          px\r\n        </dd>\r\n        <dt>grid-size</dt>\r\n        <dd>\r\n          <Input\r\n            className=\"input\"\r\n            max={500}\r\n            min={0}\r\n            name=\"gridSize\"\r\n            onChange={onChange}\r\n            type=\"number\"\r\n            value={gridSize}\r\n          />\r\n          px\r\n        </dd>\r\n        <dt>background-color</dt>\r\n        <dd>\r\n          <div\r\n            className=\"background-color\"\r\n            style={{ backgroundColor: `rgba(${r},${g}, ${b},${a})` }}\r\n          >\r\n            <div className=\"picker\">\r\n              <ChromePicker\r\n                color={backgroundColor}\r\n                onChange={onChangeBackgroundColor}\r\n              />\r\n            </div>\r\n          </div>\r\n        </dd>\r\n        <dt>overflow</dt>\r\n        <dd>\r\n          <Input\r\n            defaultChecked={overflow}\r\n            name=\"overflow\"\r\n            onChange={onChange}\r\n            type=\"checkbox\"\r\n          />\r\n        </dd>\r\n      </dl>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  margin-bottom: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    border: 1px solid #ddd;\r\n    padding: 2.5px;\r\n\r\n    &.select {\r\n      border: solid #b33e5c 1px;\r\n    }\r\n\r\n    textarea {\r\n      border: 1px solid #ddd;\r\n      font-size: 1.2rem;\r\n      height: 50px;\r\n      min-height: 50px;\r\n      overflow-y: scroll;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n\r\n    .image {\r\n      background-position: center;\r\n      background-size: cover;\r\n      height: 50px;\r\n      overflow: hidden;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ImageLayer {\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  value: string;\r\n}\r\n\r\nexport interface LayersProps {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst Layers: React.SFC<LayersProps> = ({\r\n  index,\r\n  layers,\r\n  onChange,\r\n  onClick,\r\n  onFocus\r\n}: LayersProps) => (\r\n  <Ul>\r\n    {layers\r\n      .map((layer, layerIndex) => {\r\n        let v = <React.Fragment />;\r\n\r\n        if ('value' in layer) {\r\n          const { value } = layer;\r\n\r\n          v = (\r\n            <textarea\r\n              data-index={layerIndex}\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              value={value}\r\n            />\r\n          );\r\n        } else if ('url' in layer) {\r\n          const { url } = layer;\r\n\r\n          v = (\r\n            <div\r\n              className=\"image\"\r\n              data-index={layerIndex}\r\n              onClick={onClick}\r\n              style={{ backgroundImage: `url(${url})` }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return (\r\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\r\n            {v}\r\n          </li>\r\n        );\r\n      })\r\n      .reverse()}\r\n  </Ul>\r\n);\r\n\r\nexport default Layers;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  background-color: #bbb;\r\n  display: grid;\r\n  grid-auto-rows: 25px;\r\n  grid-gap: 5px;\r\n  grid-template-columns: repeat(auto-fill, 25px);\r\n  padding: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    button {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      .icon {\r\n        color: white;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LayerSettingProps {\r\n  children: React.ReactNodeArray;\r\n}\r\n\r\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\r\n  children\r\n}: LayerSettingProps) => (\r\n  <Ul>\r\n    {children.map((value, index) => (\r\n      <li key={index}>{value}</li>\r\n    ))}\r\n  </Ul>\r\n);\r\n\r\nexport default LayerSetting;\r\n","import * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n`;\r\n\r\nexport interface ImageProps {\r\n  src: string;\r\n}\r\n\r\nclass Image extends React.Component<ImageProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { src } = this.props;\r\n\r\n    return (\r\n      <Div className=\"portal\">\r\n        <img src={src} />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport { DotLoader } from 'react-spinners';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  p {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nclass Loading extends React.Component {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Div className=\"portal\">\r\n        <DotLoader color=\"#234794\" />\r\n        <p>Generating... wait a minutes.</p>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Loading;\r\n","import Image from 'components/templates/Image';\r\nimport Loading from 'components/templates/Loading';\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n  font-size: 1.2rem;\r\n\r\n  > li {\r\n    position: relative;\r\n\r\n    &:hover {\r\n      background-color: #fff;\r\n\r\n      > ul {\r\n        display: block;\r\n      }\r\n    }\r\n\r\n    > p {\r\n      align-items: center;\r\n      display: flex;\r\n      height: 24px;\r\n      justify-content: center;\r\n      width: 50px;\r\n    }\r\n\r\n    > ul {\r\n      background-color: #fff;\r\n      border: 1px #ddd solid;\r\n      display: none;\r\n      left: -1px;\r\n      position: absolute;\r\n      top: 100%;\r\n\r\n      > li {\r\n        > a,\r\n        > button,\r\n        > p {\r\n          align-items: center;\r\n          display: flex;\r\n          height: 25px;\r\n          padding: 0 30px 0 15px;\r\n          white-space: nowrap;\r\n        }\r\n\r\n        > a {\r\n          color: inherit;\r\n          text-decoration: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface MenuProps {\r\n  changePreviewOverflow: (value: boolean) => void;\r\n  overflow: boolean;\r\n}\r\n\r\ninterface MenuState {\r\n  imageUrl: string;\r\n  isShowLoading: boolean;\r\n}\r\n\r\nclass Menu extends React.Component<MenuProps, MenuState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: MenuProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      imageUrl: '',\r\n      isShowLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\r\n    const { changePreviewOverflow, overflow } = this.props;\r\n    const { isShowLoading } = this.state;\r\n\r\n    if (isShowLoading) {\r\n      if (overflow) {\r\n        changePreviewOverflow(false);\r\n\r\n        return;\r\n      }\r\n\r\n      // domtoimage.toBlob(document.getElementById('capture')!).then(blob => {\r\n      //   saveAs(blob, 'image.png');\r\n\r\n      //   this.setState(\r\n      //     {\r\n      //       isShowLoading: false\r\n      //     },\r\n      //     () => {\r\n      //       if (prevOverflow) {\r\n      //         changePreviewOverflow(true);\r\n      //       }\r\n      //     }\r\n      //   );\r\n      // });\r\n\r\n      domtoimage.toPng(document.getElementById('capture')!).then(imageUrl => {\r\n        this.setState(\r\n          {\r\n            imageUrl,\r\n            isShowLoading: false\r\n          },\r\n          () => {\r\n            if (prevOverflow) {\r\n              changePreviewOverflow(true);\r\n            }\r\n          }\r\n        );\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { imageUrl, isShowLoading } = this.state;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Ul>\r\n          <li>\r\n            <p>File</p>\r\n            <ul>\r\n              <li>\r\n                <button\r\n                  onClick={() => {\r\n                    this.setState({ isShowLoading: true });\r\n                  }}\r\n                >\r\n                  Save\r\n                </button>\r\n              </li>\r\n              {/* <li>\r\n          <p>Save As...</p>\r\n        </li> */}\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            <p>Help</p>\r\n            <ul>\r\n              <li>\r\n                <a\r\n                  href=\"https://github.com/piro0919/image-maker\"\r\n                  target=\"_blank\"\r\n                >\r\n                  GitHub\r\n                </a>\r\n              </li>\r\n              {/* <li>\r\n                <p>About Image Maker</p>\r\n              </li> */}\r\n            </ul>\r\n          </li>\r\n        </Ul>\r\n        {imageUrl ? (\r\n          ReactDOM.createPortal(<Image src={imageUrl} />, this.rootEl)\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n        {isShowLoading ? (\r\n          ReactDOM.createPortal(<Loading />, this.rootEl)\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import * as React from 'react';\r\nimport * as uniqid from 'uniqid';\r\n\r\nexport interface ImagePreviewProps {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface ImagePreviewState {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nclass ImagePreview extends React.Component<\r\n  ImagePreviewProps,\r\n  ImagePreviewState\r\n> {\r\n  id: string;\r\n\r\n  constructor(props: ImagePreviewProps) {\r\n    super(props);\r\n\r\n    this.id = uniqid();\r\n    this.state = {\r\n      height: 0,\r\n      width: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { url } = this.props;\r\n    const element = new Image();\r\n\r\n    element.onload = () => {\r\n      const { naturalHeight: height, naturalWidth: width } = element;\r\n\r\n      this.setState(\r\n        {\r\n          height,\r\n          width\r\n        },\r\n        () => {\r\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\r\n          const context = canvas.getContext('2d');\r\n          const image = new Image();\r\n\r\n          image.src = url;\r\n          image.onload = () => {\r\n            context!.drawImage(image, 0, 0, width, height);\r\n          };\r\n        }\r\n      );\r\n    };\r\n    element.src = url;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style: { rotate, scale, ...style }\r\n    } = this.props;\r\n    const { height, width } = this.state;\r\n\r\n    return (\r\n      <canvas\r\n        height={height}\r\n        id={this.id}\r\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\r\n        width={width}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  white-space: nowrap;\r\n`;\r\n\r\nexport interface TextPreviewProps {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n  };\r\n  value: string;\r\n}\r\n\r\nconst TextPreview: React.SFC<TextPreviewProps> = ({\r\n  style: {\r\n    color: { a, b, g, r },\r\n    fontFamily: { value: fontFamily },\r\n    fontSize,\r\n    fontWeight,\r\n    lineHeight,\r\n    opacity,\r\n    rotate\r\n  },\r\n  value\r\n}: TextPreviewProps) => (\r\n  <Div\r\n    style={{\r\n      fontFamily,\r\n      fontWeight,\r\n      opacity,\r\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n      fontSize: `${fontSize}px`,\r\n      transform: `rotate(${rotate}deg)`\r\n    }}\r\n  >\r\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\r\n      <div\r\n        key={index}\r\n        style={{\r\n          height: `${lineHeight}px`,\r\n          lineHeight: `${lineHeight}px`\r\n        }}\r\n      >\r\n        {v}\r\n      </div>\r\n    ))}\r\n  </Div>\r\n);\r\n\r\nexport default TextPreview;\r\n","import ImagePreview, {\r\n  ImagePreviewProps\r\n} from 'components/molecules/ImagePreview';\r\nimport TextPreview, {\r\n  TextPreviewProps\r\n} from 'components/molecules/TextPreview';\r\nimport * as React from 'react';\r\nimport ReactScalableDraggable from 'react-scalable-draggable';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #bbb;\r\n  height: 100%;\r\n  overflow: scroll;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  .wrapper {\r\n    box-sizing: content-box;\r\n    left: 0;\r\n    padding: 50px;\r\n    position: absolute;\r\n    top: 0;\r\n    transform-origin: top left;\r\n\r\n    #capture {\r\n      height: inherit;\r\n      width: inherit;\r\n\r\n      .screen {\r\n        height: inherit;\r\n        position: relative;\r\n        width: inherit;\r\n\r\n        &::before {\r\n          background-image: url(${process.env.PUBLIC_URL}/images/grid.png);\r\n          background-repeat: repeat;\r\n          background-size: inherit;\r\n          content: '';\r\n          display: block;\r\n          height: 100%;\r\n          left: 0;\r\n          position: absolute;\r\n          top: 0;\r\n          width: 100%;\r\n        }\r\n\r\n        .draggable {\r\n          cursor: move;\r\n          position: absolute;\r\n          word-break: keep-all;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface PreviewProps {\r\n  layers: (ImagePreviewProps | TextPreviewProps)[];\r\n  preview: {\r\n    backgroundColor: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    gridSize: number;\r\n    height: number;\r\n    overflow: boolean;\r\n    scale: number;\r\n    width: number;\r\n  };\r\n}\r\n\r\nconst Preview: React.SFC<PreviewProps> = ({\r\n  layers,\r\n  preview: {\r\n    backgroundColor: { a, b, g, r },\r\n    gridSize,\r\n    height,\r\n    overflow,\r\n    scale,\r\n    width\r\n  }\r\n}) => {\r\n  const previews = layers.map(layer => {\r\n    const { id } = layer;\r\n\r\n    let node = <React.Fragment />;\r\n\r\n    if ('value' in layer) {\r\n      node = <TextPreview {...layer} />;\r\n    } else if ('url' in layer) {\r\n      node = <ImagePreview {...layer} />;\r\n    }\r\n\r\n    return (\r\n      <ReactScalableDraggable\r\n        className=\"draggable\"\r\n        key={id}\r\n        parentScale={scale}\r\n      >\r\n        {node}\r\n      </ReactScalableDraggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Div id=\"preview\">\r\n      <div\r\n        className=\"wrapper\"\r\n        style={{\r\n          height: `${height}px`,\r\n          transform: `scale(${scale})`,\r\n          width: `${width}px`\r\n        }}\r\n      >\r\n        <div id=\"capture\">\r\n          <div\r\n            className=\"screen\"\r\n            style={{\r\n              backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n              backgroundSize: `${gridSize}px`,\r\n              overflow: overflow ? 'visible' : 'hidden'\r\n            }}\r\n          >\r\n            {previews}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport Select from 'react-select';\r\nimport { Props } from 'react-select/lib/Select';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.ul`\r\n  dt:not(:first-child) {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n\r\n    .select {\r\n      width: 220px;\r\n    }\r\n\r\n    .input {\r\n      width: 60px;\r\n    }\r\n\r\n    .picker .chrome-picker {\r\n      background-color: #fff !important;\r\n      border: 1px #ddd solid !important;\r\n      border-radius: 0 !important;\r\n      box-shadow: none !important;\r\n      font-family: inherit !important;\r\n\r\n      > div {\r\n        border-radius: 0 !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface TextLayerStylesProps {\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  fontFamily: {\r\n    label: string;\r\n    value: string;\r\n  };\r\n  fonts: Font[];\r\n  fontSize: number;\r\n  fontWeight: number;\r\n  lineHeight: number;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeColor: (color: ColorResult) => void;\r\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n}\r\n\r\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\r\n  color,\r\n  fontFamily,\r\n  fonts,\r\n  fontSize,\r\n  fontWeight,\r\n  lineHeight,\r\n  onChange,\r\n  onChangeColor,\r\n  onChangeFontFamily,\r\n  opacity,\r\n  rotate\r\n}: TextLayerStylesProps) => (\r\n  <Dl>\r\n    <dt>color</dt>\r\n    <dd>\r\n      <div className=\"picker\">\r\n        <ChromePicker color={color} onChange={onChangeColor} />\r\n      </div>\r\n    </dd>\r\n    <dt>font-family</dt>\r\n    <dd>\r\n      <Select\r\n        className=\"select\"\r\n        onChange={onChangeFontFamily}\r\n        options={fonts.map(({ fontFamily: value, name: label }) => ({\r\n          label,\r\n          value\r\n        }))}\r\n        value={fontFamily}\r\n      />\r\n    </dd>\r\n    <dt>font-size</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"fontSize\"\r\n        onChange={onChange}\r\n        type=\"number\"\r\n        value={fontSize}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>font-weight</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={900}\r\n        min={100}\r\n        name=\"fontWeight\"\r\n        onChange={onChange}\r\n        step={100}\r\n        type=\"number\"\r\n        value={fontWeight}\r\n      />\r\n    </dd>\r\n    <dt>line-height</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"lineHeight\"\r\n        onChange={onChange}\r\n        type=\"number\"\r\n        value={lineHeight}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>opacity</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={1}\r\n        min={0}\r\n        name=\"opacity\"\r\n        onChange={onChange}\r\n        step={0.01}\r\n        type=\"number\"\r\n        value={opacity}\r\n      />\r\n    </dd>\r\n    <dt>rotate</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name=\"rotate\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={rotate}\r\n      />\r\n      deg\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default TextLayerStyles;\r\n","import * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport ReactDropzone, {\r\n  DropzoneProps as ReactDropzoneProps\r\n} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  height: 100%;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .wrapper {\r\n    align-items: center;\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: center;\r\n    width: 100%;\r\n\r\n    img {\r\n      height: calc(231px / 3);\r\n      opacity: 0.75;\r\n      width: calc(289px / 3);\r\n    }\r\n\r\n    p {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n\r\n  .close-button {\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 50px;\r\n\r\n    &::before,\r\n    &::after {\r\n      background-color: #000;\r\n      display: block;\r\n      content: '';\r\n      left: 50%;\r\n      position: absolute;\r\n      top: 50%;\r\n      transform: translate(-50%, -50%) rotate(45deg);\r\n    }\r\n\r\n    &::before {\r\n      height: 1px;\r\n      width: 100%;\r\n    }\r\n\r\n    &::after {\r\n      height: 100%;\r\n      width: 1px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DropzoneProps {\r\n  onClickCloseButton: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n  onDrop: ReactDropzoneProps['onDrop'];\r\n}\r\n\r\nclass Dropzone extends React.Component<DropzoneProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { onClickCloseButton, onDrop } = this.props;\r\n\r\n    return (\r\n      <Div className=\"portal\">\r\n        <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\r\n          {({ getRootProps, getInputProps, isDragActive }) => (\r\n            <div {...getRootProps()} className=\"wrapper\">\r\n              <input {...getInputProps()} />\r\n              <img src={`${process.env.PUBLIC_URL}/images/dd.png`} />\r\n              <p>\r\n                {isDragActive\r\n                  ? 'Drop files here...'\r\n                  : 'Try dropping some image files here, or click to select files to upload.'}\r\n              </p>\r\n            </div>\r\n          )}\r\n        </ReactDropzone>\r\n        <button className=\"close-button\" onClick={onClickCloseButton} />\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dropzone;\r\n","import * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .wrapper {\r\n    height: 360px;\r\n    position: relative;\r\n    width: 640px;\r\n\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n\r\n    p {\r\n      bottom: 80px;\r\n      color: #ef64a0;\r\n      font-size: 1.2em;\r\n      position: absolute;\r\n      right: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LogoProps {\r\n  loading: number;\r\n}\r\n\r\nclass Logo extends React.Component<LogoProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { loading } = this.props;\r\n\r\n    return (\r\n      <Div className=\"portal\">\r\n        <div className=\"wrapper\">\r\n          <img src={`${process.env.PUBLIC_URL}/images/top.png`} />\r\n          <p>loading... {loading}%</p>\r\n        </div>\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Logo;\r\n","import setFonts from 'actions/fonts/setFonts';\r\nimport addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\r\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\r\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\r\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\r\nimport ImageButton from 'components/atoms/ImageButton';\r\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\r\nimport Information, {\r\n  InformationProps\r\n} from 'components/organisms/Information';\r\nimport Layers, { LayersProps } from 'components/organisms/Layers';\r\nimport LayerSetting from 'components/organisms/LayerSetting';\r\nimport Menu, { MenuProps } from 'components/organisms/Menu';\r\nimport Preview from 'components/organisms/Preview';\r\nimport TextLayerStyles, {\r\n  TextLayerStylesProps\r\n} from 'components/organisms/TextLayerStyles';\r\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\r\nimport Logo from 'components/templates/Logo';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { State } from 'reducers';\r\nimport { Dispatch } from 'redux';\r\nimport styled from 'styled-components';\r\nimport * as WebFont from 'webfontloader';\r\n\r\nconst Div = styled.div`\r\n  background-color: #fbfbfb;\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 275px 1fr 200px;\r\n  grid-template-rows: 25px 1fr;\r\n\r\n  .header {\r\n    border-bottom: 1px #ddd inset;\r\n    grid-column: 1 / 4;\r\n  }\r\n\r\n  .detail {\r\n    overflow-y: scroll;\r\n    padding: 5px 10px;\r\n  }\r\n\r\n  .preview {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-rows: 1fr 20px;\r\n    padding: 5px;\r\n  }\r\n\r\n  .side-layers {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .layers {\r\n      flex-basis: 0;\r\n      flex-grow: 1;\r\n      overflow-y: scroll;\r\n      padding: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PagesProps\r\n  extends ReturnType<typeof mapDispatchToProps>,\r\n    ReturnType<typeof mapStateToProps>,\r\n    RouteComponentProps {}\r\n\r\ninterface PagesState {\r\n  isShowDropzone: boolean;\r\n  isShowLogo: boolean;\r\n  loading: number;\r\n}\r\n\r\nclass Pages extends React.Component<PagesProps, PagesState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: PagesProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      isShowDropzone: false,\r\n      isShowLogo: true,\r\n      // isShowLogo: process.env.NODE_ENV !== 'development',\r\n      loading: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFonts } = this.props;\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open('GET', `${process.env.PUBLIC_URL}/jsons/fonts.json`, true);\r\n    request.responseType = 'blob';\r\n    request.onload = ({ target: { response } }: any) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = ({ target: { result } }: any) => {\r\n        const fonts: Font[] = JSON.parse(result);\r\n        const style = document.createElement('style');\r\n\r\n        let counter = 0;\r\n\r\n        setFonts(fonts);\r\n\r\n        style.appendChild(\r\n          document.createTextNode(\r\n            fonts\r\n              .map(\r\n                ({ fontFamily }) =>\r\n                  `@font-face {font-family: '${fontFamily}';src: url('${\r\n                    process.env.PUBLIC_URL\r\n                  }/fonts/${fontFamily}.woff2') format('woff2'),url('${\r\n                    process.env.PUBLIC_URL\r\n                  }/fonts/${fontFamily}.woff') format('woff'),url('${\r\n                    process.env.PUBLIC_URL\r\n                  }/fonts/${fontFamily}.ttf') format('truetype');}`\r\n              )\r\n              .join('')\r\n          )\r\n        );\r\n\r\n        document.head.appendChild(style);\r\n\r\n        WebFont.load({\r\n          active: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false, loading: 100 }, () => {\r\n                if (process.env.NODE_ENV !== 'development') {\r\n                  return;\r\n                }\r\n\r\n                console.log('active');\r\n              });\r\n            }, 1000);\r\n          },\r\n          classes: false,\r\n          custom: {\r\n            families: fonts.map(({ fontFamily }) => fontFamily)\r\n            // urls: [`${process.env.PUBLIC_URL}/styles/fonts.css`]\r\n          },\r\n          fontactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState(\r\n              {\r\n                loading: Math.floor((counter / fonts.length) * 100)\r\n              },\r\n              () => {\r\n                if (process.env.NODE_ENV !== 'development') {\r\n                  return;\r\n                }\r\n\r\n                console.log('fontactive', familyName, fvd);\r\n              }\r\n            );\r\n          },\r\n          fontinactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState(\r\n              {\r\n                loading: Math.floor((counter / fonts.length) * 100)\r\n              },\r\n              () => {\r\n                if (process.env.NODE_ENV !== 'development') {\r\n                  return;\r\n                }\r\n\r\n                console.log('fontinactive', familyName, fvd);\r\n              }\r\n            );\r\n          }\r\n        });\r\n      };\r\n      reader.readAsText(response);\r\n    };\r\n    request.send();\r\n  }\r\n\r\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\r\n    const { layers } = this.props;\r\n    const { isShowDropzone } = this.state;\r\n\r\n    if (isShowDropzone && prevLayers.length !== layers.length) {\r\n      this.setState({ isShowDropzone: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addImageLayers,\r\n      addTextLayer,\r\n      changeColor,\r\n      changeFontFamily,\r\n      changePreviewBackgroundColor,\r\n      changePreviewOverflow,\r\n      changePreviewValue,\r\n      changeStyle,\r\n      changeValue,\r\n      downLayer,\r\n      fonts,\r\n      index,\r\n      layers,\r\n      preview,\r\n      removeLayer,\r\n      selectLayer,\r\n      upLayer\r\n    } = this.props;\r\n    const { isShowDropzone, isShowLogo, loading } = this.state;\r\n\r\n    let styles = <React.Fragment />;\r\n\r\n    if (index !== undefined) {\r\n      const layer = layers[index];\r\n\r\n      if ('value' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = (\r\n          <TextLayerStyles\r\n            {...style}\r\n            fonts={fonts}\r\n            onChange={changeStyle}\r\n            onChangeColor={changeColor}\r\n            onChangeFontFamily={changeFontFamily}\r\n          />\r\n        );\r\n      } else if ('url' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Div>\r\n        <header className=\"header\">\r\n          <Menu {...preview} changePreviewOverflow={changePreviewOverflow} />\r\n        </header>\r\n        <aside className=\"detail\">{styles}</aside>\r\n        <div className=\"preview\">\r\n          <Preview layers={layers} preview={preview} />\r\n          <Information\r\n            {...preview}\r\n            onChange={changePreviewValue}\r\n            onChangeBackgroundColor={changePreviewBackgroundColor}\r\n          />\r\n        </div>\r\n        <aside className=\"side-layers\">\r\n          <LayerSetting>\r\n            {[\r\n              <DocumentAddButton key=\"add\" onClick={addTextLayer} />,\r\n              <DocumentDeleteButton\r\n                disabled={index === undefined}\r\n                key=\"delete\"\r\n                onClick={removeLayer}\r\n              />,\r\n              <ImageButton\r\n                key=\"image\"\r\n                onClick={() => {\r\n                  this.setState({ isShowDropzone: true });\r\n                }}\r\n              />,\r\n              <ArrowUpOutlineButton\r\n                disabled={index === undefined || index === layers.length - 1}\r\n                key=\"up\"\r\n                onClick={upLayer}\r\n              />,\r\n              <ArrowDownOutlineButton\r\n                disabled={!index}\r\n                key=\"down\"\r\n                onClick={downLayer}\r\n              />\r\n            ]}\r\n          </LayerSetting>\r\n          <div className=\"layers\">\r\n            <Layers\r\n              index={index}\r\n              layers={layers}\r\n              onChange={changeValue}\r\n              onClick={selectLayer}\r\n              onFocus={selectLayer}\r\n            />\r\n          </div>\r\n        </aside>\r\n        {isShowDropzone ? (\r\n          ReactDOM.createPortal(\r\n            <Dropzone\r\n              onClickCloseButton={() => {\r\n                this.setState({ isShowDropzone: false });\r\n              }}\r\n              onDrop={addImageLayers}\r\n            />,\r\n            this.rootEl\r\n          )\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n        {isShowLogo ? (\r\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  addImageLayers: (\r\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\r\n  ) => {\r\n    acceptedFiles.forEach(acceptedFile => {\r\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\r\n    });\r\n  },\r\n  addTextLayer: () => dispatch(addTextLayer()),\r\n  changeColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changeStyle({ value, name: 'color' })),\r\n  changeFontFamily: (\r\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\r\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\r\n  changePreviewBackgroundColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changePreviewValue({ value, name: 'backgroundColor' })),\r\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\r\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\r\n  changePreviewValue: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeStyle: ({\r\n    currentTarget: { name, value }\r\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\r\n    dispatch(changeStyle({ name, value })),\r\n  changeValue: ({\r\n    target: { value }\r\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n    dispatch(changeValue({ value })),\r\n  downLayer: () => dispatch(downLayer()),\r\n  removeLayer: () => dispatch(removeLayer()),\r\n  selectLayer: ({\r\n    currentTarget: { dataset }\r\n  }:\r\n    | ArgumentTypes<LayersProps['onClick']>[0]\r\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\r\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\r\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\r\n  upLayer: () => dispatch(upLayer())\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  fonts: { fonts },\r\n  layer: { index, layers },\r\n  preview\r\n}: State) => ({\r\n  fonts,\r\n  index,\r\n  layers,\r\n  preview\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pages);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface FontsState {\r\n  fonts: Font[];\r\n}\r\n\r\nconst initialState: FontsState = {\r\n  fonts: []\r\n};\r\n\r\nconst fonts = reducerWithInitialState(initialState).case(\r\n  setFonts,\r\n  (state, { fonts }) => ({ ...state, fonts })\r\n);\r\n\r\nexport default fonts;\r\n","import addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport * as uniqid from 'uniqid';\r\n\r\ninterface ImageLayer {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n  };\r\n  value: string;\r\n}\r\n\r\nexport interface LayerState {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n}\r\n\r\nconst initialState: LayerState = {\r\n  index: undefined,\r\n  layers: []\r\n};\r\n\r\nconst layer = reducerWithInitialState(initialState)\r\n  .case(addImageLayer, (state, { url }) => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      url,\r\n      id: uniqid(),\r\n      style: {\r\n        opacity: 1,\r\n        rotate: 0,\r\n        scale: 1\r\n      }\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(addTextLayer, state => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      id: uniqid(),\r\n      style: {\r\n        color: {\r\n          a: 1,\r\n          b: 0,\r\n          g: 0,\r\n          r: 0\r\n        },\r\n        fontFamily: {\r\n          label: 'バンバン',\r\n          value: 'BANBAN-FREE'\r\n        },\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        lineHeight: 16,\r\n        opacity: 1,\r\n        rotate: 0\r\n      },\r\n      value: ''\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeStyle, (state, { name, value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    if (name === 'fontSize' || name === 'fontWeight' || name === 'lineHeight') {\r\n      layers[index].style[name] = parseInt(value, 10);\r\n    } else if (name === 'opacity' || name === 'rotate' || name === 'scale') {\r\n      layers[index].style[name] = parseFloat(value);\r\n    } else {\r\n      layers[index].style[name] = value;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeValue, (state, { value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const layer = layers[index];\r\n\r\n    if ('value' in layer) {\r\n      layer.value = value;\r\n\r\n      layers[index] = layer;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(downLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index - 1];\r\n    layers[index - 1] = tmpLayer;\r\n\r\n    return { ...state, index: index - 1, layers };\r\n  })\r\n  .case(removeLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n\r\n    if (index === undefined) {\r\n      return state;\r\n    }\r\n\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.splice(index, 1);\r\n\r\n    return {\r\n      layers,\r\n      index: undefined\r\n    };\r\n  })\r\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\r\n  .case(upLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index + 1];\r\n    layers[index + 1] = tmpLayer;\r\n\r\n    return { ...state, index: index + 1, layers };\r\n  });\r\n\r\nexport default layer;\r\n","import changeValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface PreviewState {\r\n  backgroundColor: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  gridSize: number;\r\n  height: number;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst initialState: PreviewState = {\r\n  backgroundColor: {\r\n    a: 1,\r\n    b: 255,\r\n    g: 255,\r\n    r: 255\r\n  },\r\n  gridSize: 0,\r\n  height: 300,\r\n  overflow: true,\r\n  scale: 1,\r\n  width: 400\r\n};\r\n\r\nconst preview = reducerWithInitialState(initialState).case(\r\n  changeValue,\r\n  (state, { name, value: newValue }) => {\r\n    let value;\r\n\r\n    if (name === 'gridSize' || name === 'height' || name === 'width') {\r\n      value = parseInt(newValue as string, 10);\r\n    } else if (name === 'scale') {\r\n      value = parseFloat(newValue as string);\r\n    } else {\r\n      value = newValue;\r\n    }\r\n\r\n    return { ...state, ...{ [name]: value } };\r\n  }\r\n);\r\n\r\nexport default preview;\r\n","import { combineReducers } from 'redux';\r\nimport fonts, { FontsState } from './fonts';\r\nimport layer, { LayerState } from './layer';\r\nimport preview, { PreviewState } from './preview';\r\n\r\nexport interface State {\r\n  fonts: FontsState;\r\n  layer: LayerState;\r\n  preview: PreviewState;\r\n}\r\n\r\nconst reducers = () => combineReducers({ fonts, layer, preview });\r\n\r\nexport default reducers;\r\n","import Pages from 'containers/pages';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport 'ress';\nimport { createGlobalStyle } from 'styled-components';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst store = createStore(reducers());\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\n    font-size: 62.5%;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: 400;\n    height: 100%;\n    line-height: 1.2;\n    overflow: hidden !important;\n    -webkit-overflow-scrolling: touch;\n    width: 100%;\n  \n    body {\n      font-size: 1.4rem;\n      height: 100%;\n      width: 100%;\n    \n      #root {\n        height: 100%;\n        width: 100%;\n\n        * {\n          appearance: none;\n          \n          &:focus {\n            outline: none;\n          }\n        }\n  \n        a {\n          line-height: 0;\n        }\n\n        ul {\n          list-style: none;\n        }\n      }\n    }\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\n    >\n      <Switch>\n        <Route component={Pages} exact={true} path=\"/\" />\n      </Switch>\n    </BrowserRouter>\n    <GlobalStyle />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}