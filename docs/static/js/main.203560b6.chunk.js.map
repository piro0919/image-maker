{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/ReactHelmet/index.tsx","components/atoms/Input/index.tsx","components/molecules/LayerStyles/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/atoms/ChromePicker/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/atoms/DownloadButton/index.tsx","components/atoms/CloseButton/index.tsx","components/templates/Portal/index.tsx","components/templates/Image/index.tsx","components/atoms/DocumentButton/index.tsx","components/templates/New/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/molecules/TextShadow/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","changeStyle","changeValue","downLayer","removeLayer","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","ReactHelmet","_ref","fileName","this","Helmet","concat","React","StyledInput","input","Input_templateObject","Input","Dl","dl","LayerStyles_templateObject","LayerStyles","children","map","_ref2","name","node","key","StyledLayerStyles","ImageLayerStyles_templateObject","ImageLayerStyles","onChange","opacity","rotate","scale","atoms_Input","max","min","step","type","value","Div","div","ChromePicker_templateObject","ChromePicker","Object","objectWithoutProperties","react_color_lib","Information_templateObject","Information","backgroundColor","gridSize","height","isInitialize","onChangeBackgroundColor","overflow","width","a","b","g","r","Information_Dl","style","atoms_ChromePicker","color","defaultChecked","Ul","ul","Layers_templateObject","Layers","index","layers","onClick","onFocus","layer","layerIndex","v","data-index","url","backgroundImage","reverse","LayerSetting_templateObject","LayerSetting","LayerSetting_Ul","DownloadButton_templateObject","DownloadButton","DownloadButton_Button","CloseButton_templateObject","CloseButton","CloseButton_Button","Portal_templateObject","Portal","$","css","_this$props","onClickCloseButton","Portal_Div","atoms_CloseButton","StyledPortal","Image_templateObject","Image","extension","src","atoms_DownloadButton","saveAs","DocumentButton_templateObject","DocumentButton","DocumentButton_Button","New_templateObject","New","changePreviewIsInitialize","onChangePreviewBackgroundColor","onChangePreviewValue","New_StyledPortal","atoms_DocumentButton","disabled","e","Loading_templateObject","Loading","Loading_StyledPortal","react_spinners","Menu_templateObject","Menu","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","undefined","imageUrl","isNew","isShowLoading","_this2","prevOverflow","changePreviewOverflow","_this$state","callback","setState","domtoimage","toJpeg","then","toPng","toSvg","_this3","_this$state2","Menu_Ul","href","target","ReactDOM","templates_Image","templates_New","assign","templates_Loading","ImagePreview","id","uniqid","element","onload","naturalHeight","naturalWidth","context","getContext","image","drawImage","_this$props$style","objectSpread","transform","TextPreview_templateObject","fontFamily","process","_ref3","_ref4","TextPreview","_ref5","_ref5$style","_ref5$style$color","fontSize","fontWeight","letterSpacing","lineHeight","textShadows","TextPreview_Div","textShadow","_ref6","blurRadius","_ref6$color","textShadowA","textShadowB","textShadowG","textShadowR","hShadow","vShadow","join","split","Preview_templateObject","Preview","_ref$preview","preview","_ref$preview$backgrou","previews","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","TextShadow_templateObject","TextShadow","onChangeTextShadowColor","TextShadow_Dl","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","options","label","findIndex","font","JSON","stringify","TextLayerStyles_StyledLayerStyles","react_select_esm","molecules_TextShadow","Dropzone_templateObject","Dropzone","onDrop","Dropzone_StyledPortal","es","accept","getRootProps","getInputProps","isDragActive","Logo_templateObject","Logo","loading","Logo_StyledPortal","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","reader","FileReader","result","parse","counter","WebFont","active","setTimeout","classes","custom","families","fontactive","familyName","fvd","Math","floor","length","fontinactive","inactive","readAsText","send","prevLayers","addImageLayers","changeColor","changeFontFamily","changePreviewBackgroundColor","changePreviewValue","styles","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","atoms_ReactHelmet","organisms_Menu","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref11","_ref11$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","rgb","_ref7","_ref7$currentTarget","currentTarget","checked","_ref8","_ref8$currentTarget","_ref9","_ref10","dataset","parseInt","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","indexOf","_name$split","_name$split2","slicedToArray","first","secondName","_first$match","_first$match2","firstName","index2","parseFloat","tmpLayer","prevIndex","splice","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.203560b6.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nconst actionCreator = actionCreatorFactory();\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\n\nexport default setFonts;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\n\nexport default addImageLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\n\nexport default addTextLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeStyle = actionCreator<{ name: string; value: any }>(\n  'LAYER.CHANGE_STYLE'\n);\n\nexport default changeStyle;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\n\nexport default changeValue;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\n\nexport default downLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\n\nexport default removeLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\n\nexport default selectLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst upLayer = actionCreator('LAYER.UP_LAYER');\n\nexport default upLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeValue = actionCreator<{ name: string; value: any }>(\n  'PREVIEW.CHANGE_VALUE'\n);\n\nexport default changeValue;\n","import * as React from 'react';\nimport { TiArrowUpOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ArrowUpOutlineButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\n  props: ArrowUpOutlineButtonProps\n) => (\n  <Button {...props}>\n    <TiArrowUpOutline className=\"icon\" />\n  </Button>\n);\n\nexport default ArrowUpOutlineButton;\n","import * as React from 'react';\nimport { TiArrowDownOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ArrowDownOutlineButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\n  props: ArrowDownOutlineButtonProps\n) => (\n  <Button {...props}>\n    <TiArrowDownOutline className=\"icon\" />\n  </Button>\n);\n\nexport default ArrowDownOutlineButton;\n","import * as React from 'react';\nimport { TiDocumentAdd } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DocumentAddButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\n  props: DocumentAddButtonProps\n) => (\n  <Button {...props}>\n    <TiDocumentAdd className=\"icon\" />\n  </Button>\n);\n\nexport default DocumentAddButton;\n","import * as React from 'react';\nimport { TiDocumentDelete } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DocumentDeleteButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\n  props: DocumentDeleteButtonProps\n) => (\n  <Button {...props}>\n    <TiDocumentDelete className=\"icon\" />\n  </Button>\n);\n\nexport default DocumentDeleteButton;\n","import * as React from 'react';\nimport { TiImage } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ImageButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\n  <Button {...props}>\n    <TiImage className=\"icon\" />\n  </Button>\n);\n\nexport default ImageButton;\n","import * as React from 'react';\nimport { Helmet } from 'react-helmet';\n\nexport interface ReactHelmetProps {\n  fileName: string;\n}\n\nclass ReactHelmet extends React.Component<ReactHelmetProps> {\n  shouldComponentUpdate({ fileName: nextFileName }) {\n    const { fileName } = this.props;\n\n    return nextFileName !== fileName;\n  }\n\n  render() {\n    const { fileName } = this.props;\n\n    return (\n      <Helmet>\n        <title>{`Image Maker: ${fileName}`}</title>\n      </Helmet>\n    );\n  }\n}\n\nexport default ReactHelmet;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  background-color: #fff;\n  border: 1px #ddd solid;\n\n  &[type='checkbox'] {\n    height: 15px;\n    width: 15px;\n\n    &:checked {\n      background-color: #bbb;\n    }\n  }\n\n  &[type='number'] {\n    text-align: right;\n  }\n`;\n\nexport interface InputProps {\n  defaultChecked?: boolean;\n  className?: string;\n  max?: number;\n  min?: number;\n  name: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  step?: number;\n  type: string;\n  value?: number | string;\n}\n\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\n  <StyledInput {...props} />\n);\n\nexport default Input;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Dl = styled.dl`\n  > div {\n    padding: 10px 10px;\n\n    &:hover {\n      background-color: rgba(35, 71, 148, 0.1);\n    }\n  }\n\n  dd {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 5px;\n  }\n`;\n\ninterface Child {\n  name: string;\n  node: React.ReactNode;\n}\n\nexport interface LayerStylesProps {\n  children: Child[];\n  className?: string;\n}\n\nconst LayerStyles: React.SFC<LayerStylesProps> = ({\n  children,\n  className\n}: LayerStylesProps) => (\n  <Dl className={className}>\n    {children.map(({ name, node }) => (\n      <div key={name}>\n        <dt>{name}</dt>\n        <dd>{node}</dd>\n      </div>\n    ))}\n  </Dl>\n);\n\nexport default LayerStyles;\n","import Input from 'components/atoms/Input';\nimport LayerStyles from 'components/molecules/LayerStyles';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLayerStyles = styled(LayerStyles)`\n  .input {\n    width: 50px;\n  }\n`;\n\nexport interface ImageLayerStylesProps {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  opacity: number;\n  rotate: number;\n  scale: number;\n}\n\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\n  onChange,\n  opacity,\n  rotate,\n  scale\n}: ImageLayerStylesProps) => (\n  <StyledLayerStyles>\n    {[\n      {\n        name: 'opacity',\n        node: (\n          <Input\n            className=\"input\"\n            max={1}\n            min={0}\n            name=\"opacity\"\n            onChange={onChange}\n            step={0.01}\n            type=\"number\"\n            value={opacity}\n          />\n        )\n      },\n      {\n        name: 'rotate',\n        node: (\n          <React.Fragment>\n            <Input\n              className=\"input\"\n              name=\"rotate\"\n              onChange={onChange}\n              step={0.1}\n              type=\"number\"\n              value={rotate}\n            />\n            deg\n          </React.Fragment>\n        )\n      },\n      {\n        name: 'scale',\n        node: (\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"scale\"\n            onChange={onChange}\n            step={0.01}\n            type=\"number\"\n            value={scale}\n          />\n        )\n      }\n    ]}\n  </StyledLayerStyles>\n);\n\nexport default ImageLayerStyles;\n","import * as React from 'react';\nimport {\n  ChromePicker as ReactColorChromePicker,\n  ColorResult\n} from 'react-color';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  .chrome-picker {\n    background-color: #fff !important;\n    border: 1px #ddd solid !important;\n    border-radius: 0 !important;\n    box-shadow: none !important;\n    font-family: inherit !important;\n\n    > div {\n      border-radius: 0 !important;\n    }\n  }\n`;\n\nexport interface ChromePickerProps {\n  className?: string;\n  color: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  onChange: (color: ColorResult) => void;\n}\n\nconst ChromePicker: React.SFC<ChromePickerProps> = ({\n  className,\n  ...props\n}: ChromePickerProps) => (\n  <Div className={className}>\n    <ReactColorChromePicker {...props} />\n  </Div>\n);\n\nexport default ChromePicker;\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\nimport Input, { InputProps } from 'components/atoms/Input';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst Dl = styled.dl`\n  display: flex;\n  flex-wrap: wrap;\n  margin-left: -5px;\n  margin-top: -5px;\n\n  > div {\n    align-items: center;\n    display: flex;\n    margin-left: 5px;\n    margin-top: 5px;\n\n    dd {\n      align-items: center;\n      display: flex;\n      margin-left: 5px;\n\n      .input {\n        width: 50px;\n      }\n\n      .background-color {\n        border: 1px #ddd solid;\n        display: flex;\n        height: 15px;\n        justify-content: center;\n        position: relative;\n        width: 15px;\n\n        &:hover .picker {\n          display: block;\n        }\n\n        .picker {\n          background-color: #fff;\n          border: 1px #ddd solid;\n          bottom: 100%;\n          display: none;\n          padding: 10px;\n          position: absolute;\n\n          > div {\n            border: none !important;\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface InformationProps {\n  backgroundColor: ChromePickerProps['color'];\n  gridSize: number;\n  height: number;\n  isInitialize: boolean;\n  onChange: InputProps['onChange'];\n  onChangeBackgroundColor: ChromePickerProps['onChange'];\n  overflow: boolean;\n  scale: number;\n  width: number;\n}\n\nconst Information: React.SFC<InformationProps> = ({\n  backgroundColor,\n  gridSize,\n  height,\n  isInitialize,\n  onChange,\n  onChangeBackgroundColor,\n  overflow,\n  scale,\n  width\n}: InformationProps) => {\n  const { a, b, g, r } = backgroundColor;\n\n  return (\n    <Dl>\n      {isInitialize && (\n        <React.Fragment>\n          <div>\n            <dt>width</dt>\n            <dd>\n              <Input\n                className=\"input\"\n                min={1}\n                name=\"width\"\n                onChange={onChange}\n                type=\"number\"\n                value={width}\n              />\n              px\n            </dd>\n          </div>\n          <div>\n            <dt>height</dt>\n            <dd>\n              <Input\n                className=\"input\"\n                min={1}\n                name=\"height\"\n                onChange={onChange}\n                type=\"number\"\n                value={height}\n              />\n              px\n            </dd>\n          </div>\n          <div>\n            <dt>scale</dt>\n            <dd>\n              <Input\n                className=\"input\"\n                min={0}\n                name=\"scale\"\n                onChange={onChange}\n                step={0.1}\n                type=\"number\"\n                value={scale}\n              />\n              px\n            </dd>\n          </div>\n          <div>\n            <dt>grid-size</dt>\n            <dd>\n              <Input\n                className=\"input\"\n                max={500}\n                min={0}\n                name=\"gridSize\"\n                onChange={onChange}\n                type=\"number\"\n                value={gridSize}\n              />\n              px\n            </dd>\n          </div>\n          <div>\n            <dt>background-color</dt>\n            <dd>\n              <div\n                className=\"background-color\"\n                style={{ backgroundColor: `rgba(${r},${g}, ${b},${a})` }}\n              >\n                <ChromePicker\n                  className=\"picker\"\n                  color={backgroundColor}\n                  onChange={onChangeBackgroundColor}\n                />\n              </div>\n            </dd>\n          </div>\n          <div>\n            <dt>overflow</dt>\n            <dd>\n              <Input\n                defaultChecked={overflow}\n                name=\"overflow\"\n                onChange={onChange}\n                type=\"checkbox\"\n              />\n            </dd>\n          </div>\n        </React.Fragment>\n      )}\n    </Dl>\n  );\n};\n\nexport default Information;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: grid;\n  grid-gap: 5px;\n  margin-bottom: 5px;\n  width: 100%;\n\n  li {\n    border: 1px solid #ddd;\n    padding: 2.5px;\n\n    &.select {\n      border: solid #b33e5c 1px;\n    }\n\n    textarea {\n      border: 1px solid #ddd;\n      font-size: 1.2rem;\n      height: 50px;\n      min-height: 50px;\n      overflow-y: scroll;\n      padding: 2.5px;\n      width: 100%;\n    }\n\n    .image {\n      background-position: center;\n      background-size: cover;\n      height: 50px;\n      overflow: hidden;\n      padding: 2.5px;\n      width: 100%;\n    }\n  }\n`;\n\ninterface ImageLayer {\n  url: string;\n}\n\ninterface TextLayer {\n  value: string;\n}\n\nexport interface LayersProps {\n  index?: number;\n  layers: (ImageLayer | TextLayer)[];\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n}\n\nconst Layers: React.SFC<LayersProps> = ({\n  index,\n  layers,\n  onChange,\n  onClick,\n  onFocus\n}: LayersProps) => (\n  <Ul>\n    {layers\n      .map((layer, layerIndex) => {\n        let v = <React.Fragment />;\n\n        if ('value' in layer) {\n          const { value } = layer;\n\n          v = (\n            <textarea\n              data-index={layerIndex}\n              onChange={onChange}\n              onFocus={onFocus}\n              value={value}\n            />\n          );\n        } else if ('url' in layer) {\n          const { url } = layer;\n\n          v = (\n            <div\n              className=\"image\"\n              data-index={layerIndex}\n              onClick={onClick}\n              style={{ backgroundImage: `url(${url})` }}\n            />\n          );\n        }\n\n        return (\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\n            {v}\n          </li>\n        );\n      })\n      .reverse()}\n  </Ul>\n);\n\nexport default Layers;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  background-color: #bbb;\n  display: grid;\n  grid-auto-rows: 25px;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fill, 25px);\n  padding: 5px;\n  width: 100%;\n\n  li {\n    height: 100%;\n    width: 100%;\n\n    button {\n      height: 100%;\n      width: 100%;\n\n      .icon {\n        color: white;\n        height: 100%;\n        width: 100%;\n      }\n    }\n  }\n`;\n\nexport interface LayerSettingProps {\n  children: React.ReactNodeArray;\n}\n\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\n  children\n}: LayerSettingProps) => (\n  <Ul>\n    {children.map((value, index) => (\n      <li key={index}>{value}</li>\n    ))}\n  </Ul>\n);\n\nexport default LayerSetting;\n","import * as React from 'react';\nimport { TiDownload } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: black;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DownloadButtonProps {\n  className?: string;\n  disabled?: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DownloadButton: React.SFC<DownloadButtonProps> = (\n  props: DownloadButtonProps\n) => (\n  <Button {...props}>\n    <TiDownload className=\"icon\" />\n  </Button>\n);\n\nexport default DownloadButton;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  position: relative;\n\n  &::before,\n  &::after {\n    background-color: #000;\n    display: block;\n    content: '';\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%, -50%) rotate(45deg);\n  }\n\n  &::before {\n    height: 1px;\n    width: 100%;\n  }\n\n  &::after {\n    height: 100%;\n    width: 1px;\n  }\n`;\n\nexport interface CloseButtonProps {\n  className?: string;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst CloseButton: React.SFC<CloseButtonProps> = (props: CloseButtonProps) => (\n  <Button {...props} />\n);\n\nexport default CloseButton;\n","import CloseButton, { CloseButtonProps } from 'components/atoms/CloseButton';\nimport * as $ from 'jquery';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  .close-button {\n    height: 50px;\n    position: fixed;\n    right: 10px;\n    top: 10px;\n    width: 50px;\n  }\n`;\n\nexport interface PortalProps {\n  className?: string;\n  children: React.ReactNode;\n  onClickCloseButton?: CloseButtonProps['onClick'];\n}\n\nclass Portal extends React.Component<PortalProps> {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    const { children, className, onClickCloseButton } = this.props;\n\n    return (\n      <Div className={`portal ${className}`}>\n        {children}\n        {onClickCloseButton ? (\n          <CloseButton className=\"close-button\" onClick={onClickCloseButton} />\n        ) : (\n          <React.Fragment />\n        )}\n      </Div>\n    );\n  }\n}\n\nexport default Portal;\n","import DownloadButton from 'components/atoms/DownloadButton';\nimport Portal, { PortalProps } from 'components/templates/Portal';\nimport { saveAs } from 'file-saver';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledPortal = styled(Portal)`\n  img {\n    max-height: 90%;\n    max-width: 90%;\n  }\n\n  .download-button {\n    bottom: 10px;\n    height: 50px;\n    position: fixed;\n    right: 10px;\n    width: 50px;\n  }\n`;\n\nexport interface ImageProps\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\n  extension: 'jpg' | 'png' | 'svg';\n  fileName: string;\n  src: string;\n}\n\nconst Image: React.SFC<ImageProps> = ({\n  extension,\n  fileName,\n  onClickCloseButton,\n  src\n}: ImageProps) => (\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\n    <img src={src} />\n    <DownloadButton\n      className=\"download-button\"\n      onClick={() => {\n        saveAs(src, `${fileName || 'image'}.${extension}`);\n      }}\n    />\n  </StyledPortal>\n);\n\nexport default Image;\n","import * as React from 'react';\nimport { TiDocument } from 'react-icons/ti';\nimport styled from 'styled-components';\nimport { string } from 'prop-types';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: black;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DocumentButtonProps {\n  className?: string;\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DocumentButton: React.SFC<DocumentButtonProps> = (\n  props: DocumentButtonProps\n) => (\n  <Button {...props}>\n    <TiDocument className=\"icon\" />\n  </Button>\n);\n\nexport default DocumentButton;\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\nimport DocumentButton, {\n  DocumentButtonProps\n} from 'components/atoms/DocumentButton';\nimport Input from 'components/atoms/Input';\nimport Portal, { PortalProps } from 'components/templates/Portal';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledPortal = styled(Portal)`\n  .wrapper {\n    display: flex;\n    flex-direction: column;\n    width: 250px;\n\n    dt:not(:first-child) {\n      margin-top: 15px;\n    }\n\n    dd {\n      display: flex;\n      justify-content: flex-end;\n      margin-top: 5px;\n\n      .file-name {\n        width: 150px;\n      }\n\n      .input {\n        width: 50px;\n      }\n    }\n  }\n\n  .document-button {\n    bottom: 10px;\n    height: 50px;\n    position: fixed;\n    right: 10px;\n    width: 50px;\n  }\n`;\n\nexport interface NewProps\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\n  backgroundColor: ChromePickerProps['color'];\n  changePreviewIsInitialize: (value: boolean) => void;\n  fileName: string;\n  height: number;\n  onChangePreviewBackgroundColor: ChromePickerProps['onChange'];\n  onChangePreviewValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  width: number;\n}\n\nconst New: React.SFC<NewProps> = ({\n  backgroundColor,\n  changePreviewIsInitialize,\n  fileName,\n  height,\n  onChangePreviewBackgroundColor,\n  onChangePreviewValue,\n  onClickCloseButton,\n  width\n}: NewProps) => (\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\n    <dl className=\"wrapper\">\n      <dt>file-name</dt>\n      <dd>\n        <Input\n          className=\"file-name\"\n          name=\"fileName\"\n          onChange={onChangePreviewValue}\n          type=\"text\"\n          value={fileName}\n        />\n      </dd>\n      <dt>width</dt>\n      <dd>\n        <Input\n          className=\"input\"\n          min={1}\n          name=\"width\"\n          onChange={onChangePreviewValue}\n          type=\"number\"\n          value={width}\n        />\n        px\n      </dd>\n      <dt>height</dt>\n      <dd>\n        <Input\n          className=\"input\"\n          min={1}\n          name=\"height\"\n          onChange={onChangePreviewValue}\n          type=\"number\"\n          value={height}\n        />\n        px\n      </dd>\n      <dt>background-color</dt>\n      <dd>\n        <ChromePicker\n          color={backgroundColor}\n          onChange={onChangePreviewBackgroundColor}\n        />\n      </dd>\n    </dl>\n    <DocumentButton\n      className=\"document-button\"\n      disabled={!fileName || !height || !width}\n      onClick={(e: ArgumentTypes<DocumentButtonProps['onClick']>[0]) => {\n        changePreviewIsInitialize(true);\n        onClickCloseButton(e);\n      }}\n    />\n  </StyledPortal>\n);\n\nexport default New;\n","import Portal from 'components/templates/Portal';\nimport * as React from 'react';\nimport { DotLoader } from 'react-spinners';\nimport styled from 'styled-components';\n\nconst StyledPortal = styled(Portal)`\n  p {\n    margin-top: 30px;\n  }\n`;\n\nconst Loading: React.SFC = () => (\n  <StyledPortal>\n    <DotLoader color=\"#234794\" />\n    <p>Generating... wait a minutes.</p>\n  </StyledPortal>\n);\n\nexport default Loading;\n","import Image, { ImageProps } from 'components/templates/Image';\nimport New, { NewProps } from 'components/templates/New';\nimport Loading from 'components/templates/Loading';\nimport domtoimage from 'dom-to-image';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: flex;\n\n  * {\n    cursor: default;\n  }\n\n  ul {\n    background-color: #fff;\n    border: 1px #ddd solid;\n    position: absolute;\n  }\n\n  li {\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    white-space: nowrap;\n\n    &:hover {\n      background-color: rgba(35, 71, 148, 0.1);\n\n      > ul > li {\n        display: flex;\n      }\n    }\n  }\n\n  > li {\n    display: flex;\n    height: 24px;\n    width: 50px;\n\n    > ul {\n      left: 0;\n      top: 100%;\n\n      li {\n        display: none;\n        height: 25px;\n\n        > *:not(ul) {\n          align-items: center;\n          color: inherit;\n          display: flex;\n          justify-content: flex-start;\n          padding: 0 30px 0 15px;\n          text-decoration: none;\n        }\n      }\n\n      > li > ul {\n        left: 100%;\n        top: 0;\n\n        &::after {\n          border-color: transparent transparent transparent black;\n          border-style: solid;\n          border-width: 4px 0 4px 4px;\n          content: '';\n          display: block;\n          height: 0;\n          left: -10px;\n          position: absolute;\n          top: 9px;\n          width: 0;\n        }\n      }\n    }\n  }\n`;\n\nexport interface MenuProps\n  extends Pick<\n    NewProps,\n    | 'backgroundColor'\n    | 'changePreviewIsInitialize'\n    | 'fileName'\n    | 'height'\n    | 'onChangePreviewBackgroundColor'\n    | 'onChangePreviewValue'\n    | 'width'\n  > {\n  changePreviewOverflow: (value: boolean) => void;\n  overflow: boolean;\n}\n\ninterface MenuState {\n  extension?: ImageProps['extension'];\n  imageUrl: string;\n  isNew: boolean;\n  isShowLoading: boolean;\n}\n\nclass Menu extends React.Component<MenuProps, MenuState> {\n  rootEl: HTMLElement;\n\n  constructor(props: MenuProps) {\n    super(props);\n\n    this.rootEl = document.getElementById('root');\n    this.state = {\n      extension: undefined,\n      imageUrl: '',\n      isNew: false,\n      isShowLoading: false\n    };\n  }\n\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\n    const { changePreviewOverflow, overflow } = this.props;\n    const { extension, isShowLoading } = this.state;\n\n    if (isShowLoading) {\n      if (overflow) {\n        changePreviewOverflow(false);\n\n        return;\n      }\n\n      const callback = (imageUrl: string) => {\n        this.setState(\n          {\n            imageUrl,\n            isShowLoading: false\n          },\n          () => {\n            if (prevOverflow) {\n              changePreviewOverflow(true);\n            }\n          }\n        );\n      };\n\n      if (extension === 'jpg') {\n        domtoimage.toJpeg(document.getElementById('capture')!).then(callback);\n      }\n\n      if (extension === 'png') {\n        domtoimage.toPng(document.getElementById('capture')!).then(callback);\n      }\n\n      if (extension === 'svg') {\n        domtoimage.toSvg(document.getElementById('capture')!).then(callback);\n      }\n    }\n  }\n\n  render() {\n    const { fileName } = this.props;\n    const { extension, imageUrl, isNew, isShowLoading } = this.state;\n\n    return (\n      <Ul>\n        <li>\n          <p>File</p>\n          <ul>\n            <li>\n              <button\n                onClick={() => {\n                  this.setState({ isNew: true });\n                }}\n              >\n                New\n              </button>\n            </li>\n            <li>\n              <p>Save</p>\n              <ul>\n                <li>\n                  <button\n                    onClick={() => {\n                      this.setState({\n                        extension: 'jpg',\n                        isShowLoading: true\n                      });\n                    }}\n                  >\n                    JPG\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={() => {\n                      this.setState({\n                        extension: 'png',\n                        isShowLoading: true\n                      });\n                    }}\n                  >\n                    PNG\n                  </button>\n                </li>\n                <li>\n                  <button\n                    onClick={() => {\n                      this.setState({\n                        extension: 'svg',\n                        isShowLoading: true\n                      });\n                    }}\n                  >\n                    SVG\n                  </button>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <p>Help</p>\n          <ul>\n            <li>\n              <a href=\"https://github.com/piro0919/image-maker\" target=\"_blank\">\n                GitHub\n              </a>\n            </li>\n          </ul>\n        </li>\n        {extension &&\n          imageUrl &&\n          ReactDOM.createPortal(\n            <Image\n              extension={extension}\n              fileName={fileName}\n              onClickCloseButton={() => {\n                this.setState({ extension: undefined, imageUrl: '' });\n              }}\n              src={imageUrl}\n            />,\n            this.rootEl\n          )}\n        {isNew &&\n          ReactDOM.createPortal(\n            <New\n              {...this.props}\n              onClickCloseButton={() => {\n                this.setState({ isNew: false });\n              }}\n            />,\n            this.rootEl\n          )}\n        {isShowLoading && ReactDOM.createPortal(<Loading />, this.rootEl)}\n      </Ul>\n    );\n  }\n}\n\nexport default Menu;\n","import * as React from 'react';\nimport * as uniqid from 'uniqid';\n\nexport interface ImagePreviewProps {\n  id: string;\n  style: {\n    opacity: number;\n    rotate: number;\n    scale: number;\n  };\n  url: string;\n}\n\ninterface ImagePreviewState {\n  height: number;\n  width: number;\n}\n\nclass ImagePreview extends React.Component<\n  ImagePreviewProps,\n  ImagePreviewState\n> {\n  id: string;\n\n  constructor(props: ImagePreviewProps) {\n    super(props);\n\n    this.id = uniqid();\n    this.state = {\n      height: 0,\n      width: 0\n    };\n  }\n\n  componentDidMount() {\n    const { url } = this.props;\n    const element = new Image();\n\n    element.onload = () => {\n      const { naturalHeight: height, naturalWidth: width } = element;\n\n      this.setState(\n        {\n          height,\n          width\n        },\n        () => {\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\n          const context = canvas.getContext('2d');\n          const image = new Image();\n\n          image.src = url;\n          image.onload = () => {\n            context!.drawImage(image, 0, 0, width, height);\n          };\n        }\n      );\n    };\n    element.src = url;\n  }\n\n  render() {\n    const {\n      style: { rotate, scale, ...style }\n    } = this.props;\n    const { height, width } = this.state;\n\n    return (\n      <canvas\n        height={height}\n        id={this.id}\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\n        width={width}\n      />\n    );\n  }\n}\n\nexport default ImagePreview;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface DivProps {\n  fontFamily: string;\n}\n\nconst Div = styled.div`\n  @font-face {\n    font-family: '${({ fontFamily }: DivProps) => fontFamily}';\n    src: url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\n  fontFamily}.woff2') format('woff2'),\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\n  fontFamily}.woff') format('woff'),\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\n  fontFamily}.ttf') format('truetype');\n  }\n\n  white-space: nowrap;\n`;\n\ninterface TextShadow {\n  blurRadius: number;\n  color: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  hShadow: number;\n  vShadow: number;\n}\n\nexport interface TextPreviewProps {\n  id: string;\n  style: {\n    color: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    fontFamily: {\n      label: string;\n      value: string;\n    };\n    fontSize: number;\n    fontWeight: number;\n    letterSpacing: number;\n    lineHeight: number;\n    opacity: number;\n    rotate: number;\n    textShadows: TextShadow[];\n  };\n  value: string;\n}\n\nconst TextPreview: React.SFC<TextPreviewProps> = ({\n  style: {\n    color: { a, b, g, r },\n    fontFamily: { value: fontFamily },\n    fontSize,\n    fontWeight,\n    letterSpacing,\n    lineHeight,\n    opacity,\n    rotate,\n    textShadows\n  },\n  value\n}: TextPreviewProps) => (\n  <Div\n    fontFamily={fontFamily}\n    style={{\n      fontFamily,\n      fontWeight,\n      opacity,\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\n      fontSize: `${fontSize}px`,\n      letterSpacing: `${letterSpacing}px`,\n      textShadow: textShadows\n        .map(\n          ({\n            blurRadius,\n            color: {\n              a: textShadowA,\n              b: textShadowB,\n              g: textShadowG,\n              r: textShadowR\n            },\n            hShadow,\n            vShadow\n          }) =>\n            `${hShadow}px ${vShadow}px ${blurRadius}px rgba(${textShadowR}, ${textShadowG}, ${textShadowB}, ${textShadowA})`\n        )\n        .join(' '),\n      transform: `rotate(${rotate}deg)`\n    }}\n  >\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\n      <div\n        key={index}\n        style={{\n          height: `${lineHeight}px`,\n          lineHeight: `${lineHeight}px`\n        }}\n      >\n        {v}\n      </div>\n    ))}\n  </Div>\n);\n\nexport default TextPreview;\n","import ImagePreview, {\n  ImagePreviewProps\n} from 'components/molecules/ImagePreview';\nimport TextPreview, {\n  TextPreviewProps\n} from 'components/molecules/TextPreview';\nimport * as React from 'react';\nimport ReactScalableDraggable from 'react-scalable-draggable';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  background-color: #bbb;\n  height: 100%;\n  overflow: scroll;\n  position: relative;\n  width: 100%;\n\n  .wrapper {\n    box-sizing: content-box;\n    left: 0;\n    padding: 50px;\n    position: absolute;\n    top: 0;\n    transform-origin: top left;\n\n    #capture {\n      height: inherit;\n      width: inherit;\n\n      .screen {\n        height: inherit;\n        position: relative;\n        width: inherit;\n\n        &::before {\n          background-image: url(${process.env.PUBLIC_URL}/images/grid.png);\n          background-repeat: repeat;\n          background-size: inherit;\n          content: '';\n          display: block;\n          height: 100%;\n          left: 0;\n          position: absolute;\n          top: 0;\n          width: 100%;\n        }\n\n        .draggable {\n          cursor: move;\n          position: absolute;\n          word-break: keep-all;\n        }\n      }\n    }\n  }\n`;\n\nexport interface PreviewProps {\n  layers: (ImagePreviewProps | TextPreviewProps)[];\n  preview: {\n    backgroundColor: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    gridSize: number;\n    height: number;\n    isInitialize: boolean;\n    overflow: boolean;\n    scale: number;\n    width: number;\n  };\n}\n\nconst Preview: React.SFC<PreviewProps> = ({\n  layers,\n  preview: {\n    backgroundColor: { a, b, g, r },\n    gridSize,\n    height,\n    isInitialize,\n    overflow,\n    scale,\n    width\n  }\n}) => {\n  const previews = layers.map(layer => {\n    const { id } = layer;\n\n    let node = <React.Fragment />;\n\n    if ('value' in layer) {\n      node = <TextPreview {...layer} />;\n    } else if ('url' in layer) {\n      node = <ImagePreview {...layer} />;\n    }\n\n    return (\n      <ReactScalableDraggable\n        className=\"draggable\"\n        key={id}\n        parentScale={scale}\n      >\n        {node}\n      </ReactScalableDraggable>\n    );\n  });\n\n  return (\n    <Div id=\"preview\">\n      <div\n        className=\"wrapper\"\n        style={{\n          height: `${height}px`,\n          transform: `scale(${scale})`,\n          width: `${width}px`\n        }}\n      >\n        <div id=\"capture\">\n          {isInitialize && (\n            <div\n              className=\"screen\"\n              style={{\n                backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\n                backgroundSize: `${gridSize}px`,\n                overflow: overflow ? 'visible' : 'hidden'\n              }}\n            >\n              {previews}\n            </div>\n          )}\n        </div>\n      </div>\n    </Div>\n  );\n};\n\nexport default Preview;\n","import Input from 'components/atoms/Input';\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\n\nconst Dl = styled.dl`\n  .input {\n    width: 50px;\n  }\n`;\n\nexport interface TextShadowProps {\n  blurRadius: number;\n  className?: string;\n  color: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  hShadow: number;\n  name: string;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeTextShadowColor: (\n    color: ArgumentTypes<ChromePickerProps['onChange']>[0],\n    name: string\n  ) => void;\n  vShadow: number;\n}\n\nconst TextShadow: React.SFC<TextShadowProps> = ({\n  blurRadius,\n  className,\n  color,\n  hShadow,\n  name,\n  onChange,\n  onChangeTextShadowColor,\n  vShadow\n}: TextShadowProps) => (\n  <Dl className={className}>\n    <dt>h-shadow</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        name={`${name}.hShadow`}\n        onChange={onChange}\n        step={0.1}\n        type=\"number\"\n        value={hShadow}\n      />\n      px\n    </dd>\n    <dt>v-shadow</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        name={`${name}.vShadow`}\n        onChange={onChange}\n        step={0.1}\n        type=\"number\"\n        value={vShadow}\n      />\n      px\n    </dd>\n    <dt>blur-radius</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        name={`${name}.blurRadius`}\n        onChange={onChange}\n        step={0.1}\n        type=\"number\"\n        value={blurRadius}\n      />\n      px\n    </dd>\n    <dt>color</dt>\n    <dd>\n      <ChromePicker\n        color={color}\n        onChange={color => onChangeTextShadowColor(color, `${name}.color`)}\n      />\n    </dd>\n  </Dl>\n);\n\nexport default TextShadow;\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\nimport Input from 'components/atoms/Input';\nimport LayerStyles from 'components/molecules/LayerStyles';\nimport TextShadow, { TextShadowProps } from 'components/molecules/TextShadow';\nimport * as React from 'react';\nimport Select from 'react-select';\nimport { Props } from 'react-select/lib/Select';\nimport styled from 'styled-components';\n\nconst StyledLayerStyles = styled(LayerStyles)`\n  .select {\n    width: 200px;\n  }\n\n  .input {\n    width: 50px;\n  }\n\n  .text-shadow {\n    margin-top: 10px;\n  }\n`;\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface TextLayerStylesProps\n  extends Pick<ChromePickerProps, 'color'>,\n    Pick<TextShadowProps, 'onChange'> {\n  fontFamily: {\n    label: string;\n    value: string;\n  };\n  fonts: Font[];\n  fontSize: number;\n  fontWeight: number;\n  letterSpacing: number;\n  lineHeight: number;\n  onChangeColor: (\n    color: ArgumentTypes<ChromePickerProps['onChange']>[0],\n    name: string\n  ) => void;\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\n  opacity: number;\n  rotate: number;\n  textShadows: Pick<\n    TextShadowProps,\n    'blurRadius' | 'color' | 'hShadow' | 'vShadow'\n  >[];\n}\n\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\n  color,\n  fontFamily,\n  fonts,\n  fontSize,\n  fontWeight,\n  letterSpacing,\n  lineHeight,\n  onChange,\n  onChangeColor,\n  onChangeFontFamily,\n  opacity,\n  rotate,\n  textShadows\n}: TextLayerStylesProps) => {\n  const options = fonts.map(({ fontFamily: value, name: label }) => ({\n    label,\n    value\n  }));\n  const index = options.findIndex(\n    font => JSON.stringify(fontFamily) === JSON.stringify(font)\n  );\n\n  return (\n    <StyledLayerStyles>\n      {[\n        {\n          name: 'color',\n          node: (\n            <ChromePicker\n              color={color}\n              onChange={color => onChangeColor(color, 'color')}\n            />\n          )\n        },\n        {\n          name: 'font-family',\n          node: (\n            <Select\n              className=\"select\"\n              onChange={onChangeFontFamily}\n              options={options}\n              value={options[index]}\n            />\n          )\n        },\n        {\n          name: 'font-size',\n          node: (\n            <React.Fragment>\n              <Input\n                className=\"input\"\n                min={0}\n                name=\"fontSize\"\n                onChange={onChange}\n                type=\"number\"\n                value={fontSize}\n              />\n              px\n            </React.Fragment>\n          )\n        },\n        {\n          name: 'font-weight',\n          node: (\n            <Input\n              className=\"input\"\n              max={900}\n              min={100}\n              name=\"fontWeight\"\n              onChange={onChange}\n              step={100}\n              type=\"number\"\n              value={fontWeight}\n            />\n          )\n        },\n        {\n          name: 'letter-spacing',\n          node: (\n            <React.Fragment>\n              <Input\n                className=\"input\"\n                name=\"letterSpacing\"\n                onChange={onChange}\n                type=\"number\"\n                value={letterSpacing}\n              />\n              px\n            </React.Fragment>\n          )\n        },\n        {\n          name: 'line-height',\n          node: (\n            <React.Fragment>\n              <Input\n                className=\"input\"\n                min={0}\n                name=\"lineHeight\"\n                onChange={onChange}\n                type=\"number\"\n                value={lineHeight}\n              />\n              px\n            </React.Fragment>\n          )\n        },\n        {\n          name: 'opacity',\n          node: (\n            <Input\n              className=\"input\"\n              max={1}\n              min={0}\n              name=\"opacity\"\n              onChange={onChange}\n              step={0.01}\n              type=\"number\"\n              value={opacity}\n            />\n          )\n        },\n        {\n          name: 'rotate',\n          node: (\n            <React.Fragment>\n              <Input\n                className=\"input\"\n                name=\"rotate\"\n                onChange={onChange}\n                step={0.1}\n                type=\"number\"\n                value={rotate}\n              />\n              deg\n            </React.Fragment>\n          )\n        },\n        {\n          name: 'text-shadow',\n          node: textShadows.map((textShadow, index) => (\n            <TextShadow\n              {...textShadow}\n              className=\"text-shadow\"\n              key={index}\n              name={`textShadows[${index}]`}\n              onChange={onChange}\n              onChangeTextShadowColor={onChangeColor}\n            />\n          ))\n        }\n      ]}\n    </StyledLayerStyles>\n  );\n};\n\nexport default TextLayerStyles;\n","import Portal, { PortalProps } from 'components/templates/Portal';\nimport * as React from 'react';\nimport ReactDropzone, {\n  DropzoneProps as ReactDropzoneProps\n} from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst StyledPortal = styled(Portal)`\n  .wrapper {\n    align-items: center;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n\n    img {\n      height: calc(231px / 3);\n      opacity: 0.75;\n      width: calc(289px / 3);\n    }\n\n    p {\n      margin-top: 15px;\n    }\n  }\n`;\n\nexport interface DropzoneProps\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\n  onDrop: ReactDropzoneProps['onDrop'];\n}\n\nconst Dropzone: React.SFC<DropzoneProps> = ({\n  onClickCloseButton,\n  onDrop\n}: DropzoneProps) => (\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\n    <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\n      {({ getRootProps, getInputProps, isDragActive }) => (\n        <div {...getRootProps()} className=\"wrapper\">\n          <input {...getInputProps()} />\n          <img src={`${process.env.PUBLIC_URL}/images/dd.png`} />\n          <p>\n            {isDragActive\n              ? 'Drop files here...'\n              : 'Try dropping some image files here, or click to select files to upload.'}\n          </p>\n        </div>\n      )}\n    </ReactDropzone>\n  </StyledPortal>\n);\n\nexport default Dropzone;\n","import Portal from 'components/templates/Portal';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledPortal = styled(Portal)`\n  .wrapper {\n    height: 360px;\n    position: relative;\n    width: 640px;\n\n    img {\n      height: 100%;\n      width: 100%;\n    }\n\n    p {\n      bottom: 80px;\n      color: #ef64a0;\n      font-size: 1.2em;\n      position: absolute;\n      right: 30px;\n    }\n  }\n`;\n\nexport interface LogoProps {\n  loading: number;\n}\n\nconst Logo: React.SFC<LogoProps> = ({ loading }: LogoProps) => (\n  <StyledPortal>\n    <div className=\"wrapper\">\n      <img src={`${process.env.PUBLIC_URL}/images/top.png`} />\n      <p>loading... {loading}%</p>\n    </div>\n  </StyledPortal>\n);\n\nexport default Logo;\n","import setFonts from 'actions/fonts/setFonts';\nimport addImageLayer from 'actions/layer/addImageLayer';\nimport addTextLayer from 'actions/layer/addTextLayer';\nimport changeStyle from 'actions/layer/changeStyle';\nimport changeValue from 'actions/layer/changeValue';\nimport downLayer from 'actions/layer/downLayer';\nimport removeLayer from 'actions/layer/removeLayer';\nimport selectLayer from 'actions/layer/selectLayer';\nimport upLayer from 'actions/layer/upLayer';\nimport changePreviewValue from 'actions/preview/changeValue';\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\nimport ImageButton from 'components/atoms/ImageButton';\nimport ReactHelmet from 'components/atoms/ReactHelmet';\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\nimport Information, {\n  InformationProps\n} from 'components/organisms/Information';\nimport Layers, { LayersProps } from 'components/organisms/Layers';\nimport LayerSetting from 'components/organisms/LayerSetting';\nimport Menu, { MenuProps } from 'components/organisms/Menu';\nimport Preview from 'components/organisms/Preview';\nimport TextLayerStyles, {\n  TextLayerStylesProps\n} from 'components/organisms/TextLayerStyles';\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\nimport Logo from 'components/templates/Logo';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { State } from 'reducers';\nimport { Dispatch } from 'redux';\nimport styled from 'styled-components';\nimport * as WebFont from 'webfontloader';\n\nconst Div = styled.div`\n  background-color: #fbfbfb;\n  display: grid;\n  height: 100%;\n  grid-template-columns: 275px 1fr 200px;\n  grid-template-rows: 25px 1fr;\n\n  .header {\n    border-bottom: 1px #ddd inset;\n    grid-column: 1 / 4;\n    z-index: 2;\n  }\n\n  .detail {\n    overflow-y: scroll;\n  }\n\n  .preview {\n    box-shadow: 1px 0px #ddd inset;\n    display: grid;\n    grid-gap: 5px;\n    grid-template-rows: 1fr fit-content(20px);\n    padding: 5px;\n  }\n\n  .side-layers {\n    box-shadow: 1px 0px #ddd inset;\n    display: flex;\n    flex-direction: column;\n\n    .layers {\n      flex-basis: 0;\n      flex-grow: 1;\n      overflow-y: scroll;\n      padding: 5px;\n    }\n  }\n`;\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface PagesProps\n  extends ReturnType<typeof mapDispatchToProps>,\n    ReturnType<typeof mapStateToProps>,\n    RouteComponentProps {}\n\ninterface PagesState {\n  isShowDropzone: boolean;\n  isShowLogo: boolean;\n  loading: number;\n}\n\nclass Pages extends React.Component<PagesProps, PagesState> {\n  rootEl: HTMLElement;\n\n  constructor(props: PagesProps) {\n    super(props);\n\n    this.rootEl = document.getElementById('root');\n    this.state = {\n      isShowDropzone: false,\n      // isShowLogo: true,\n      isShowLogo: process.env.NODE_ENV !== 'development',\n      loading: 0\n    };\n  }\n\n  componentDidMount() {\n    const { setFonts } = this.props;\n    const request = new XMLHttpRequest();\n\n    request.open('GET', `${process.env.PUBLIC_URL}/jsons/fonts.json`, true);\n    request.responseType = 'blob';\n    request.onload = ({ target: { response } }: any) => {\n      const reader = new FileReader();\n\n      reader.onload = ({ target: { result } }: any) => {\n        const fonts: Font[] = JSON.parse(result);\n\n        let counter = 0;\n\n        setFonts(fonts);\n\n        WebFont.load({\n          active: () => {\n            setTimeout(() => {\n              this.setState({ isShowLogo: false, loading: 100 });\n            }, 1000);\n          },\n          classes: false,\n          custom: {\n            families: fonts.map(({ fontFamily }) => fontFamily)\n          },\n          fontactive: (familyName: string, fvd: string) => {\n            counter = counter + 1;\n\n            this.setState({\n              loading: Math.floor((counter / fonts.length) * 100)\n            });\n          },\n          fontinactive: (familyName: string, fvd: string) => {\n            counter = counter + 1;\n\n            this.setState({\n              loading: Math.floor((counter / fonts.length) * 100)\n            });\n          },\n          inactive: () => {\n            setTimeout(() => {\n              this.setState({ isShowLogo: false, loading: 100 });\n            }, 1000);\n          }\n        });\n      };\n      reader.readAsText(response);\n    };\n    request.send();\n  }\n\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\n    const { layers } = this.props;\n    const { isShowDropzone } = this.state;\n\n    if (isShowDropzone && prevLayers.length !== layers.length) {\n      this.setState({ isShowDropzone: false });\n    }\n  }\n\n  render() {\n    const {\n      addImageLayers,\n      addTextLayer,\n      changeColor,\n      changeFontFamily,\n      changePreviewBackgroundColor,\n      changePreviewIsInitialize,\n      changePreviewOverflow,\n      changePreviewValue,\n      changeStyle,\n      changeValue,\n      downLayer,\n      fonts,\n      index,\n      layers,\n      preview,\n      removeLayer,\n      selectLayer,\n      upLayer\n    } = this.props;\n    const { isShowDropzone, isShowLogo, loading } = this.state;\n    const { fileName, isInitialize } = preview;\n\n    let styles = <React.Fragment />;\n\n    if (index !== undefined) {\n      const layer = layers[index];\n\n      if ('value' in layer) {\n        const { style } = layer;\n\n        styles = (\n          <TextLayerStyles\n            {...style}\n            fonts={fonts}\n            onChange={changeStyle}\n            onChangeColor={changeColor}\n            onChangeFontFamily={changeFontFamily}\n          />\n        );\n      } else if ('url' in layer) {\n        const { style } = layer;\n\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\n      }\n    }\n\n    return (\n      <Div>\n        {fileName && isInitialize && <ReactHelmet fileName={fileName} />}\n        <header className=\"header\">\n          <Menu\n            {...preview}\n            changePreviewOverflow={changePreviewOverflow}\n            onChangePreviewBackgroundColor={changePreviewBackgroundColor}\n            changePreviewIsInitialize={changePreviewIsInitialize}\n            onChangePreviewValue={changePreviewValue}\n          />\n        </header>\n        <aside className=\"detail\">{styles}</aside>\n        <div className=\"preview\">\n          <Preview layers={layers} preview={preview} />\n          <Information\n            {...preview}\n            onChange={changePreviewValue}\n            onChangeBackgroundColor={changePreviewBackgroundColor}\n          />\n        </div>\n        <aside className=\"side-layers\">\n          <LayerSetting>\n            {[\n              <DocumentAddButton\n                disabled={!isInitialize}\n                key=\"add\"\n                onClick={addTextLayer}\n              />,\n              <DocumentDeleteButton\n                disabled={!isInitialize || index === undefined}\n                key=\"delete\"\n                onClick={removeLayer}\n              />,\n              <ImageButton\n                disabled={!isInitialize}\n                key=\"image\"\n                onClick={() => {\n                  this.setState({ isShowDropzone: true });\n                }}\n              />,\n              <ArrowUpOutlineButton\n                disabled={\n                  !isInitialize ||\n                  index === undefined ||\n                  index === layers.length - 1\n                }\n                key=\"up\"\n                onClick={upLayer}\n              />,\n              <ArrowDownOutlineButton\n                disabled={!isInitialize || !index}\n                key=\"down\"\n                onClick={downLayer}\n              />\n            ]}\n          </LayerSetting>\n          <div className=\"layers\">\n            <Layers\n              index={index}\n              layers={layers}\n              onChange={changeValue}\n              onClick={selectLayer}\n              onFocus={selectLayer}\n            />\n          </div>\n        </aside>\n        {isShowDropzone &&\n          ReactDOM.createPortal(\n            <Dropzone\n              onClickCloseButton={() => {\n                this.setState({ isShowDropzone: false });\n              }}\n              onDrop={addImageLayers}\n            />,\n            this.rootEl\n          )}\n        {isShowLogo &&\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)}\n      </Div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addImageLayers: (\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\n  ) => {\n    acceptedFiles.forEach(acceptedFile => {\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\n    });\n  },\n  addTextLayer: () => dispatch(addTextLayer()),\n  changeColor: (\n    { rgb: value }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0],\n    name: string\n  ) => dispatch(changeStyle({ name, value })),\n  changeFontFamily: (\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\n  changePreviewBackgroundColor: ({\n    rgb: value\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\n    dispatch(changePreviewValue({ value, name: 'backgroundColor' })),\n  changePreviewIsInitialize: (\n    value: ArgumentTypes<MenuProps['changePreviewIsInitialize']>[0]\n  ) => dispatch(changePreviewValue({ value, name: 'isInitialize' })),\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\n  changePreviewValue: ({\n    currentTarget: { checked, name, type, value }\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\n    dispatch(\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\n    ),\n  changeStyle: ({\n    currentTarget: { name, value }\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\n    dispatch(changeStyle({ name, value })),\n  changeValue: ({\n    target: { value }\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\n    dispatch(changeValue({ value })),\n  downLayer: () => dispatch(downLayer()),\n  removeLayer: () => dispatch(removeLayer()),\n  selectLayer: ({\n    currentTarget: { dataset }\n  }:\n    | ArgumentTypes<LayersProps['onClick']>[0]\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\n  upLayer: () => dispatch(upLayer())\n});\n\nconst mapStateToProps = ({\n  fonts: { fonts },\n  layer: { index, layers },\n  preview\n}: State) => ({\n  fonts,\n  index,\n  layers,\n  preview\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pages);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface FontsState {\n  fonts: Font[];\n}\n\nconst initialState: FontsState = {\n  fonts: []\n};\n\nconst fonts = reducerWithInitialState(initialState).case(\n  setFonts,\n  (state, { fonts }) => ({ ...state, fonts })\n);\n\nexport default fonts;\n","import addImageLayer from 'actions/layer/addImageLayer';\nimport addTextLayer from 'actions/layer/addTextLayer';\nimport changeStyle from 'actions/layer/changeStyle';\nimport changeValue from 'actions/layer/changeValue';\nimport downLayer from 'actions/layer/downLayer';\nimport removeLayer from 'actions/layer/removeLayer';\nimport selectLayer from 'actions/layer/selectLayer';\nimport upLayer from 'actions/layer/upLayer';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport * as uniqid from 'uniqid';\n\ninterface ImageLayer {\n  id: string;\n  style: {\n    opacity: number;\n    rotate: number;\n    scale: number;\n  };\n  url: string;\n}\n\ninterface TextShadow {\n  blurRadius: number;\n  color: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  hShadow: number;\n  vShadow: number;\n}\n\ninterface TextLayer {\n  id: string;\n  style: {\n    color: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    fontFamily: {\n      label: string;\n      value: string;\n    };\n    fontSize: number;\n    fontWeight: number;\n    letterSpacing: number;\n    lineHeight: number;\n    opacity: number;\n    rotate: number;\n    textShadows: TextShadow[];\n  };\n  value: string;\n}\n\nexport interface LayerState {\n  index?: number;\n  layers: (ImageLayer | TextLayer)[];\n}\n\nconst initialState: LayerState = {\n  index: undefined,\n  layers: []\n};\n\nconst layer = reducerWithInitialState(initialState)\n  .case(addImageLayer, (state, { url }) => {\n    const { layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    layers.push({\n      url,\n      id: uniqid(),\n      style: {\n        opacity: 1,\n        rotate: 0,\n        scale: 1\n      }\n    });\n\n    return { ...state, layers, index: layers.length - 1 };\n  })\n  .case(addTextLayer, state => {\n    const { layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    layers.push({\n      id: uniqid(),\n      style: {\n        color: {\n          a: 1,\n          b: 0,\n          g: 0,\n          r: 0\n        },\n        fontFamily: {\n          label: 'M+ P Type-1 Regular',\n          value: 'mplus-1p-regular'\n        },\n        fontSize: 16,\n        fontWeight: 400,\n        letterSpacing: 0,\n        lineHeight: 16,\n        opacity: 1,\n        rotate: 0,\n        textShadows: [\n          {\n            blurRadius: 0,\n            color: {\n              a: 0,\n              b: 0,\n              g: 0,\n              r: 0\n            },\n            hShadow: 0,\n            vShadow: 0\n          }\n        ]\n      },\n      value: ''\n    });\n\n    return { ...state, layers, index: layers.length - 1 };\n  })\n  .case(changeStyle, (state, { name, value }) => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    if (name.indexOf('.') >= 0) {\n      const [first, secondName] = name.split('.');\n      const [_, firstName, index2] = first.match('([a-zA-Z]+)\\\\[(.+)\\\\]');\n\n      layers[index].style[firstName][parseInt(index2, 10)][secondName] = value;\n    } else {\n      if (name === 'opacity' || name === 'rotate' || name === 'scale') {\n        layers[index].style[name] = parseFloat(value);\n      } else {\n        layers[index].style[name] = value;\n      }\n    }\n\n    return { ...state, layers };\n  })\n  .case(changeValue, (state, { value }) => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const layer = layers[index];\n\n    if ('value' in layer) {\n      layer.value = value;\n\n      layers[index] = layer;\n    }\n\n    return { ...state, layers };\n  })\n  .case(downLayer, state => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const tmpLayer = layers[index];\n\n    layers[index] = layers[index - 1];\n    layers[index - 1] = tmpLayer;\n\n    return { ...state, index: index - 1, layers };\n  })\n  .case(removeLayer, state => {\n    const { index: prevIndex, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    let index = undefined;\n\n    layers.splice(prevIndex, 1);\n\n    if (index - 1 >= 0) {\n      index = index - 1;\n    } else if (layers.length) {\n      index = 0;\n    }\n\n    return {\n      index,\n      layers\n    };\n  })\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\n  .case(upLayer, state => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const tmpLayer = layers[index];\n\n    layers[index] = layers[index + 1];\n    layers[index + 1] = tmpLayer;\n\n    return { ...state, index: index + 1, layers };\n  });\n\nexport default layer;\n","import changeValue from 'actions/preview/changeValue';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nexport interface PreviewState {\n  backgroundColor: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  fileName: string;\n  gridSize: number;\n  height: number;\n  isInitialize: boolean;\n  overflow: boolean;\n  scale: number;\n  width: number;\n}\n\nconst initialState: PreviewState = {\n  backgroundColor: {\n    a: 1,\n    b: 255,\n    g: 255,\n    r: 255\n  },\n  fileName: '',\n  gridSize: 0,\n  height: 300,\n  // isInitialize: false,\n  isInitialize: process.env.NODE_ENV === 'development',\n  overflow: false,\n  scale: 1,\n  width: 400\n};\n\nconst preview = reducerWithInitialState(initialState).case(\n  changeValue,\n  (state, { name, value: newValue }) => {\n    let value;\n\n    if (name === 'scale') {\n      value = parseFloat(newValue as string);\n    } else {\n      value = newValue;\n    }\n\n    return { ...state, ...{ [name]: value } };\n  }\n);\n\nexport default preview;\n","import { combineReducers } from 'redux';\nimport fonts, { FontsState } from './fonts';\nimport layer, { LayerState } from './layer';\nimport preview, { PreviewState } from './preview';\n\nexport interface State {\n  fonts: FontsState;\n  layer: LayerState;\n  preview: PreviewState;\n}\n\nconst reducers = () => combineReducers({ fonts, layer, preview });\n\nexport default reducers;\n","import Pages from 'containers/pages';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport 'ress';\nimport { createGlobalStyle } from 'styled-components';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst store = createStore(reducers());\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\n    font-size: 62.5%;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: 400;\n    height: 100%;\n    line-height: 1.2;\n    overflow: hidden !important;\n    -webkit-overflow-scrolling: touch;\n    width: 100%;\n  \n    body {\n      font-size: 1.2rem;\n      height: 100%;\n      width: 100%;\n    \n      #root {\n        height: 100%;\n        width: 100%;\n\n        * {\n          appearance: none;\n          \n          &:focus {\n            outline: none;\n          }\n        }\n  \n        a {\n          line-height: 0;\n        }\n\n        ul {\n          list-style: none;\n        }\n      }\n    }\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\n    >\n      <Switch>\n        <Route component={Pages} exact={true} path=\"/\" />\n      </Switch>\n    </BrowserRouter>\n    <GlobalStyle />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}