{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/Input/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","changeStyle","changeValue","downLayer","removeLayer","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","StyledInput","input","Input_templateObject","Input","Dl","ul","ImageLayerStyles_templateObject","ImageLayerStyles","_ref","onChange","opacity","rotate","scale","atoms_Input","max","min","name","step","type","value","Div","div","Information_templateObject","Information","backgroundColor","gridSize","height","onChangeBackgroundColor","overflow","width","a","b","g","r","style","concat","react_color_lib","color","defaultChecked","Ul","Layers_templateObject","Layers","index","layers","onClick","onFocus","map","layer","layerIndex","v","data-index","url","backgroundImage","key","reverse","LayerSetting_templateObject","LayerSetting","children","LayerSetting_Ul","Loading_templateObject","Loading","$","css","Loading_Div","react_spinners","React","Menu_templateObject","Menu","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","isShowLoading","_this2","prevOverflow","_this$props","changePreviewOverflow","domtoimage","toPng","then","dataUrl","img","Image","src","body","appendChild","setState","_this3","Menu_Ul","href","target","ReactDOM","templates_Loading","ImagePreview","id","uniqid","element","onload","naturalHeight","naturalWidth","context","getContext","image","drawImage","_this$props$style","objectWithoutProperties","_this$state","objectSpread","transform","TextPreview_templateObject","TextPreview","_ref$style","_ref$style$color","fontFamily","fontSize","fontWeight","lineHeight","TextPreview_Div","split","Preview_templateObject","process","Preview","_ref$preview","preview","_ref$preview$backgrou","previews","node","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","TextLayerStyles_Dl","react_select_esm","options","_ref2","label","Dropzone_templateObject","Dropzone","onClickCloseButton","onDrop","Dropzone_Div","es","accept","getRootProps","getInputProps","isDragActive","assign","Logo_templateObject","Logo","loading","Logo_Div","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","reader","FileReader","result","JSON","parse","createElement","counter","createTextNode","_ref3","join","head","WebFont","active","setTimeout","classes","custom","families","_ref4","fontactive","familyName","fvd","Math","floor","length","fontinactive","readAsText","send","prevLayers","_ref5","addImageLayers","changeColor","changeFontFamily","changePreviewBackgroundColor","changePreviewValue","styles","undefined","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","organisms_Menu","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","disabled","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref12","_ref12$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","_ref6","rgb","_ref7","_ref8","_ref8$currentTarget","currentTarget","checked","_ref9","_ref9$currentTarget","_ref10","_ref11","dataset","parseInt","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","parseFloat","tmpLayer","splice","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92ff7093.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nconst actionCreator = actionCreatorFactory();\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\n\nexport default setFonts;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\n\nexport default addImageLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\n\nexport default addTextLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeStyle = actionCreator<{ name: string; value: any }>(\n  'LAYER.CHANGE_STYLE'\n);\n\nexport default changeStyle;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\n\nexport default changeValue;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\n\nexport default downLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\n\nexport default removeLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\n\nexport default selectLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst upLayer = actionCreator('LAYER.UP_LAYER');\n\nexport default upLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeValue = actionCreator<{ name: string; value: any }>(\n  'PREVIEW.CHANGE_VALUE'\n);\n\nexport default changeValue;\n","import * as React from 'react';\nimport { TiArrowUpOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ArrowUpOutlineButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\n  props: ArrowUpOutlineButtonProps\n) => (\n  <Button {...props}>\n    <TiArrowUpOutline className=\"icon\" />\n  </Button>\n);\n\nexport default ArrowUpOutlineButton;\n","import * as React from 'react';\nimport { TiArrowDownOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ArrowDownOutlineButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\n  props: ArrowDownOutlineButtonProps\n) => (\n  <Button {...props}>\n    <TiArrowDownOutline className=\"icon\" />\n  </Button>\n);\n\nexport default ArrowDownOutlineButton;\n","import * as React from 'react';\nimport { TiDocumentAdd } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DocumentAddButtonProps {\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\n  props: DocumentAddButtonProps\n) => (\n  <Button {...props}>\n    <TiDocumentAdd className=\"icon\" />\n  </Button>\n);\n\nexport default DocumentAddButton;\n","import * as React from 'react';\nimport { TiDocumentDelete } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DocumentDeleteButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\n  props: DocumentDeleteButtonProps\n) => (\n  <Button {...props}>\n    <TiDocumentDelete className=\"icon\" />\n  </Button>\n);\n\nexport default DocumentDeleteButton;\n","import * as React from 'react';\nimport { TiImage } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ImageButtonProps {\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\n  <Button {...props}>\n    <TiImage className=\"icon\" />\n  </Button>\n);\n\nexport default ImageButton;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  background-color: #fff;\n  border: 1px #ddd solid;\n\n  &[type='checkbox'] {\n    height: 15px;\n    width: 15px;\n\n    &:checked {\n      background-color: #bbb;\n    }\n  }\n\n  &[type='number'] {\n    text-align: right;\n  }\n`;\n\nexport interface InputProps {\n  defaultChecked?: boolean;\n  className?: string;\n  max?: number;\n  min?: number;\n  name: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  step?: number;\n  type: string;\n  value?: number | string;\n}\n\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\n  <StyledInput {...props} />\n);\n\nexport default Input;\n","import Input from 'components/atoms/Input';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst Dl = styled.ul`\n  dt:not(:first-child) {\n    margin-top: 10px;\n  }\n\n  dd {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 5px;\n\n    .input {\n      width: 60px;\n    }\n  }\n`;\n\nexport interface ImageLayerStylesProps {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  opacity: number;\n  rotate: number;\n  scale: number;\n}\n\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\n  onChange,\n  opacity,\n  rotate,\n  scale\n}: ImageLayerStylesProps) => (\n  <Dl>\n    <dt>opacity</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        max={1}\n        min={0}\n        name=\"opacity\"\n        onChange={onChange}\n        step={0.01}\n        type=\"number\"\n        value={opacity}\n      />\n    </dd>\n    <dt>rotate</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        name=\"rotate\"\n        onChange={onChange}\n        step={0.1}\n        type=\"number\"\n        value={rotate}\n      />\n      deg\n    </dd>\n    <dt>scale</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        min={0}\n        name=\"scale\"\n        onChange={onChange}\n        step={0.01}\n        type=\"number\"\n        value={scale}\n      />\n    </dd>\n  </Dl>\n);\n\nexport default ImageLayerStyles;\n","import Input, { InputProps } from 'components/atoms/Input';\nimport * as React from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  display: flex;\n\n  dl {\n    align-items: center;\n    display: flex;\n\n    dt:not(:first-child) {\n      margin-left: 10px;\n    }\n\n    dd {\n      align-items: center;\n      display: flex;\n      margin-left: 5px;\n\n      .input {\n        width: 60px;\n      }\n\n      .background-color {\n        border: 1px #ddd solid;\n        display: flex;\n        height: 15px;\n        justify-content: center;\n        position: relative;\n        width: 15px;\n\n        &:hover .picker {\n          display: block;\n        }\n\n        .picker {\n          background-color: #fff;\n          border: 1px #ddd solid;\n          bottom: 100%;\n          display: none;\n          padding: 10px;\n          position: absolute;\n\n          .chrome-picker {\n            background-color: inherit !important;\n            border: none !important;\n            border-radius: 0 !important;\n            box-shadow: none !important;\n            font-family: inherit !important;\n\n            > div {\n              border-radius: 0 !important;\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface InformationProps {\n  backgroundColor: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  gridSize: number;\n  height: number;\n  onChange: InputProps['onChange'];\n  onChangeBackgroundColor: (color: ColorResult) => void;\n  overflow: boolean;\n  scale: number;\n  width: number;\n}\n\nconst Information: React.SFC<InformationProps> = ({\n  backgroundColor,\n  gridSize,\n  height,\n  onChange,\n  onChangeBackgroundColor,\n  overflow,\n  scale,\n  width\n}: InformationProps) => {\n  const { a, b, g, r } = backgroundColor;\n\n  return (\n    <Div>\n      <dl>\n        <dt>width</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"width\"\n            onChange={onChange}\n            type=\"number\"\n            value={width}\n          />\n          px\n        </dd>\n        <dt>height</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"height\"\n            onChange={onChange}\n            type=\"number\"\n            value={height}\n          />\n          px\n        </dd>\n        <dt>scale</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"scale\"\n            onChange={onChange}\n            step={0.1}\n            type=\"number\"\n            value={scale}\n          />\n          px\n        </dd>\n        <dt>grid-size</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            max={500}\n            min={0}\n            name=\"gridSize\"\n            onChange={onChange}\n            type=\"number\"\n            value={gridSize}\n          />\n          px\n        </dd>\n        <dt>background-color</dt>\n        <dd>\n          <div\n            className=\"background-color\"\n            style={{ backgroundColor: `rgba(${r},${g}, ${b},${a})` }}\n          >\n            <div className=\"picker\">\n              <ChromePicker\n                color={backgroundColor}\n                onChange={onChangeBackgroundColor}\n              />\n            </div>\n          </div>\n        </dd>\n        <dt>overflow</dt>\n        <dd>\n          <Input\n            defaultChecked={overflow}\n            name=\"overflow\"\n            onChange={onChange}\n            type=\"checkbox\"\n          />\n        </dd>\n      </dl>\n    </Div>\n  );\n};\n\nexport default Information;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: grid;\n  grid-gap: 5px;\n  margin-bottom: 5px;\n  width: 100%;\n\n  li {\n    border: 1px solid #ddd;\n    padding: 2.5px;\n\n    &.select {\n      border: solid #b33e5c 1px;\n    }\n\n    textarea {\n      border: 1px solid #ddd;\n      font-size: 1.2rem;\n      height: 50px;\n      min-height: 50px;\n      overflow-y: scroll;\n      padding: 2.5px;\n      width: 100%;\n    }\n\n    .image {\n      background-position: center;\n      background-size: cover;\n      height: 50px;\n      overflow: hidden;\n      padding: 2.5px;\n      width: 100%;\n    }\n  }\n`;\n\ninterface ImageLayer {\n  url: string;\n}\n\ninterface TextLayer {\n  value: string;\n}\n\nexport interface LayersProps {\n  index?: number;\n  layers: (ImageLayer | TextLayer)[];\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n}\n\nconst Layers: React.SFC<LayersProps> = ({\n  index,\n  layers,\n  onChange,\n  onClick,\n  onFocus\n}: LayersProps) => (\n  <Ul>\n    {layers\n      .map((layer, layerIndex) => {\n        let v = <React.Fragment />;\n\n        if ('value' in layer) {\n          const { value } = layer;\n\n          v = (\n            <textarea\n              data-index={layerIndex}\n              onChange={onChange}\n              onFocus={onFocus}\n              value={value}\n            />\n          );\n        } else if ('url' in layer) {\n          const { url } = layer;\n\n          v = (\n            <div\n              className=\"image\"\n              data-index={layerIndex}\n              onClick={onClick}\n              style={{ backgroundImage: `url(${url})` }}\n            />\n          );\n        }\n\n        return (\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\n            {v}\n          </li>\n        );\n      })\n      .reverse()}\n  </Ul>\n);\n\nexport default Layers;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  background-color: #bbb;\n  display: grid;\n  grid-auto-rows: 25px;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fill, 25px);\n  padding: 5px;\n  width: 100%;\n\n  li {\n    height: 100%;\n    width: 100%;\n\n    button {\n      height: 100%;\n      width: 100%;\n\n      .icon {\n        color: white;\n        height: 100%;\n        width: 100%;\n      }\n    }\n  }\n`;\n\nexport interface LayerSettingProps {\n  children: React.ReactNodeArray;\n}\n\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\n  children\n}: LayerSettingProps) => (\n  <Ul>\n    {children.map((value, index) => (\n      <li key={index}>{value}</li>\n    ))}\n  </Ul>\n);\n\nexport default LayerSetting;\n","import * as $ from 'jquery';\nimport * as React from 'react';\nimport { DotLoader } from 'react-spinners';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  p {\n    margin-top: 30px;\n  }\n`;\n\nclass Loading extends React.Component {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    return (\n      <Div className=\"portal\">\n        <DotLoader color=\"#234794\" />\n        <p>Generating... wait a minutes.</p>\n      </Div>\n    );\n  }\n}\n\nexport default Loading;\n","import Loading from 'components/templates/Loading';\nimport domtoimage from 'dom-to-image';\nimport { saveAs } from 'file-saver';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: flex;\n  font-size: 1.2rem;\n\n  > li {\n    position: relative;\n\n    &:hover {\n      background-color: #fff;\n\n      > ul {\n        display: block;\n      }\n    }\n\n    > p {\n      align-items: center;\n      display: flex;\n      height: 24px;\n      justify-content: center;\n      width: 50px;\n    }\n\n    > ul {\n      background-color: #fff;\n      border: 1px #ddd solid;\n      display: none;\n      left: -1px;\n      position: absolute;\n      top: 100%;\n\n      > li {\n        > a,\n        > button,\n        > p {\n          align-items: center;\n          display: flex;\n          height: 25px;\n          padding: 0 30px 0 15px;\n          white-space: nowrap;\n        }\n\n        > a {\n          color: inherit;\n          text-decoration: none;\n        }\n      }\n    }\n  }\n`;\n\nexport interface MenuProps {\n  changePreviewOverflow: (value: boolean) => void;\n  overflow: boolean;\n}\n\ninterface MenuState {\n  isShowLoading: boolean;\n}\n\nclass Menu extends React.Component<MenuProps, MenuState> {\n  rootEl: HTMLElement;\n\n  constructor(props: MenuProps) {\n    super(props);\n\n    this.rootEl = document.getElementById('root');\n    this.state = {\n      isShowLoading: false\n    };\n  }\n\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\n    const { changePreviewOverflow, overflow } = this.props;\n    const { isShowLoading } = this.state;\n\n    if (isShowLoading) {\n      if (overflow) {\n        changePreviewOverflow(false);\n\n        return;\n      }\n\n      // domtoimage.toBlob(document.getElementById('capture')!).then(blob => {\n      //   saveAs(blob, 'image.png');\n\n      //   this.setState(\n      //     {\n      //       isShowLoading: false\n      //     },\n      //     () => {\n      //       if (prevOverflow) {\n      //         changePreviewOverflow(true);\n      //       }\n      //     }\n      //   );\n      // });\n\n      domtoimage.toPng(document.getElementById('capture')!).then(dataUrl => {\n        const img = new Image();\n\n        img.src = dataUrl;\n\n        document.body.appendChild(img);\n\n        this.setState(\n          {\n            isShowLoading: false\n          },\n          () => {\n            if (prevOverflow) {\n              changePreviewOverflow(true);\n            }\n          }\n        );\n      });\n    }\n  }\n\n  render() {\n    const { isShowLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        <Ul>\n          <li>\n            <p>File</p>\n            <ul>\n              <li>\n                <button\n                  onClick={() => {\n                    this.setState({ isShowLoading: true });\n                  }}\n                >\n                  Save\n                </button>\n              </li>\n              {/* <li>\n          <p>Save As...</p>\n        </li> */}\n            </ul>\n          </li>\n          <li>\n            <p>Help</p>\n            <ul>\n              <li>\n                <a\n                  href=\"https://github.com/piro0919/image-maker\"\n                  target=\"_blank\"\n                >\n                  GitHub\n                </a>\n              </li>\n              {/* <li>\n                <p>About Image Maker</p>\n              </li> */}\n            </ul>\n          </li>\n        </Ul>\n        {isShowLoading ? (\n          ReactDOM.createPortal(<Loading />, this.rootEl)\n        ) : (\n          <React.Fragment />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Menu;\n","import * as React from 'react';\nimport * as uniqid from 'uniqid';\n\nexport interface ImagePreviewProps {\n  id: string;\n  style: {\n    opacity: number;\n    rotate: number;\n    scale: number;\n  };\n  url: string;\n}\n\ninterface ImagePreviewState {\n  height: number;\n  width: number;\n}\n\nclass ImagePreview extends React.Component<\n  ImagePreviewProps,\n  ImagePreviewState\n> {\n  id: string;\n\n  constructor(props: ImagePreviewProps) {\n    super(props);\n\n    this.id = uniqid();\n    this.state = {\n      height: 0,\n      width: 0\n    };\n  }\n\n  componentDidMount() {\n    const { url } = this.props;\n    const element = new Image();\n\n    element.onload = () => {\n      const { naturalHeight: height, naturalWidth: width } = element;\n\n      this.setState(\n        {\n          height,\n          width\n        },\n        () => {\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\n          const context = canvas.getContext('2d');\n          const image = new Image();\n\n          image.src = url;\n          image.onload = () => {\n            context!.drawImage(image, 0, 0, width, height);\n          };\n        }\n      );\n    };\n    element.src = url;\n  }\n\n  render() {\n    const {\n      style: { rotate, scale, ...style }\n    } = this.props;\n    const { height, width } = this.state;\n\n    return (\n      <canvas\n        height={height}\n        id={this.id}\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\n        width={width}\n      />\n    );\n  }\n}\n\nexport default ImagePreview;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  white-space: nowrap;\n`;\n\nexport interface TextPreviewProps {\n  id: string;\n  style: {\n    color: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    fontFamily: {\n      label: string;\n      value: string;\n    };\n    fontSize: number;\n    fontWeight: number;\n    lineHeight: number;\n    opacity: number;\n    rotate: number;\n  };\n  value: string;\n}\n\nconst TextPreview: React.SFC<TextPreviewProps> = ({\n  style: {\n    color: { a, b, g, r },\n    fontFamily: { value: fontFamily },\n    fontSize,\n    fontWeight,\n    lineHeight,\n    opacity,\n    rotate\n  },\n  value\n}: TextPreviewProps) => (\n  <Div\n    style={{\n      fontFamily,\n      fontWeight,\n      opacity,\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\n      fontSize: `${fontSize}px`,\n      transform: `rotate(${rotate}deg)`\n    }}\n  >\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\n      <div\n        key={index}\n        style={{\n          height: `${lineHeight}px`,\n          lineHeight: `${lineHeight}px`\n        }}\n      >\n        {v}\n      </div>\n    ))}\n  </Div>\n);\n\nexport default TextPreview;\n","import ImagePreview, {\n  ImagePreviewProps\n} from 'components/molecules/ImagePreview';\nimport TextPreview, {\n  TextPreviewProps\n} from 'components/molecules/TextPreview';\nimport * as React from 'react';\nimport ReactScalableDraggable from 'react-scalable-draggable';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  background-color: #bbb;\n  height: 100%;\n  overflow: scroll;\n  position: relative;\n  width: 100%;\n\n  .wrapper {\n    box-sizing: content-box;\n    left: 0;\n    padding: 50px;\n    position: absolute;\n    top: 0;\n    transform-origin: top left;\n\n    #capture {\n      height: inherit;\n      width: inherit;\n\n      .screen {\n        height: inherit;\n        position: relative;\n        width: inherit;\n\n        &::before {\n          background-image: url(${process.env.PUBLIC_URL}/images/grid.png);\n          background-repeat: repeat;\n          background-size: inherit;\n          content: '';\n          display: block;\n          height: 100%;\n          left: 0;\n          position: absolute;\n          top: 0;\n          width: 100%;\n        }\n\n        .draggable {\n          cursor: move;\n          position: absolute;\n          word-break: keep-all;\n        }\n      }\n    }\n  }\n`;\n\nexport interface PreviewProps {\n  layers: (ImagePreviewProps | TextPreviewProps)[];\n  preview: {\n    backgroundColor: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    gridSize: number;\n    height: number;\n    overflow: boolean;\n    scale: number;\n    width: number;\n  };\n}\n\nconst Preview: React.SFC<PreviewProps> = ({\n  layers,\n  preview: {\n    backgroundColor: { a, b, g, r },\n    gridSize,\n    height,\n    overflow,\n    scale,\n    width\n  }\n}) => {\n  const previews = layers.map(layer => {\n    const { id } = layer;\n\n    let node = <React.Fragment />;\n\n    if ('value' in layer) {\n      node = <TextPreview {...layer} />;\n    } else if ('url' in layer) {\n      node = <ImagePreview {...layer} />;\n    }\n\n    return (\n      <ReactScalableDraggable\n        className=\"draggable\"\n        key={id}\n        parentScale={scale}\n      >\n        {node}\n      </ReactScalableDraggable>\n    );\n  });\n\n  return (\n    <Div id=\"preview\">\n      <div\n        className=\"wrapper\"\n        style={{\n          height: `${height}px`,\n          transform: `scale(${scale})`,\n          width: `${width}px`\n        }}\n      >\n        <div id=\"capture\">\n          <div\n            className=\"screen\"\n            style={{\n              backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\n              backgroundSize: `${gridSize}px`,\n              overflow: overflow ? 'visible' : 'hidden'\n            }}\n          >\n            {previews}\n          </div>\n        </div>\n      </div>\n    </Div>\n  );\n};\n\nexport default Preview;\n","import Input from 'components/atoms/Input';\nimport * as React from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport Select from 'react-select';\nimport { Props } from 'react-select/lib/Select';\nimport styled from 'styled-components';\n\nconst Dl = styled.ul`\n  dt:not(:first-child) {\n    margin-top: 10px;\n  }\n\n  dd {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 5px;\n\n    .select {\n      width: 220px;\n    }\n\n    .input {\n      width: 60px;\n    }\n\n    .picker .chrome-picker {\n      background-color: #fff !important;\n      border: 1px #ddd solid !important;\n      border-radius: 0 !important;\n      box-shadow: none !important;\n      font-family: inherit !important;\n\n      > div {\n        border-radius: 0 !important;\n      }\n    }\n  }\n`;\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface TextLayerStylesProps {\n  color: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  fontFamily: {\n    label: string;\n    value: string;\n  };\n  fonts: Font[];\n  fontSize: number;\n  fontWeight: number;\n  lineHeight: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeColor: (color: ColorResult) => void;\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\n  opacity: number;\n  rotate: number;\n}\n\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\n  color,\n  fontFamily,\n  fonts,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  onChange,\n  onChangeColor,\n  onChangeFontFamily,\n  opacity,\n  rotate\n}: TextLayerStylesProps) => (\n  <Dl>\n    <dt>color</dt>\n    <dd>\n      <div className=\"picker\">\n        <ChromePicker color={color} onChange={onChangeColor} />\n      </div>\n    </dd>\n    <dt>font-family</dt>\n    <dd>\n      <Select\n        className=\"select\"\n        onChange={onChangeFontFamily}\n        options={fonts.map(({ fontFamily: value, name: label }) => ({\n          label,\n          value\n        }))}\n        value={fontFamily}\n      />\n    </dd>\n    <dt>font-size</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        min={0}\n        name=\"fontSize\"\n        onChange={onChange}\n        type=\"number\"\n        value={fontSize}\n      />\n      px\n    </dd>\n    <dt>font-weight</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        max={900}\n        min={100}\n        name=\"fontWeight\"\n        onChange={onChange}\n        step={100}\n        type=\"number\"\n        value={fontWeight}\n      />\n    </dd>\n    <dt>line-height</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        min={0}\n        name=\"lineHeight\"\n        onChange={onChange}\n        type=\"number\"\n        value={lineHeight}\n      />\n      px\n    </dd>\n    <dt>opacity</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        max={1}\n        min={0}\n        name=\"opacity\"\n        onChange={onChange}\n        step={0.01}\n        type=\"number\"\n        value={opacity}\n      />\n    </dd>\n    <dt>rotate</dt>\n    <dd>\n      <Input\n        className=\"input\"\n        name=\"rotate\"\n        onChange={onChange}\n        step={0.1}\n        type=\"number\"\n        value={rotate}\n      />\n      deg\n    </dd>\n  </Dl>\n);\n\nexport default TextLayerStyles;\n","import * as $ from 'jquery';\nimport * as React from 'react';\nimport ReactDropzone, {\n  DropzoneProps as ReactDropzoneProps\n} from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  background-color: rgba(255, 255, 255, 0.75);\n  height: 100%;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  .wrapper {\n    align-items: center;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n\n    img {\n      height: calc(231px / 3);\n      opacity: 0.75;\n      width: calc(289px / 3);\n    }\n\n    p {\n      margin-top: 15px;\n    }\n  }\n\n  .close-button {\n    height: 50px;\n    position: fixed;\n    right: 10px;\n    top: 10px;\n    width: 50px;\n\n    &::before,\n    &::after {\n      background-color: #000;\n      display: block;\n      content: '';\n      left: 50%;\n      position: absolute;\n      top: 50%;\n      transform: translate(-50%, -50%) rotate(45deg);\n    }\n\n    &::before {\n      height: 1px;\n      width: 100%;\n    }\n\n    &::after {\n      height: 100%;\n      width: 1px;\n    }\n  }\n`;\n\nexport interface DropzoneProps {\n  onClickCloseButton: (e: React.MouseEvent<HTMLButtonElement>) => void;\n  onDrop: ReactDropzoneProps['onDrop'];\n}\n\nclass Dropzone extends React.Component<DropzoneProps> {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    const { onClickCloseButton, onDrop } = this.props;\n\n    return (\n      <Div className=\"portal\">\n        <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\n          {({ getRootProps, getInputProps, isDragActive }) => (\n            <div {...getRootProps()} className=\"wrapper\">\n              <input {...getInputProps()} />\n              <img src={`${process.env.PUBLIC_URL}/images/dd.png`} />\n              <p>\n                {isDragActive\n                  ? 'Drop files here...'\n                  : 'Try dropping some image files here, or click to select files to upload.'}\n              </p>\n            </div>\n          )}\n        </ReactDropzone>\n        <button className=\"close-button\" onClick={onClickCloseButton} />\n      </Div>\n    );\n  }\n}\n\nexport default Dropzone;\n","import * as $ from 'jquery';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  .wrapper {\n    height: 360px;\n    position: relative;\n    width: 640px;\n\n    img {\n      height: 100%;\n      width: 100%;\n    }\n\n    p {\n      bottom: 80px;\n      color: #ef64a0;\n      font-size: 1.2em;\n      position: absolute;\n      right: 30px;\n    }\n  }\n`;\n\nexport interface LogoProps {\n  loading: number;\n}\n\nclass Logo extends React.Component<LogoProps> {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <Div className=\"portal\">\n        <div className=\"wrapper\">\n          <img src={`${process.env.PUBLIC_URL}/images/top.png`} />\n          <p>font list loading... {loading}%</p>\n        </div>\n      </Div>\n    );\n  }\n}\n\nexport default Logo;\n","import setFonts from 'actions/fonts/setFonts';\nimport addImageLayer from 'actions/layer/addImageLayer';\nimport addTextLayer from 'actions/layer/addTextLayer';\nimport changeStyle from 'actions/layer/changeStyle';\nimport changeValue from 'actions/layer/changeValue';\nimport downLayer from 'actions/layer/downLayer';\nimport removeLayer from 'actions/layer/removeLayer';\nimport selectLayer from 'actions/layer/selectLayer';\nimport upLayer from 'actions/layer/upLayer';\nimport changePreviewValue from 'actions/preview/changeValue';\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\nimport ImageButton from 'components/atoms/ImageButton';\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\nimport Information, {\n  InformationProps\n} from 'components/organisms/Information';\nimport Layers, { LayersProps } from 'components/organisms/Layers';\nimport LayerSetting from 'components/organisms/LayerSetting';\nimport Menu, { MenuProps } from 'components/organisms/Menu';\nimport Preview from 'components/organisms/Preview';\nimport TextLayerStyles, {\n  TextLayerStylesProps\n} from 'components/organisms/TextLayerStyles';\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\nimport Logo from 'components/templates/Logo';\n// import * as $ from 'jquery';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { State } from 'reducers';\nimport { Dispatch } from 'redux';\nimport styled from 'styled-components';\nimport * as WebFont from 'webfontloader';\n\nconst Div = styled.div`\n  background-color: #fbfbfb;\n  display: grid;\n  height: 100%;\n  grid-template-columns: 275px 1fr 200px;\n  grid-template-rows: 25px 1fr;\n\n  .header {\n    border-bottom: 1px #ddd inset;\n    grid-column: 1 / 4;\n  }\n\n  .detail {\n    overflow-y: scroll;\n    padding: 5px 10px;\n  }\n\n  .preview {\n    box-shadow: 1px 0px #ddd inset;\n    display: grid;\n    grid-gap: 5px;\n    grid-template-rows: 1fr 20px;\n    padding: 5px;\n  }\n\n  .side-layers {\n    box-shadow: 1px 0px #ddd inset;\n    display: flex;\n    flex-direction: column;\n\n    .layers {\n      flex-basis: 0;\n      flex-grow: 1;\n      overflow-y: scroll;\n      padding: 5px;\n    }\n  }\n`;\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface PagesProps\n  extends ReturnType<typeof mapDispatchToProps>,\n    ReturnType<typeof mapStateToProps>,\n    RouteComponentProps {}\n\ninterface PagesState {\n  isShowDropzone: boolean;\n  isShowLogo: boolean;\n  loading: number;\n}\n\nclass Pages extends React.Component<PagesProps, PagesState> {\n  rootEl: HTMLElement;\n\n  constructor(props: PagesProps) {\n    super(props);\n\n    this.rootEl = document.getElementById('root');\n    this.state = {\n      isShowDropzone: false,\n      // isShowLogo: true,\n      isShowLogo: process.env.NODE_ENV !== 'development',\n      loading: 0\n    };\n  }\n\n  componentDidMount() {\n    const { setFonts } = this.props;\n    const request = new XMLHttpRequest();\n\n    request.open('GET', `${process.env.PUBLIC_URL}/jsons/fonts.json`, true);\n    request.responseType = 'blob';\n    request.onload = ({ target: { response } }: any) => {\n      const reader = new FileReader();\n\n      reader.onload = ({ target: { result } }: any) => {\n        const fonts: Font[] = JSON.parse(result);\n        const style = document.createElement('style');\n\n        let counter = 0;\n\n        setFonts(fonts);\n\n        style.appendChild(\n          document.createTextNode(\n            fonts\n              .map(\n                ({ fontFamily }) =>\n                  `@font-face {font-family: '${fontFamily}';src: url('${\n                    process.env.PUBLIC_URL\n                  }/fonts/${fontFamily}.woff2') format('woff2'),url('${\n                    process.env.PUBLIC_URL\n                  }/fonts/${fontFamily}.woff') format('woff'),url('${\n                    process.env.PUBLIC_URL\n                  }/fonts/${fontFamily}.ttf') format('truetype');}`\n              )\n              .join('')\n          )\n        );\n\n        document.head.appendChild(style);\n\n        WebFont.load({\n          active: () => {\n            setTimeout(() => {\n              this.setState({ isShowLogo: false, loading: 100 }, () => {\n                if (process.env.NODE_ENV !== 'development') {\n                  return;\n                }\n\n                console.log('active');\n              });\n            }, 1000);\n          },\n          classes: false,\n          custom: {\n            families: fonts.map(({ fontFamily }) => fontFamily)\n          },\n          fontactive: (familyName: string, fvd: string) => {\n            counter = counter + 1;\n\n            this.setState(\n              {\n                loading: Math.floor((counter / fonts.length) * 100)\n              },\n              () => {\n                if (process.env.NODE_ENV !== 'development') {\n                  return;\n                }\n\n                console.log('fontactive', familyName, fvd);\n              }\n            );\n          },\n          fontinactive: (familyName: string, fvd: string) => {\n            counter = counter + 1;\n\n            this.setState(\n              {\n                loading: Math.floor((counter / fonts.length) * 100)\n              },\n              () => {\n                if (process.env.NODE_ENV !== 'development') {\n                  return;\n                }\n\n                console.log('fontinactive', familyName, fvd);\n              }\n            );\n          }\n        });\n      };\n      reader.readAsText(response);\n    };\n    request.send();\n  }\n\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\n    const { layers } = this.props;\n    const { isShowDropzone } = this.state;\n\n    if (isShowDropzone && prevLayers.length !== layers.length) {\n      this.setState({ isShowDropzone: false });\n    }\n  }\n\n  render() {\n    const {\n      addImageLayers,\n      addTextLayer,\n      changeColor,\n      changeFontFamily,\n      changePreviewBackgroundColor,\n      changePreviewOverflow,\n      changePreviewValue,\n      changeStyle,\n      changeValue,\n      downLayer,\n      fonts,\n      index,\n      layers,\n      preview,\n      removeLayer,\n      selectLayer,\n      upLayer\n    } = this.props;\n    const { isShowDropzone, isShowLogo, loading } = this.state;\n\n    let styles = <React.Fragment />;\n\n    if (index !== undefined) {\n      const layer = layers[index];\n\n      if ('value' in layer) {\n        const { style } = layer;\n\n        styles = (\n          <TextLayerStyles\n            {...style}\n            fonts={fonts}\n            onChange={changeStyle}\n            onChangeColor={changeColor}\n            onChangeFontFamily={changeFontFamily}\n          />\n        );\n      } else if ('url' in layer) {\n        const { style } = layer;\n\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\n      }\n    }\n\n    return (\n      <Div>\n        <header className=\"header\">\n          <Menu {...preview} changePreviewOverflow={changePreviewOverflow} />\n        </header>\n        <aside className=\"detail\">{styles}</aside>\n        <div className=\"preview\">\n          <Preview layers={layers} preview={preview} />\n          <Information\n            {...preview}\n            onChange={changePreviewValue}\n            onChangeBackgroundColor={changePreviewBackgroundColor}\n          />\n        </div>\n        <aside className=\"side-layers\">\n          <LayerSetting>\n            {[\n              <DocumentAddButton key=\"add\" onClick={addTextLayer} />,\n              <DocumentDeleteButton\n                disabled={index === undefined}\n                key=\"delete\"\n                onClick={removeLayer}\n              />,\n              <ImageButton\n                key=\"image\"\n                onClick={() => {\n                  this.setState({ isShowDropzone: true });\n                }}\n              />,\n              <ArrowUpOutlineButton\n                disabled={index === undefined || index === layers.length - 1}\n                key=\"up\"\n                onClick={upLayer}\n              />,\n              <ArrowDownOutlineButton\n                disabled={!index}\n                key=\"down\"\n                onClick={downLayer}\n              />\n            ]}\n          </LayerSetting>\n          <div className=\"layers\">\n            <Layers\n              index={index}\n              layers={layers}\n              onChange={changeValue}\n              onClick={selectLayer}\n              onFocus={selectLayer}\n            />\n          </div>\n        </aside>\n        {isShowDropzone ? (\n          ReactDOM.createPortal(\n            <Dropzone\n              onClickCloseButton={() => {\n                this.setState({ isShowDropzone: false });\n              }}\n              onDrop={addImageLayers}\n            />,\n            this.rootEl\n          )\n        ) : (\n          <React.Fragment />\n        )}\n        {isShowLogo ? (\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)\n        ) : (\n          <React.Fragment />\n        )}\n      </Div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addImageLayers: (\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\n  ) => {\n    acceptedFiles.forEach(acceptedFile => {\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\n    });\n  },\n  addTextLayer: () => dispatch(addTextLayer()),\n  changeColor: ({\n    rgb: value\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\n    dispatch(changeStyle({ value, name: 'color' })),\n  changeFontFamily: (\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\n  changePreviewBackgroundColor: ({\n    rgb: value\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\n    dispatch(changePreviewValue({ value, name: 'backgroundColor' })),\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\n  changePreviewValue: ({\n    currentTarget: { checked, name, type, value }\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\n    dispatch(\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\n    ),\n  changeStyle: ({\n    currentTarget: { name, value }\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\n    dispatch(changeStyle({ name, value })),\n  changeValue: ({\n    target: { value }\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\n    dispatch(changeValue({ value })),\n  downLayer: () => dispatch(downLayer()),\n  removeLayer: () => dispatch(removeLayer()),\n  selectLayer: ({\n    currentTarget: { dataset }\n  }:\n    | ArgumentTypes<LayersProps['onClick']>[0]\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\n  upLayer: () => dispatch(upLayer())\n});\n\nconst mapStateToProps = ({\n  fonts: { fonts },\n  layer: { index, layers },\n  preview\n}: State) => ({\n  fonts,\n  index,\n  layers,\n  preview\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pages);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface FontsState {\n  fonts: Font[];\n}\n\nconst initialState: FontsState = {\n  fonts: []\n};\n\nconst fonts = reducerWithInitialState(initialState).case(\n  setFonts,\n  (state, { fonts }) => ({ ...state, fonts })\n);\n\nexport default fonts;\n","import addImageLayer from 'actions/layer/addImageLayer';\nimport addTextLayer from 'actions/layer/addTextLayer';\nimport changeStyle from 'actions/layer/changeStyle';\nimport changeValue from 'actions/layer/changeValue';\nimport downLayer from 'actions/layer/downLayer';\nimport removeLayer from 'actions/layer/removeLayer';\nimport selectLayer from 'actions/layer/selectLayer';\nimport upLayer from 'actions/layer/upLayer';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport * as uniqid from 'uniqid';\n\ninterface ImageLayer {\n  id: string;\n  style: {\n    opacity: number;\n    rotate: number;\n    scale: number;\n  };\n  url: string;\n}\n\ninterface TextLayer {\n  id: string;\n  style: {\n    color: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    fontFamily: {\n      label: string;\n      value: string;\n    };\n    fontSize: number;\n    fontWeight: number;\n    lineHeight: number;\n    opacity: number;\n    rotate: number;\n  };\n  value: string;\n}\n\nexport interface LayerState {\n  index?: number;\n  layers: (ImageLayer | TextLayer)[];\n}\n\nconst initialState: LayerState = {\n  index: undefined,\n  layers: []\n};\n\nconst layer = reducerWithInitialState(initialState)\n  .case(addImageLayer, (state, { url }) => {\n    const { layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    layers.push({\n      url,\n      id: uniqid(),\n      style: {\n        opacity: 1,\n        rotate: 0,\n        scale: 1\n      }\n    });\n\n    return { ...state, layers };\n  })\n  .case(addTextLayer, state => {\n    const { layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    layers.push({\n      id: uniqid(),\n      style: {\n        color: {\n          a: 1,\n          b: 0,\n          g: 0,\n          r: 0\n        },\n        fontFamily: {\n          label: 'バンバン',\n          value: 'BANBAN-FREE'\n        },\n        fontSize: 16,\n        fontWeight: 400,\n        lineHeight: 16,\n        opacity: 1,\n        rotate: 0\n      },\n      value: ''\n    });\n\n    return { ...state, layers };\n  })\n  .case(changeStyle, (state, { name, value }) => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    if (name === 'fontSize' || name === 'fontWeight' || name === 'lineHeight') {\n      layers[index].style[name] = parseInt(value, 10);\n    } else if (name === 'opacity' || name === 'rotate' || name === 'scale') {\n      layers[index].style[name] = parseFloat(value);\n    } else {\n      layers[index].style[name] = value;\n    }\n\n    return { ...state, layers };\n  })\n  .case(changeValue, (state, { value }) => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const layer = layers[index];\n\n    if ('value' in layer) {\n      layer.value = value;\n\n      layers[index] = layer;\n    }\n\n    return { ...state, layers };\n  })\n  .case(downLayer, state => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const tmpLayer = layers[index];\n\n    layers[index] = layers[index - 1];\n    layers[index - 1] = tmpLayer;\n\n    return { ...state, index: index - 1, layers };\n  })\n  .case(removeLayer, state => {\n    const { index, layers: prevLayers } = state;\n\n    if (index === undefined) {\n      return state;\n    }\n\n    const layers = prevLayers.slice();\n\n    layers.splice(index, 1);\n\n    return {\n      layers,\n      index: undefined\n    };\n  })\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\n  .case(upLayer, state => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const tmpLayer = layers[index];\n\n    layers[index] = layers[index + 1];\n    layers[index + 1] = tmpLayer;\n\n    return { ...state, index: index + 1, layers };\n  });\n\nexport default layer;\n","import changeValue from 'actions/preview/changeValue';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nexport interface PreviewState {\n  backgroundColor: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  gridSize: number;\n  height: number;\n  overflow: boolean;\n  scale: number;\n  width: number;\n}\n\nconst initialState: PreviewState = {\n  backgroundColor: {\n    a: 1,\n    b: 255,\n    g: 255,\n    r: 255\n  },\n  gridSize: 0,\n  height: 300,\n  overflow: true,\n  scale: 1,\n  width: 400\n};\n\nconst preview = reducerWithInitialState(initialState).case(\n  changeValue,\n  (state, { name, value: newValue }) => {\n    let value;\n\n    if (name === 'gridSize' || name === 'height' || name === 'width') {\n      value = parseInt(newValue as string, 10);\n    } else if (name === 'scale') {\n      value = parseFloat(newValue as string);\n    } else {\n      value = newValue;\n    }\n\n    return { ...state, ...{ [name]: value } };\n  }\n);\n\nexport default preview;\n","import { combineReducers } from 'redux';\nimport fonts, { FontsState } from './fonts';\nimport layer, { LayerState } from './layer';\nimport preview, { PreviewState } from './preview';\n\nexport interface State {\n  fonts: FontsState;\n  layer: LayerState;\n  preview: PreviewState;\n}\n\nconst reducers = () => combineReducers({ fonts, layer, preview });\n\nexport default reducers;\n","import Pages from 'containers/pages';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport 'ress';\nimport { createGlobalStyle } from 'styled-components';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst store = createStore(reducers());\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\n    font-size: 62.5%;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: 400;\n    height: 100%;\n    line-height: 1.2;\n    overflow: hidden !important;\n    -webkit-overflow-scrolling: touch;\n    width: 100%;\n  \n    body {\n      font-size: 1.4rem;\n      height: 100%;\n      width: 100%;\n    \n      #root {\n        height: 100%;\n        width: 100%;\n\n        * {\n          appearance: none;\n          \n          &:focus {\n            outline: none;\n          }\n        }\n  \n        a {\n          line-height: 0;\n        }\n\n        ul {\n          list-style: none;\n        }\n      }\n    }\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\n    >\n      <Switch>\n        <Route component={Pages} exact={true} path=\"/\" />\n      </Switch>\n    </BrowserRouter>\n    <GlobalStyle />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}