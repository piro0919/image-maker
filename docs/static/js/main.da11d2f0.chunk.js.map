{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/Input/index.tsx","components/molecules/LayerStyles/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/atoms/CloseButton/index.tsx","components/atoms/DownloadButton/index.tsx","components/templates/Image/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","changeStyle","changeValue","downLayer","removeLayer","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","StyledInput","input","Input_templateObject","Input","Dl","dl","LayerStyles_templateObject","LayerStyles","_ref","children","map","_ref2","name","node","key","StyledLayerStyles","ImageLayerStyles_templateObject","ImageLayerStyles","onChange","opacity","rotate","scale","atoms_Input","max","min","step","type","value","Div","div","Information_templateObject","Information","backgroundColor","gridSize","height","onChangeBackgroundColor","overflow","width","a","b","g","r","style","concat","react_color_lib","color","defaultChecked","Ul","ul","Layers_templateObject","Layers","index","layers","onClick","onFocus","layer","layerIndex","v","data-index","url","backgroundImage","reverse","LayerSetting_templateObject","LayerSetting","LayerSetting_Ul","CloseButton_templateObject","CloseButton","CloseButton_Button","DownloadButton_templateObject","DownloadButton","DownloadButton_Button","Image_templateObject","Image","$","css","_this$props","this","extension","onClickCloseButton","src","Image_Div","atoms_DownloadButton","saveAs","atoms_CloseButton","React","Loading_templateObject","Loading","Loading_Div","react_spinners","Menu_templateObject","Menu","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","undefined","imageUrl","isShowLoading","_this2","prevOverflow","changePreviewOverflow","_this$state","callback","setState","domtoimage","toJpeg","then","toPng","toSvg","_this3","_this$state2","Menu_Ul","href","target","ReactDOM","templates_Image","templates_Loading","ImagePreview","id","uniqid","element","onload","naturalHeight","naturalWidth","context","getContext","image","drawImage","_this$props$style","objectWithoutProperties","objectSpread","transform","TextPreview_templateObject","fontFamily","process","_ref3","_ref4","TextPreview","_ref5","_ref5$style","_ref5$style$color","fontSize","fontWeight","lineHeight","TextPreview_Div","split","Preview_templateObject","Preview","_ref$preview","preview","_ref$preview$backgrou","previews","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","TextLayerStyles_StyledLayerStyles","react_select_esm","options","label","Dropzone_templateObject","Dropzone","onDrop","Dropzone_Div","es","accept","getRootProps","getInputProps","isDragActive","assign","Logo_templateObject","Logo","loading","Logo_Div","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","reader","FileReader","result","JSON","parse","counter","WebFont","active","setTimeout","classes","custom","families","fontactive","familyName","fvd","Math","floor","length","fontinactive","inactive","readAsText","send","prevLayers","addImageLayers","changeColor","changeFontFamily","changePreviewBackgroundColor","changePreviewValue","styles","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","organisms_Menu","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","disabled","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref11","_ref11$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","rgb","_ref6","_ref7","_ref7$currentTarget","currentTarget","checked","_ref8","_ref8$currentTarget","_ref9","_ref10","dataset","parseInt","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","textShadows","parseFloat","tmpLayer","splice","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da11d2f0.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nconst actionCreator = actionCreatorFactory();\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\n\nexport default setFonts;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\n\nexport default addImageLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\n\nexport default addTextLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeStyle = actionCreator<{ name: string; value: any }>(\n  'LAYER.CHANGE_STYLE'\n);\n\nexport default changeStyle;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\n\nexport default changeValue;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\n\nexport default downLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\n\nexport default removeLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\n\nexport default selectLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst upLayer = actionCreator('LAYER.UP_LAYER');\n\nexport default upLayer;\n","import actionCreatorFactory from 'typescript-fsa';\n\nconst actionCreator = actionCreatorFactory();\nconst changeValue = actionCreator<{ name: string; value: any }>(\n  'PREVIEW.CHANGE_VALUE'\n);\n\nexport default changeValue;\n","import * as React from 'react';\nimport { TiArrowUpOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ArrowUpOutlineButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\n  props: ArrowUpOutlineButtonProps\n) => (\n  <Button {...props}>\n    <TiArrowUpOutline className=\"icon\" />\n  </Button>\n);\n\nexport default ArrowUpOutlineButton;\n","import * as React from 'react';\nimport { TiArrowDownOutline } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ArrowDownOutlineButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\n  props: ArrowDownOutlineButtonProps\n) => (\n  <Button {...props}>\n    <TiArrowDownOutline className=\"icon\" />\n  </Button>\n);\n\nexport default ArrowDownOutlineButton;\n","import * as React from 'react';\nimport { TiDocumentAdd } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DocumentAddButtonProps {\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\n  props: DocumentAddButtonProps\n) => (\n  <Button {...props}>\n    <TiDocumentAdd className=\"icon\" />\n  </Button>\n);\n\nexport default DocumentAddButton;\n","import * as React from 'react';\nimport { TiDocumentDelete } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DocumentDeleteButtonProps {\n  disabled: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\n  props: DocumentDeleteButtonProps\n) => (\n  <Button {...props}>\n    <TiDocumentDelete className=\"icon\" />\n  </Button>\n);\n\nexport default DocumentDeleteButton;\n","import * as React from 'react';\nimport { TiImage } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  .icon {\n    color: white;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface ImageButtonProps {\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\n  <Button {...props}>\n    <TiImage className=\"icon\" />\n  </Button>\n);\n\nexport default ImageButton;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledInput = styled.input`\n  background-color: #fff;\n  border: 1px #ddd solid;\n\n  &[type='checkbox'] {\n    height: 15px;\n    width: 15px;\n\n    &:checked {\n      background-color: #bbb;\n    }\n  }\n\n  &[type='number'] {\n    text-align: right;\n  }\n`;\n\nexport interface InputProps {\n  defaultChecked?: boolean;\n  className?: string;\n  max?: number;\n  min?: number;\n  name: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  step?: number;\n  type: string;\n  value?: number | string;\n}\n\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\n  <StyledInput {...props} />\n);\n\nexport default Input;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Dl = styled.dl`\n  > div {\n    padding: 10px 10px;\n\n    &:hover {\n      background-color: rgba(35, 71, 148, 0.1);\n    }\n  }\n\n  dd {\n    display: flex;\n    justify-content: flex-end;\n    margin-top: 5px;\n  }\n`;\n\ninterface Child {\n  name: string;\n  node: React.ReactNode;\n}\n\nexport interface LayerStylesProps {\n  children: Child[];\n  className?: string;\n}\n\nconst LayerStyles: React.SFC<LayerStylesProps> = ({\n  children,\n  className\n}: LayerStylesProps) => (\n  <Dl className={className}>\n    {children.map(({ name, node }) => (\n      <div key={name}>\n        <dt>{name}</dt>\n        <dd>{node}</dd>\n      </div>\n    ))}\n  </Dl>\n);\n\nexport default LayerStyles;\n","import Input from 'components/atoms/Input';\nimport LayerStyles from 'components/molecules/LayerStyles';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst StyledLayerStyles = styled(LayerStyles)`\n  .input {\n    width: 50px;\n  }\n`;\n\nexport interface ImageLayerStylesProps {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  opacity: number;\n  rotate: number;\n  scale: number;\n}\n\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\n  onChange,\n  opacity,\n  rotate,\n  scale\n}: ImageLayerStylesProps) => (\n  <StyledLayerStyles>\n    {[\n      {\n        name: 'opacity',\n        node: (\n          <Input\n            className=\"input\"\n            max={1}\n            min={0}\n            name=\"opacity\"\n            onChange={onChange}\n            step={0.01}\n            type=\"number\"\n            value={opacity}\n          />\n        )\n      },\n      {\n        name: 'rotate',\n        node: (\n          <React.Fragment>\n            <Input\n              className=\"input\"\n              name=\"rotate\"\n              onChange={onChange}\n              step={0.1}\n              type=\"number\"\n              value={rotate}\n            />\n            deg\n          </React.Fragment>\n        )\n      },\n      {\n        name: 'scale',\n        node: (\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"scale\"\n            onChange={onChange}\n            step={0.01}\n            type=\"number\"\n            value={scale}\n          />\n        )\n      }\n    ]}\n  </StyledLayerStyles>\n);\n\nexport default ImageLayerStyles;\n","import Input, { InputProps } from 'components/atoms/Input';\nimport * as React from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  display: flex;\n\n  dl {\n    align-items: center;\n    display: flex;\n\n    dt:not(:first-child) {\n      margin-left: 10px;\n    }\n\n    dd {\n      align-items: center;\n      display: flex;\n      margin-left: 5px;\n\n      .input {\n        width: 50px;\n      }\n\n      .background-color {\n        border: 1px #ddd solid;\n        display: flex;\n        height: 15px;\n        justify-content: center;\n        position: relative;\n        width: 15px;\n\n        &:hover .picker {\n          display: block;\n        }\n\n        .picker {\n          background-color: #fff;\n          border: 1px #ddd solid;\n          bottom: 100%;\n          display: none;\n          padding: 10px;\n          position: absolute;\n\n          .chrome-picker {\n            background-color: inherit !important;\n            border: none !important;\n            border-radius: 0 !important;\n            box-shadow: none !important;\n            font-family: inherit !important;\n\n            > div {\n              border-radius: 0 !important;\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport interface InformationProps {\n  backgroundColor: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  gridSize: number;\n  height: number;\n  onChange: InputProps['onChange'];\n  onChangeBackgroundColor: (color: ColorResult) => void;\n  overflow: boolean;\n  scale: number;\n  width: number;\n}\n\nconst Information: React.SFC<InformationProps> = ({\n  backgroundColor,\n  gridSize,\n  height,\n  onChange,\n  onChangeBackgroundColor,\n  overflow,\n  scale,\n  width\n}: InformationProps) => {\n  const { a, b, g, r } = backgroundColor;\n\n  return (\n    <Div>\n      <dl>\n        <dt>width</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"width\"\n            onChange={onChange}\n            type=\"number\"\n            value={width}\n          />\n          px\n        </dd>\n        <dt>height</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"height\"\n            onChange={onChange}\n            type=\"number\"\n            value={height}\n          />\n          px\n        </dd>\n        <dt>scale</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            min={0}\n            name=\"scale\"\n            onChange={onChange}\n            step={0.1}\n            type=\"number\"\n            value={scale}\n          />\n          px\n        </dd>\n        <dt>grid-size</dt>\n        <dd>\n          <Input\n            className=\"input\"\n            max={500}\n            min={0}\n            name=\"gridSize\"\n            onChange={onChange}\n            type=\"number\"\n            value={gridSize}\n          />\n          px\n        </dd>\n        <dt>background-color</dt>\n        <dd>\n          <div\n            className=\"background-color\"\n            style={{ backgroundColor: `rgba(${r},${g}, ${b},${a})` }}\n          >\n            <div className=\"picker\">\n              <ChromePicker\n                color={backgroundColor}\n                onChange={onChangeBackgroundColor}\n              />\n            </div>\n          </div>\n        </dd>\n        <dt>overflow</dt>\n        <dd>\n          <Input\n            defaultChecked={overflow}\n            name=\"overflow\"\n            onChange={onChange}\n            type=\"checkbox\"\n          />\n        </dd>\n      </dl>\n    </Div>\n  );\n};\n\nexport default Information;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: grid;\n  grid-gap: 5px;\n  margin-bottom: 5px;\n  width: 100%;\n\n  li {\n    border: 1px solid #ddd;\n    padding: 2.5px;\n\n    &.select {\n      border: solid #b33e5c 1px;\n    }\n\n    textarea {\n      border: 1px solid #ddd;\n      font-size: 1.2rem;\n      height: 50px;\n      min-height: 50px;\n      overflow-y: scroll;\n      padding: 2.5px;\n      width: 100%;\n    }\n\n    .image {\n      background-position: center;\n      background-size: cover;\n      height: 50px;\n      overflow: hidden;\n      padding: 2.5px;\n      width: 100%;\n    }\n  }\n`;\n\ninterface ImageLayer {\n  url: string;\n}\n\ninterface TextLayer {\n  value: string;\n}\n\nexport interface LayersProps {\n  index?: number;\n  layers: (ImageLayer | TextLayer)[];\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\n}\n\nconst Layers: React.SFC<LayersProps> = ({\n  index,\n  layers,\n  onChange,\n  onClick,\n  onFocus\n}: LayersProps) => (\n  <Ul>\n    {layers\n      .map((layer, layerIndex) => {\n        let v = <React.Fragment />;\n\n        if ('value' in layer) {\n          const { value } = layer;\n\n          v = (\n            <textarea\n              data-index={layerIndex}\n              onChange={onChange}\n              onFocus={onFocus}\n              value={value}\n            />\n          );\n        } else if ('url' in layer) {\n          const { url } = layer;\n\n          v = (\n            <div\n              className=\"image\"\n              data-index={layerIndex}\n              onClick={onClick}\n              style={{ backgroundImage: `url(${url})` }}\n            />\n          );\n        }\n\n        return (\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\n            {v}\n          </li>\n        );\n      })\n      .reverse()}\n  </Ul>\n);\n\nexport default Layers;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  background-color: #bbb;\n  display: grid;\n  grid-auto-rows: 25px;\n  grid-gap: 5px;\n  grid-template-columns: repeat(auto-fill, 25px);\n  padding: 5px;\n  width: 100%;\n\n  li {\n    height: 100%;\n    width: 100%;\n\n    button {\n      height: 100%;\n      width: 100%;\n\n      .icon {\n        color: white;\n        height: 100%;\n        width: 100%;\n      }\n    }\n  }\n`;\n\nexport interface LayerSettingProps {\n  children: React.ReactNodeArray;\n}\n\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\n  children\n}: LayerSettingProps) => (\n  <Ul>\n    {children.map((value, index) => (\n      <li key={index}>{value}</li>\n    ))}\n  </Ul>\n);\n\nexport default LayerSetting;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  position: relative;\n\n  &::before,\n  &::after {\n    background-color: #000;\n    display: block;\n    content: '';\n    left: 50%;\n    position: absolute;\n    top: 50%;\n    transform: translate(-50%, -50%) rotate(45deg);\n  }\n\n  &::before {\n    height: 1px;\n    width: 100%;\n  }\n\n  &::after {\n    height: 100%;\n    width: 1px;\n  }\n`;\n\nexport interface CloseButtonProps {\n  className?: string;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst CloseButton: React.SFC<CloseButtonProps> = (props: CloseButtonProps) => (\n  <Button {...props} />\n);\n\nexport default CloseButton;\n","import * as React from 'react';\nimport { TiDownload } from 'react-icons/ti';\nimport styled from 'styled-components';\n\nconst Button = styled.button`\n  height: 100%;\n  width: 100%;\n\n  &:disabled {\n    opacity: 0.5;\n  }\n\n  .icon {\n    color: black;\n    height: 100%;\n    width: 100%;\n  }\n`;\n\nexport interface DownloadButtonProps {\n  className?: string;\n  disabled?: boolean;\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\n}\n\nconst DownloadButton: React.SFC<DownloadButtonProps> = (\n  props: DownloadButtonProps\n) => (\n  <Button {...props}>\n    <TiDownload className=\"icon\" />\n  </Button>\n);\n\nexport default DownloadButton;\n","import CloseButton, { CloseButtonProps } from 'components/atoms/CloseButton';\nimport DownloadButton from 'components/atoms/DownloadButton';\nimport { saveAs } from 'file-saver';\nimport * as $ from 'jquery';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  img {\n    max-height: 90%;\n    max-width: 90%;\n  }\n\n  .download-button {\n    bottom: 10px;\n    height: 50px;\n    position: fixed;\n    right: 10px;\n    width: 50px;\n  }\n\n  .close-button {\n    height: 50px;\n    position: fixed;\n    right: 10px;\n    top: 10px;\n    width: 50px;\n  }\n`;\n\nexport interface ImageProps {\n  extension: 'jpg' | 'png' | 'svg';\n  onClickCloseButton: CloseButtonProps['onClick'];\n  src: string;\n}\n\nclass Image extends React.Component<ImageProps> {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    const { extension, onClickCloseButton, src } = this.props;\n\n    return (\n      <Div className=\"portal\">\n        <img src={src} />\n        <DownloadButton\n          className=\"download-button\"\n          onClick={() => {\n            saveAs(src, `image.${extension}`);\n          }}\n        />\n        <CloseButton className=\"close-button\" onClick={onClickCloseButton} />\n      </Div>\n    );\n  }\n}\n\nexport default Image;\n","import * as $ from 'jquery';\nimport * as React from 'react';\nimport { DotLoader } from 'react-spinners';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  p {\n    margin-top: 30px;\n  }\n`;\n\nclass Loading extends React.Component {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    return (\n      <Div className=\"portal\">\n        <DotLoader color=\"#234794\" />\n        <p>Generating... wait a minutes.</p>\n      </Div>\n    );\n  }\n}\n\nexport default Loading;\n","import Image, { ImageProps } from 'components/templates/Image';\nimport Loading from 'components/templates/Loading';\nimport domtoimage from 'dom-to-image';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport styled from 'styled-components';\n\nconst Ul = styled.ul`\n  display: flex;\n\n  > li {\n    position: relative;\n\n    &:hover {\n      background-color: #fff;\n\n      > ul {\n        display: block;\n      }\n    }\n\n    > p {\n      align-items: center;\n      display: flex;\n      height: 24px;\n      justify-content: center;\n      width: 50px;\n    }\n\n    > ul {\n      background-color: #fff;\n      border: 1px #ddd solid;\n      display: none;\n      left: -1px;\n      position: absolute;\n      top: 100%;\n\n      > li {\n        > a,\n        > button,\n        > p {\n          align-items: center;\n          display: flex;\n          height: 25px;\n          padding: 0 30px 0 15px;\n          white-space: nowrap;\n        }\n\n        > a {\n          color: inherit;\n          text-decoration: none;\n        }\n      }\n    }\n  }\n`;\n\nexport interface MenuProps {\n  changePreviewOverflow: (value: boolean) => void;\n  overflow: boolean;\n}\n\ninterface MenuState {\n  extension?: ImageProps['extension'];\n  imageUrl: string;\n  isShowLoading: boolean;\n}\n\nclass Menu extends React.Component<MenuProps, MenuState> {\n  rootEl: HTMLElement;\n\n  constructor(props: MenuProps) {\n    super(props);\n\n    this.rootEl = document.getElementById('root');\n    this.state = {\n      extension: undefined,\n      imageUrl: '',\n      isShowLoading: false\n    };\n  }\n\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\n    const { changePreviewOverflow, overflow } = this.props;\n    const { extension, isShowLoading } = this.state;\n\n    if (isShowLoading) {\n      if (overflow) {\n        changePreviewOverflow(false);\n\n        return;\n      }\n\n      const callback = (imageUrl: string) => {\n        this.setState(\n          {\n            imageUrl,\n            isShowLoading: false\n          },\n          () => {\n            if (prevOverflow) {\n              changePreviewOverflow(true);\n            }\n          }\n        );\n      };\n\n      if (extension === 'jpg') {\n        domtoimage.toJpeg(document.getElementById('capture')!).then(callback);\n      }\n\n      if (extension === 'png') {\n        domtoimage.toPng(document.getElementById('capture')!).then(callback);\n      }\n\n      if (extension === 'svg') {\n        domtoimage.toSvg(document.getElementById('capture')!).then(callback);\n      }\n    }\n  }\n\n  render() {\n    const { extension, imageUrl, isShowLoading } = this.state;\n\n    return (\n      <React.Fragment>\n        <Ul>\n          <li>\n            <p>File</p>\n            <ul>\n              <li>\n                <button\n                  onClick={() => {\n                    this.setState({ extension: 'jpg', isShowLoading: true });\n                  }}\n                >\n                  Save As JPG\n                </button>\n              </li>\n              <li>\n                <button\n                  onClick={() => {\n                    this.setState({ extension: 'png', isShowLoading: true });\n                  }}\n                >\n                  Save As PNG\n                </button>\n              </li>\n              <li>\n                <button\n                  onClick={() => {\n                    this.setState({ extension: 'svg', isShowLoading: true });\n                  }}\n                >\n                  Save As SVG\n                </button>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <p>Help</p>\n            <ul>\n              <li>\n                <a\n                  href=\"https://github.com/piro0919/image-maker\"\n                  target=\"_blank\"\n                >\n                  GitHub\n                </a>\n              </li>\n            </ul>\n          </li>\n        </Ul>\n        {extension && imageUrl ? (\n          ReactDOM.createPortal(\n            <Image\n              extension={extension}\n              onClickCloseButton={() => {\n                this.setState({ extension: undefined, imageUrl: '' });\n              }}\n              src={imageUrl}\n            />,\n            this.rootEl\n          )\n        ) : (\n          <React.Fragment />\n        )}\n        {isShowLoading ? (\n          ReactDOM.createPortal(<Loading />, this.rootEl)\n        ) : (\n          <React.Fragment />\n        )}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Menu;\n","import * as React from 'react';\nimport * as uniqid from 'uniqid';\n\nexport interface ImagePreviewProps {\n  id: string;\n  style: {\n    opacity: number;\n    rotate: number;\n    scale: number;\n  };\n  url: string;\n}\n\ninterface ImagePreviewState {\n  height: number;\n  width: number;\n}\n\nclass ImagePreview extends React.Component<\n  ImagePreviewProps,\n  ImagePreviewState\n> {\n  id: string;\n\n  constructor(props: ImagePreviewProps) {\n    super(props);\n\n    this.id = uniqid();\n    this.state = {\n      height: 0,\n      width: 0\n    };\n  }\n\n  componentDidMount() {\n    const { url } = this.props;\n    const element = new Image();\n\n    element.onload = () => {\n      const { naturalHeight: height, naturalWidth: width } = element;\n\n      this.setState(\n        {\n          height,\n          width\n        },\n        () => {\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\n          const context = canvas.getContext('2d');\n          const image = new Image();\n\n          image.src = url;\n          image.onload = () => {\n            context!.drawImage(image, 0, 0, width, height);\n          };\n        }\n      );\n    };\n    element.src = url;\n  }\n\n  render() {\n    const {\n      style: { rotate, scale, ...style }\n    } = this.props;\n    const { height, width } = this.state;\n\n    return (\n      <canvas\n        height={height}\n        id={this.id}\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\n        width={width}\n      />\n    );\n  }\n}\n\nexport default ImagePreview;\n","import * as React from 'react';\nimport styled from 'styled-components';\n\ninterface DivProps {\n  fontFamily: string;\n}\n\nconst Div = styled.div`\n  @font-face {\n    font-family: '${({ fontFamily }: DivProps) => fontFamily}';\n    src: url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\n  fontFamily}.woff2') format('woff2'),\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\n  fontFamily}.woff') format('woff'),\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\n  fontFamily}.ttf') format('truetype');\n  }\n\n  white-space: nowrap;\n`;\n\nexport interface TextPreviewProps {\n  id: string;\n  style: {\n    color: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    fontFamily: {\n      label: string;\n      value: string;\n    };\n    fontSize: number;\n    fontWeight: number;\n    lineHeight: number;\n    opacity: number;\n    rotate: number;\n  };\n  value: string;\n}\n\nconst TextPreview: React.SFC<TextPreviewProps> = ({\n  style: {\n    color: { a, b, g, r },\n    fontFamily: { value: fontFamily },\n    fontSize,\n    fontWeight,\n    lineHeight,\n    opacity,\n    rotate\n  },\n  value\n}: TextPreviewProps) => (\n  <Div\n    fontFamily={fontFamily}\n    style={{\n      fontFamily,\n      fontWeight,\n      opacity,\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\n      fontSize: `${fontSize}px`,\n      transform: `rotate(${rotate}deg)`\n    }}\n  >\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\n      <div\n        key={index}\n        style={{\n          height: `${lineHeight}px`,\n          lineHeight: `${lineHeight}px`\n        }}\n      >\n        {v}\n      </div>\n    ))}\n  </Div>\n);\n\nexport default TextPreview;\n","import ImagePreview, {\n  ImagePreviewProps\n} from 'components/molecules/ImagePreview';\nimport TextPreview, {\n  TextPreviewProps\n} from 'components/molecules/TextPreview';\nimport * as React from 'react';\nimport ReactScalableDraggable from 'react-scalable-draggable';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  background-color: #bbb;\n  height: 100%;\n  overflow: scroll;\n  position: relative;\n  width: 100%;\n\n  .wrapper {\n    box-sizing: content-box;\n    left: 0;\n    padding: 50px;\n    position: absolute;\n    top: 0;\n    transform-origin: top left;\n\n    #capture {\n      height: inherit;\n      width: inherit;\n\n      .screen {\n        height: inherit;\n        position: relative;\n        width: inherit;\n\n        &::before {\n          background-image: url(${process.env.PUBLIC_URL}/images/grid.png);\n          background-repeat: repeat;\n          background-size: inherit;\n          content: '';\n          display: block;\n          height: 100%;\n          left: 0;\n          position: absolute;\n          top: 0;\n          width: 100%;\n        }\n\n        .draggable {\n          cursor: move;\n          position: absolute;\n          word-break: keep-all;\n        }\n      }\n    }\n  }\n`;\n\nexport interface PreviewProps {\n  layers: (ImagePreviewProps | TextPreviewProps)[];\n  preview: {\n    backgroundColor: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    gridSize: number;\n    height: number;\n    overflow: boolean;\n    scale: number;\n    width: number;\n  };\n}\n\nconst Preview: React.SFC<PreviewProps> = ({\n  layers,\n  preview: {\n    backgroundColor: { a, b, g, r },\n    gridSize,\n    height,\n    overflow,\n    scale,\n    width\n  }\n}) => {\n  const previews = layers.map(layer => {\n    const { id } = layer;\n\n    let node = <React.Fragment />;\n\n    if ('value' in layer) {\n      node = <TextPreview {...layer} />;\n    } else if ('url' in layer) {\n      node = <ImagePreview {...layer} />;\n    }\n\n    return (\n      <ReactScalableDraggable\n        className=\"draggable\"\n        key={id}\n        parentScale={scale}\n      >\n        {node}\n      </ReactScalableDraggable>\n    );\n  });\n\n  return (\n    <Div id=\"preview\">\n      <div\n        className=\"wrapper\"\n        style={{\n          height: `${height}px`,\n          transform: `scale(${scale})`,\n          width: `${width}px`\n        }}\n      >\n        <div id=\"capture\">\n          <div\n            className=\"screen\"\n            style={{\n              backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\n              backgroundSize: `${gridSize}px`,\n              overflow: overflow ? 'visible' : 'hidden'\n            }}\n          >\n            {previews}\n          </div>\n        </div>\n      </div>\n    </Div>\n  );\n};\n\nexport default Preview;\n","import Input from 'components/atoms/Input';\nimport LayerStyles from 'components/molecules/LayerStyles';\nimport * as React from 'react';\nimport { ChromePicker, ColorResult } from 'react-color';\nimport Select from 'react-select';\nimport { Props } from 'react-select/lib/Select';\nimport styled from 'styled-components';\n\nconst StyledLayerStyles = styled(LayerStyles)`\n  .select {\n    width: 200px;\n  }\n\n  .input {\n    width: 50px;\n  }\n\n  .picker .chrome-picker {\n    background-color: #fff !important;\n    border: 1px #ddd solid !important;\n    border-radius: 0 !important;\n    box-shadow: none !important;\n    font-family: inherit !important;\n\n    > div {\n      border-radius: 0 !important;\n    }\n  }\n`;\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface TextLayerStylesProps {\n  color: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  fontFamily: {\n    label: string;\n    value: string;\n  };\n  fonts: Font[];\n  fontSize: number;\n  fontWeight: number;\n  lineHeight: number;\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onChangeColor: (color: ColorResult) => void;\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\n  opacity: number;\n  rotate: number;\n}\n\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\n  color,\n  fontFamily,\n  fonts,\n  fontSize,\n  fontWeight,\n  lineHeight,\n  onChange,\n  onChangeColor,\n  onChangeFontFamily,\n  opacity,\n  rotate\n}: TextLayerStylesProps) => (\n  <StyledLayerStyles>\n    {[\n      {\n        name: 'color',\n        node: (\n          <div className=\"picker\">\n            <ChromePicker color={color} onChange={onChangeColor} />\n          </div>\n        )\n      },\n      {\n        name: 'font-family',\n        node: (\n          <Select\n            className=\"select\"\n            onChange={onChangeFontFamily}\n            options={fonts.map(({ fontFamily: value, name: label }) => ({\n              label,\n              value\n            }))}\n            value={fontFamily}\n          />\n        )\n      },\n      {\n        name: 'font-size',\n        node: (\n          <React.Fragment>\n            <Input\n              className=\"input\"\n              min={0}\n              name=\"fontSize\"\n              onChange={onChange}\n              type=\"number\"\n              value={fontSize}\n            />\n            px\n          </React.Fragment>\n        )\n      },\n      {\n        name: 'font-weight',\n        node: (\n          <Input\n            className=\"input\"\n            max={900}\n            min={100}\n            name=\"fontWeight\"\n            onChange={onChange}\n            step={100}\n            type=\"number\"\n            value={fontWeight}\n          />\n        )\n      },\n      {\n        name: 'line-height',\n        node: (\n          <React.Fragment>\n            <Input\n              className=\"input\"\n              min={0}\n              name=\"lineHeight\"\n              onChange={onChange}\n              type=\"number\"\n              value={lineHeight}\n            />\n            px\n          </React.Fragment>\n        )\n      },\n      {\n        name: 'opacity',\n        node: (\n          <Input\n            className=\"input\"\n            max={1}\n            min={0}\n            name=\"opacity\"\n            onChange={onChange}\n            step={0.01}\n            type=\"number\"\n            value={opacity}\n          />\n        )\n      },\n      {\n        name: 'rotate',\n        node: (\n          <React.Fragment>\n            <Input\n              className=\"input\"\n              name=\"rotate\"\n              onChange={onChange}\n              step={0.1}\n              type=\"number\"\n              value={rotate}\n            />\n            deg\n          </React.Fragment>\n        )\n      }\n    ]}\n  </StyledLayerStyles>\n);\n\nexport default TextLayerStyles;\n","import CloseButton, { CloseButtonProps } from 'components/atoms/CloseButton';\nimport * as $ from 'jquery';\nimport * as React from 'react';\nimport ReactDropzone, {\n  DropzoneProps as ReactDropzoneProps\n} from 'react-dropzone';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  background-color: rgba(255, 255, 255, 0.75);\n  height: 100%;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  .wrapper {\n    align-items: center;\n    cursor: pointer;\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    justify-content: center;\n    width: 100%;\n\n    img {\n      height: calc(231px / 3);\n      opacity: 0.75;\n      width: calc(289px / 3);\n    }\n\n    p {\n      margin-top: 15px;\n    }\n  }\n\n  .close-button {\n    height: 50px;\n    position: fixed;\n    right: 10px;\n    top: 10px;\n    width: 50px;\n  }\n`;\n\nexport interface DropzoneProps {\n  onClickCloseButton: CloseButtonProps['onClick'];\n  onDrop: ReactDropzoneProps['onDrop'];\n}\n\nclass Dropzone extends React.Component<DropzoneProps> {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    const { onClickCloseButton, onDrop } = this.props;\n\n    return (\n      <Div className=\"portal\">\n        <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\n          {({ getRootProps, getInputProps, isDragActive }) => (\n            <div {...getRootProps()} className=\"wrapper\">\n              <input {...getInputProps()} />\n              <img src={`${process.env.PUBLIC_URL}/images/dd.png`} />\n              <p>\n                {isDragActive\n                  ? 'Drop files here...'\n                  : 'Try dropping some image files here, or click to select files to upload.'}\n              </p>\n            </div>\n          )}\n        </ReactDropzone>\n        <CloseButton className=\"close-button\" onClick={onClickCloseButton} />\n      </Div>\n    );\n  }\n}\n\nexport default Dropzone;\n","import * as $ from 'jquery';\nimport * as React from 'react';\nimport styled from 'styled-components';\n\nconst Div = styled.div`\n  align-items: center;\n  background-color: rgba(255, 255, 255, 0.75);\n  display: flex;\n  flex-direction: column;\n  height: 100%;\n  justify-content: center;\n  left: 0;\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: 9999;\n\n  .wrapper {\n    height: 360px;\n    position: relative;\n    width: 640px;\n\n    img {\n      height: 100%;\n      width: 100%;\n    }\n\n    p {\n      bottom: 80px;\n      color: #ef64a0;\n      font-size: 1.2em;\n      position: absolute;\n      right: 30px;\n    }\n  }\n`;\n\nexport interface LogoProps {\n  loading: number;\n}\n\nclass Logo extends React.Component<LogoProps> {\n  componentDidMount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\n  }\n\n  componentWillUnmount() {\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\n  }\n\n  render() {\n    const { loading } = this.props;\n\n    return (\n      <Div className=\"portal\">\n        <div className=\"wrapper\">\n          <img src={`${process.env.PUBLIC_URL}/images/top.png`} />\n          <p>loading... {loading}%</p>\n        </div>\n      </Div>\n    );\n  }\n}\n\nexport default Logo;\n","import setFonts from 'actions/fonts/setFonts';\nimport addImageLayer from 'actions/layer/addImageLayer';\nimport addTextLayer from 'actions/layer/addTextLayer';\nimport changeStyle from 'actions/layer/changeStyle';\nimport changeValue from 'actions/layer/changeValue';\nimport downLayer from 'actions/layer/downLayer';\nimport removeLayer from 'actions/layer/removeLayer';\nimport selectLayer from 'actions/layer/selectLayer';\nimport upLayer from 'actions/layer/upLayer';\nimport changePreviewValue from 'actions/preview/changeValue';\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\nimport ImageButton from 'components/atoms/ImageButton';\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\nimport Information, {\n  InformationProps\n} from 'components/organisms/Information';\nimport Layers, { LayersProps } from 'components/organisms/Layers';\nimport LayerSetting from 'components/organisms/LayerSetting';\nimport Menu, { MenuProps } from 'components/organisms/Menu';\nimport Preview from 'components/organisms/Preview';\nimport TextLayerStyles, {\n  TextLayerStylesProps\n} from 'components/organisms/TextLayerStyles';\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\nimport Logo from 'components/templates/Logo';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { State } from 'reducers';\nimport { Dispatch } from 'redux';\nimport styled from 'styled-components';\nimport * as WebFont from 'webfontloader';\n\nconst Div = styled.div`\n  background-color: #fbfbfb;\n  display: grid;\n  height: 100%;\n  grid-template-columns: 275px 1fr 200px;\n  grid-template-rows: 25px 1fr;\n\n  .header {\n    border-bottom: 1px #ddd inset;\n    grid-column: 1 / 4;\n    z-index: 2;\n  }\n\n  .detail {\n    overflow-y: scroll;\n  }\n\n  .preview {\n    box-shadow: 1px 0px #ddd inset;\n    display: grid;\n    grid-gap: 5px;\n    grid-template-rows: 1fr 20px;\n    padding: 5px;\n  }\n\n  .side-layers {\n    box-shadow: 1px 0px #ddd inset;\n    display: flex;\n    flex-direction: column;\n\n    .layers {\n      flex-basis: 0;\n      flex-grow: 1;\n      overflow-y: scroll;\n      padding: 5px;\n    }\n  }\n`;\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface PagesProps\n  extends ReturnType<typeof mapDispatchToProps>,\n    ReturnType<typeof mapStateToProps>,\n    RouteComponentProps {}\n\ninterface PagesState {\n  isShowDropzone: boolean;\n  isShowLogo: boolean;\n  loading: number;\n}\n\nclass Pages extends React.Component<PagesProps, PagesState> {\n  rootEl: HTMLElement;\n\n  constructor(props: PagesProps) {\n    super(props);\n\n    this.rootEl = document.getElementById('root');\n    this.state = {\n      isShowDropzone: false,\n      // isShowLogo: true,\n      isShowLogo: process.env.NODE_ENV !== 'development',\n      loading: 0\n    };\n  }\n\n  componentDidMount() {\n    const { setFonts } = this.props;\n    const request = new XMLHttpRequest();\n\n    request.open('GET', `${process.env.PUBLIC_URL}/jsons/fonts.json`, true);\n    request.responseType = 'blob';\n    request.onload = ({ target: { response } }: any) => {\n      const reader = new FileReader();\n\n      reader.onload = ({ target: { result } }: any) => {\n        const fonts: Font[] = JSON.parse(result);\n\n        let counter = 0;\n\n        setFonts(fonts);\n\n        WebFont.load({\n          active: () => {\n            setTimeout(() => {\n              this.setState({ isShowLogo: false, loading: 100 });\n            }, 1000);\n          },\n          classes: false,\n          custom: {\n            families: fonts.map(({ fontFamily }) => fontFamily)\n          },\n          fontactive: (familyName: string, fvd: string) => {\n            counter = counter + 1;\n\n            this.setState({\n              loading: Math.floor((counter / fonts.length) * 100)\n            });\n          },\n          fontinactive: (familyName: string, fvd: string) => {\n            counter = counter + 1;\n\n            this.setState({\n              loading: Math.floor((counter / fonts.length) * 100)\n            });\n          },\n          inactive: () => {\n            setTimeout(() => {\n              this.setState({ isShowLogo: false, loading: 100 });\n            }, 1000);\n          }\n        });\n      };\n      reader.readAsText(response);\n    };\n    request.send();\n  }\n\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\n    const { layers } = this.props;\n    const { isShowDropzone } = this.state;\n\n    if (isShowDropzone && prevLayers.length !== layers.length) {\n      this.setState({ isShowDropzone: false });\n    }\n  }\n\n  render() {\n    const {\n      addImageLayers,\n      addTextLayer,\n      changeColor,\n      changeFontFamily,\n      changePreviewBackgroundColor,\n      changePreviewOverflow,\n      changePreviewValue,\n      changeStyle,\n      changeValue,\n      downLayer,\n      fonts,\n      index,\n      layers,\n      preview,\n      removeLayer,\n      selectLayer,\n      upLayer\n    } = this.props;\n    const { isShowDropzone, isShowLogo, loading } = this.state;\n\n    let styles = <React.Fragment />;\n\n    if (index !== undefined) {\n      const layer = layers[index];\n\n      if ('value' in layer) {\n        const { style } = layer;\n\n        styles = (\n          <TextLayerStyles\n            {...style}\n            fonts={fonts}\n            onChange={changeStyle}\n            onChangeColor={changeColor}\n            onChangeFontFamily={changeFontFamily}\n          />\n        );\n      } else if ('url' in layer) {\n        const { style } = layer;\n\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\n      }\n    }\n\n    return (\n      <Div>\n        <header className=\"header\">\n          <Menu {...preview} changePreviewOverflow={changePreviewOverflow} />\n        </header>\n        <aside className=\"detail\">{styles}</aside>\n        <div className=\"preview\">\n          <Preview layers={layers} preview={preview} />\n          <Information\n            {...preview}\n            onChange={changePreviewValue}\n            onChangeBackgroundColor={changePreviewBackgroundColor}\n          />\n        </div>\n        <aside className=\"side-layers\">\n          <LayerSetting>\n            {[\n              <DocumentAddButton key=\"add\" onClick={addTextLayer} />,\n              <DocumentDeleteButton\n                disabled={index === undefined}\n                key=\"delete\"\n                onClick={removeLayer}\n              />,\n              <ImageButton\n                key=\"image\"\n                onClick={() => {\n                  this.setState({ isShowDropzone: true });\n                }}\n              />,\n              <ArrowUpOutlineButton\n                disabled={index === undefined || index === layers.length - 1}\n                key=\"up\"\n                onClick={upLayer}\n              />,\n              <ArrowDownOutlineButton\n                disabled={!index}\n                key=\"down\"\n                onClick={downLayer}\n              />\n            ]}\n          </LayerSetting>\n          <div className=\"layers\">\n            <Layers\n              index={index}\n              layers={layers}\n              onChange={changeValue}\n              onClick={selectLayer}\n              onFocus={selectLayer}\n            />\n          </div>\n        </aside>\n        {isShowDropzone ? (\n          ReactDOM.createPortal(\n            <Dropzone\n              onClickCloseButton={() => {\n                this.setState({ isShowDropzone: false });\n              }}\n              onDrop={addImageLayers}\n            />,\n            this.rootEl\n          )\n        ) : (\n          <React.Fragment />\n        )}\n        {isShowLogo ? (\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)\n        ) : (\n          <React.Fragment />\n        )}\n      </Div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\n  addImageLayers: (\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\n  ) => {\n    acceptedFiles.forEach(acceptedFile => {\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\n    });\n  },\n  addTextLayer: () => dispatch(addTextLayer()),\n  changeColor: ({\n    rgb: value\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\n    dispatch(changeStyle({ value, name: 'color' })),\n  changeFontFamily: (\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\n  changePreviewBackgroundColor: ({\n    rgb: value\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\n    dispatch(changePreviewValue({ value, name: 'backgroundColor' })),\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\n  changePreviewValue: ({\n    currentTarget: { checked, name, type, value }\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\n    dispatch(\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\n    ),\n  changeStyle: ({\n    currentTarget: { name, value }\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\n    dispatch(changeStyle({ name, value })),\n  changeValue: ({\n    target: { value }\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\n    dispatch(changeValue({ value })),\n  downLayer: () => dispatch(downLayer()),\n  removeLayer: () => dispatch(removeLayer()),\n  selectLayer: ({\n    currentTarget: { dataset }\n  }:\n    | ArgumentTypes<LayersProps['onClick']>[0]\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\n  upLayer: () => dispatch(upLayer())\n});\n\nconst mapStateToProps = ({\n  fonts: { fonts },\n  layer: { index, layers },\n  preview\n}: State) => ({\n  fonts,\n  index,\n  layers,\n  preview\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Pages);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\ninterface Font {\n  fontFamily: string;\n  name: string;\n}\n\nexport interface FontsState {\n  fonts: Font[];\n}\n\nconst initialState: FontsState = {\n  fonts: []\n};\n\nconst fonts = reducerWithInitialState(initialState).case(\n  setFonts,\n  (state, { fonts }) => ({ ...state, fonts })\n);\n\nexport default fonts;\n","import addImageLayer from 'actions/layer/addImageLayer';\nimport addTextLayer from 'actions/layer/addTextLayer';\nimport changeStyle from 'actions/layer/changeStyle';\nimport changeValue from 'actions/layer/changeValue';\nimport downLayer from 'actions/layer/downLayer';\nimport removeLayer from 'actions/layer/removeLayer';\nimport selectLayer from 'actions/layer/selectLayer';\nimport upLayer from 'actions/layer/upLayer';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\nimport * as uniqid from 'uniqid';\n\ninterface ImageLayer {\n  id: string;\n  style: {\n    opacity: number;\n    rotate: number;\n    scale: number;\n  };\n  url: string;\n}\n\ninterface TextShadow {\n  blurRadius: number;\n  color: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  hShadow: number;\n  vShadow: number;\n}\n\ninterface TextLayer {\n  id: string;\n  style: {\n    color: {\n      a: number;\n      b: number;\n      g: number;\n      r: number;\n    };\n    fontFamily: {\n      label: string;\n      value: string;\n    };\n    fontSize: number;\n    fontWeight: number;\n    lineHeight: number;\n    opacity: number;\n    rotate: number;\n    textShadows: TextShadow[];\n  };\n  value: string;\n}\n\nexport interface LayerState {\n  index?: number;\n  layers: (ImageLayer | TextLayer)[];\n}\n\nconst initialState: LayerState = {\n  index: undefined,\n  layers: []\n};\n\nconst layer = reducerWithInitialState(initialState)\n  .case(addImageLayer, (state, { url }) => {\n    const { layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    layers.push({\n      url,\n      id: uniqid(),\n      style: {\n        opacity: 1,\n        rotate: 0,\n        scale: 1\n      }\n    });\n\n    return { ...state, layers };\n  })\n  .case(addTextLayer, state => {\n    const { layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    layers.push({\n      id: uniqid(),\n      style: {\n        color: {\n          a: 1,\n          b: 0,\n          g: 0,\n          r: 0\n        },\n        fontFamily: {\n          label: 'バンバン',\n          value: 'BANBAN-FREE'\n        },\n        fontSize: 16,\n        fontWeight: 400,\n        lineHeight: 16,\n        opacity: 1,\n        rotate: 0,\n        textShadows: []\n      },\n      value: ''\n    });\n\n    return { ...state, layers };\n  })\n  .case(changeStyle, (state, { name, value }) => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n\n    if (name === 'fontSize' || name === 'fontWeight' || name === 'lineHeight') {\n      layers[index].style[name] = parseInt(value, 10);\n    } else if (name === 'opacity' || name === 'rotate' || name === 'scale') {\n      layers[index].style[name] = parseFloat(value);\n    } else {\n      layers[index].style[name] = value;\n    }\n\n    return { ...state, layers };\n  })\n  .case(changeValue, (state, { value }) => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const layer = layers[index];\n\n    if ('value' in layer) {\n      layer.value = value;\n\n      layers[index] = layer;\n    }\n\n    return { ...state, layers };\n  })\n  .case(downLayer, state => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const tmpLayer = layers[index];\n\n    layers[index] = layers[index - 1];\n    layers[index - 1] = tmpLayer;\n\n    return { ...state, index: index - 1, layers };\n  })\n  .case(removeLayer, state => {\n    const { index, layers: prevLayers } = state;\n\n    if (index === undefined) {\n      return state;\n    }\n\n    const layers = prevLayers.slice();\n\n    layers.splice(index, 1);\n\n    return {\n      layers,\n      index: undefined\n    };\n  })\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\n  .case(upLayer, state => {\n    const { index, layers: prevLayers } = state;\n    const layers = prevLayers.slice();\n    const tmpLayer = layers[index];\n\n    layers[index] = layers[index + 1];\n    layers[index + 1] = tmpLayer;\n\n    return { ...state, index: index + 1, layers };\n  });\n\nexport default layer;\n","import changeValue from 'actions/preview/changeValue';\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\n\nexport interface PreviewState {\n  backgroundColor: {\n    a: number;\n    b: number;\n    g: number;\n    r: number;\n  };\n  gridSize: number;\n  height: number;\n  overflow: boolean;\n  scale: number;\n  width: number;\n}\n\nconst initialState: PreviewState = {\n  backgroundColor: {\n    a: 1,\n    b: 255,\n    g: 255,\n    r: 255\n  },\n  gridSize: 0,\n  height: 300,\n  overflow: true,\n  scale: 1,\n  width: 400\n};\n\nconst preview = reducerWithInitialState(initialState).case(\n  changeValue,\n  (state, { name, value: newValue }) => {\n    let value;\n\n    if (name === 'gridSize' || name === 'height' || name === 'width') {\n      value = parseInt(newValue as string, 10);\n    } else if (name === 'scale') {\n      value = parseFloat(newValue as string);\n    } else {\n      value = newValue;\n    }\n\n    return { ...state, ...{ [name]: value } };\n  }\n);\n\nexport default preview;\n","import { combineReducers } from 'redux';\nimport fonts, { FontsState } from './fonts';\nimport layer, { LayerState } from './layer';\nimport preview, { PreviewState } from './preview';\n\nexport interface State {\n  fonts: FontsState;\n  layer: LayerState;\n  preview: PreviewState;\n}\n\nconst reducers = () => combineReducers({ fonts, layer, preview });\n\nexport default reducers;\n","import Pages from 'containers/pages';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport 'ress';\nimport { createGlobalStyle } from 'styled-components';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst store = createStore(reducers());\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\n    font-size: 62.5%;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: 400;\n    height: 100%;\n    line-height: 1.2;\n    overflow: hidden !important;\n    -webkit-overflow-scrolling: touch;\n    width: 100%;\n  \n    body {\n      font-size: 1.2rem;\n      height: 100%;\n      width: 100%;\n    \n      #root {\n        height: 100%;\n        width: 100%;\n\n        * {\n          appearance: none;\n          \n          &:focus {\n            outline: none;\n          }\n        }\n  \n        a {\n          line-height: 0;\n        }\n\n        ul {\n          list-style: none;\n        }\n      }\n    }\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\n    >\n      <Switch>\n        <Route component={Pages} exact={true} path=\"/\" />\n      </Switch>\n    </BrowserRouter>\n    <GlobalStyle />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}