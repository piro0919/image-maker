{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/addTextShadow/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/removeTextShadow/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/ReactHelmet/index.tsx","components/atoms/Input/index.tsx","components/molecules/LayerStyles/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/atoms/ChromePicker/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/atoms/DownloadButton/index.tsx","components/atoms/CloseButton/index.tsx","components/templates/Portal/index.tsx","components/templates/Image/index.tsx","components/atoms/DocumentButton/index.tsx","components/templates/New/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/atoms/MinusButton/index.tsx","components/atoms/PlusButton/index.tsx","components/molecules/TextShadow/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","addTextShadow","changeStyle","changeValue","downLayer","removeLayer","removeTextShadow","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","ReactHelmet","_ref","fileName","this","Helmet","concat","React","StyledInput","input","Input_templateObject","Input","Dl","dl","LayerStyles_templateObject","LayerStyles","children","map","_ref2","index","name","node","key","StyledLayerStyles","ImageLayerStyles_templateObject","ImageLayerStyles","filter","onChange","opacity","rotate","scale","atoms_Input","min","step","type","value","blur","brightness","contrast","max","grayscale","hueRotate","invert","saturate","sepia","Div","div","ChromePicker_templateObject","ChromePicker","Object","objectWithoutProperties","react_color_lib","Information_templateObject","Information","backgroundColor","gridSize","height","isInitialize","onChangeBackgroundColor","overflow","width","a","b","g","r","Information_Dl","style","atoms_ChromePicker","color","defaultChecked","Ul","ul","Layers_templateObject","Layers","layers","onClick","onFocus","layer","layerIndex","v","data-index","url","backgroundImage","reverse","LayerSetting_templateObject","LayerSetting","LayerSetting_Ul","DownloadButton_templateObject","DownloadButton","DownloadButton_Button","CloseButton_templateObject","CloseButton","CloseButton_Button","Portal_templateObject","Portal","$","css","_this$props","onClickCloseButton","Portal_Div","atoms_CloseButton","StyledPortal","Image_templateObject","Image","extension","src","atoms_DownloadButton","saveAs","DocumentButton_templateObject","DocumentButton","DocumentButton_Button","New_templateObject","New","changePreviewIsInitialize","onChangePreviewBackgroundColor","onChangePreviewValue","New_StyledPortal","atoms_DocumentButton","disabled","e","Loading_templateObject","Loading","Loading_StyledPortal","react_spinners","Menu_templateObject","Menu","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","undefined","imageUrl","isNew","isShowLoading","_this2","prevOverflow","changePreviewOverflow","_this$state","callback","setState","domtoimage","toJpeg","then","toPng","toSvg","_this3","_this$state2","Menu_Ul","href","target","ReactDOM","templates_Image","templates_New","assign","templates_Loading","ImagePreview","id","uniqid","element","onload","naturalHeight","naturalWidth","context","getContext","image","drawImage","_this$props$style","_this$props$style$fil","objectSpread","transform","TextPreview_templateObject","fontFamily","process","_ref3","_ref4","TextPreview","_ref5","_ref5$style","_ref5$style$color","fontSize","fontStyle","fontWeight","letterSpacing","lineHeight","textShadows","TextPreview_Div","textShadow","_ref6","blurRadius","_ref6$color","textShadowA","textShadowB","textShadowG","textShadowR","hShadow","vShadow","join","split","Preview_templateObject","Preview","_ref$preview","preview","_ref$preview$backgrou","previews","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","MinusButton_templateObject","MinusButton","MinusButton_Button","PlusButton_templateObject","PlusButton","PlusButton_Button","TextShadow_templateObject","TextShadow","onChangeTextShadowColor","TextShadow_Dl","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","onClickAddTextShadow","onClickRemoveTextShadow","options","label","findIndex","font","JSON","stringify","TextLayerStyles_StyledLayerStyles","react_select_esm","atoms_PlusButton","atoms_MinusButton","toString","molecules_TextShadow","Dropzone_templateObject","Dropzone","onDrop","Dropzone_StyledPortal","es","accept","getRootProps","getInputProps","isDragActive","Logo_templateObject","Logo","loading","Logo_StyledPortal","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","reader","FileReader","result","parse","counter","WebFont","active","setTimeout","classes","custom","families","fontactive","familyName","fvd","Math","floor","length","fontinactive","inactive","readAsText","send","prevLayers","addImageLayers","changeColor","changeFontFamily","changePreviewBackgroundColor","changePreviewValue","styles","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","atoms_ReactHelmet","organisms_Menu","TwitterShareButton","hashtags","title","TwitterIcon","size","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref12","_ref12$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","rgb","_ref7","_ref7$currentTarget","currentTarget","checked","_ref8","_ref8$currentTarget","_ref9","_ref10","parseInt","_ref11","dataset","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","indexOf","_name$split","_name$split2","slicedToArray","first","secondName","RegExp","test","_first$match","_first$match2","firstName","index2","parseFloat","tmpLayer","prevIndex","splice","textShadowIndex","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d7e164e7.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\r\n\r\nexport default setFonts;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\r\n\r\nexport default addImageLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\r\n\r\nexport default addTextLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextShadow = actionCreator('LAYER.ADD_TEXT_SHADOW');\r\n\r\nexport default addTextShadow;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeStyle = actionCreator<{ name: string; value: any }>(\r\n  'LAYER.CHANGE_STYLE'\r\n);\r\n\r\nexport default changeStyle;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\r\n\r\nexport default changeValue;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\r\n\r\nexport default downLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\r\n\r\nexport default removeLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeTextShadow = actionCreator<{ index: number }>(\r\n  'LAYER.REMOVE_TEXT_SHADOW'\r\n);\r\n\r\nexport default removeTextShadow;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\r\n\r\nexport default selectLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst upLayer = actionCreator('LAYER.UP_LAYER');\r\n\r\nexport default upLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ name: string; value: any }>(\r\n  'PREVIEW.CHANGE_VALUE'\r\n);\r\n\r\nexport default changeValue;\r\n","import * as React from 'react';\r\nimport { TiArrowUpOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowUpOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\r\n  props: ArrowUpOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowUpOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowUpOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiArrowDownOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowDownOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\r\n  props: ArrowDownOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowDownOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowDownOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentAddButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\r\n  props: DocumentAddButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentAdd className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentAddButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentDelete } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentDeleteButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\r\n  props: DocumentDeleteButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentDelete className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentDeleteButton;\r\n","import * as React from 'react';\r\nimport { TiImage } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ImageButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\r\n  <Button {...props}>\r\n    <TiImage className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ImageButton;\r\n","import * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport interface ReactHelmetProps {\r\n  fileName: string;\r\n}\r\n\r\nclass ReactHelmet extends React.Component<ReactHelmetProps> {\r\n  shouldComponentUpdate({ fileName: nextFileName }) {\r\n    const { fileName } = this.props;\r\n\r\n    return nextFileName !== fileName;\r\n  }\r\n\r\n  render() {\r\n    const { fileName } = this.props;\r\n\r\n    return (\r\n      <Helmet>\r\n        <title>{`Image Maker: ${fileName}`}</title>\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactHelmet;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  background-color: #fff;\r\n  border: 1px #ddd solid;\r\n\r\n  &[type='checkbox'] {\r\n    height: 15px;\r\n    width: 15px;\r\n\r\n    &:checked {\r\n      background-color: #bbb;\r\n    }\r\n  }\r\n\r\n  &[type='number'] {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport interface InputProps {\r\n  defaultChecked?: boolean;\r\n  className?: string;\r\n  max?: number;\r\n  min?: number;\r\n  name: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  step?: number;\r\n  type: string;\r\n  value?: number | string;\r\n}\r\n\r\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\r\n  <StyledInput {...props} />\r\n);\r\n\r\nexport default Input;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.dl`\r\n  > div {\r\n    padding: 10px 10px;\r\n\r\n    &:hover {\r\n      background-color: rgba(35, 71, 148, 0.1);\r\n    }\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\ninterface Child {\r\n  name: React.ReactNode;\r\n  node: React.ReactNode;\r\n}\r\n\r\nexport interface LayerStylesProps {\r\n  children: Child[];\r\n  className?: string;\r\n}\r\n\r\nconst LayerStyles: React.SFC<LayerStylesProps> = ({\r\n  children,\r\n  className\r\n}: LayerStylesProps) => (\r\n  <Dl className={className}>\r\n    {children.map(({ name, node }, index) => (\r\n      <div key={index}>\r\n        <dt>{name}</dt>\r\n        <dd>{node}</dd>\r\n      </div>\r\n    ))}\r\n  </Dl>\r\n);\r\n\r\nexport default LayerStyles;\r\n","import Input from 'components/atoms/Input';\r\nimport LayerStyles from 'components/molecules/LayerStyles';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLayerStyles = styled(LayerStyles)`\r\n  .input {\r\n    width: 50px;\r\n  }\r\n\r\n  .filter-list {\r\n    width: 230px;\r\n  }\r\n`;\r\n\r\nexport interface ImageLayerStylesProps {\r\n  filter: {\r\n    blur: number;\r\n    brightness: number;\r\n    contrast: number;\r\n    grayscale: number;\r\n    hueRotate: number;\r\n    invert: number;\r\n    saturate: number;\r\n    sepia: number;\r\n  };\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n  scale: number;\r\n}\r\n\r\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\r\n  filter,\r\n  onChange,\r\n  opacity,\r\n  rotate,\r\n  scale\r\n}: ImageLayerStylesProps) => (\r\n  <StyledLayerStyles>\r\n    {[\r\n      {\r\n        name: 'filter',\r\n        node: (\r\n          <dl className=\"filter-list\">\r\n            <dt>blur</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"filter.blur\"\r\n                onChange={onChange}\r\n                step={0.01}\r\n                type=\"number\"\r\n                value={filter.blur}\r\n              />\r\n              px\r\n            </dd>\r\n            <dt>brightness</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"filter.brightness\"\r\n                onChange={onChange}\r\n                step={0.01}\r\n                type=\"number\"\r\n                value={filter.brightness}\r\n              />\r\n            </dd>\r\n            <dt>contrast</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"filter.contrast\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={filter.contrast}\r\n              />\r\n              %\r\n            </dd>\r\n            <dt>grayscale</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                max={100}\r\n                min={0}\r\n                name=\"filter.grayscale\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={filter.grayscale}\r\n              />\r\n              %\r\n            </dd>\r\n            <dt>hue-rotate</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                max={360}\r\n                min={-360}\r\n                name=\"filter.hueRotate\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={filter.hueRotate}\r\n              />\r\n              deg\r\n            </dd>\r\n            <dt>invert</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                max={100}\r\n                min={0}\r\n                name=\"filter.invert\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={filter.invert}\r\n              />\r\n              %\r\n            </dd>\r\n            <dt>saturate</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"filter.saturate\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={filter.saturate}\r\n              />\r\n              %\r\n            </dd>\r\n            <dt>sepia</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                max={100}\r\n                min={0}\r\n                name=\"filter.sepia\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={filter.sepia}\r\n              />\r\n              %\r\n            </dd>\r\n          </dl>\r\n        )\r\n      },\r\n      {\r\n        name: 'opacity',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            max={1}\r\n            min={0}\r\n            name=\"opacity\"\r\n            onChange={onChange}\r\n            step={0.01}\r\n            type=\"number\"\r\n            value={opacity}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'rotate',\r\n        node: (\r\n          <React.Fragment>\r\n            <Input\r\n              className=\"input\"\r\n              name=\"rotate\"\r\n              onChange={onChange}\r\n              step={0.1}\r\n              type=\"number\"\r\n              value={rotate}\r\n            />\r\n            deg\r\n          </React.Fragment>\r\n        )\r\n      },\r\n      {\r\n        name: 'scale',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            min={0}\r\n            name=\"scale\"\r\n            onChange={onChange}\r\n            step={0.01}\r\n            type=\"number\"\r\n            value={scale}\r\n          />\r\n        )\r\n      }\r\n    ]}\r\n  </StyledLayerStyles>\r\n);\r\n\r\nexport default ImageLayerStyles;\r\n","import * as React from 'react';\r\nimport {\r\n  ChromePicker as ReactColorChromePicker,\r\n  ColorResult\r\n} from 'react-color';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  .chrome-picker {\r\n    background-color: #fff !important;\r\n    border: 1px #ddd solid !important;\r\n    border-radius: 0 !important;\r\n    box-shadow: none !important;\r\n    font-family: inherit !important;\r\n\r\n    > div {\r\n      border-radius: 0 !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ChromePickerProps {\r\n  className?: string;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  onChange: (color: ColorResult) => void;\r\n}\r\n\r\nconst ChromePicker: React.SFC<ChromePickerProps> = ({\r\n  className,\r\n  ...props\r\n}: ChromePickerProps) => (\r\n  <Div className={className}>\r\n    <ReactColorChromePicker {...props} />\r\n  </Div>\r\n);\r\n\r\nexport default ChromePicker;\r\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\nimport Input, { InputProps } from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.dl`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-left: -5px;\r\n  margin-top: -5px;\r\n\r\n  > div {\r\n    align-items: center;\r\n    display: flex;\r\n    margin-left: 5px;\r\n    margin-top: 5px;\r\n\r\n    dd {\r\n      align-items: center;\r\n      display: flex;\r\n      margin-left: 5px;\r\n\r\n      .input {\r\n        width: 50px;\r\n      }\r\n\r\n      .background-color {\r\n        border: 1px #ddd solid;\r\n        display: flex;\r\n        height: 15px;\r\n        justify-content: center;\r\n        position: relative;\r\n        width: 15px;\r\n\r\n        &:hover .picker {\r\n          display: block;\r\n        }\r\n\r\n        .picker {\r\n          background-color: #fff;\r\n          border: 1px #ddd solid;\r\n          bottom: 100%;\r\n          display: none;\r\n          padding: 10px;\r\n          position: absolute;\r\n\r\n          > div {\r\n            border: none !important;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface InformationProps {\r\n  backgroundColor: ChromePickerProps['color'];\r\n  gridSize: number;\r\n  height: number;\r\n  isInitialize: boolean;\r\n  onChange: InputProps['onChange'];\r\n  onChangeBackgroundColor: ChromePickerProps['onChange'];\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst Information: React.SFC<InformationProps> = ({\r\n  backgroundColor,\r\n  gridSize,\r\n  height,\r\n  isInitialize,\r\n  onChange,\r\n  onChangeBackgroundColor,\r\n  overflow,\r\n  scale,\r\n  width\r\n}: InformationProps) => {\r\n  const { a, b, g, r } = backgroundColor;\r\n\r\n  return (\r\n    <Dl>\r\n      {isInitialize && (\r\n        <React.Fragment>\r\n          <div>\r\n            <dt>width</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={1}\r\n                name=\"width\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={width}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>height</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={1}\r\n                name=\"height\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={height}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>scale</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"scale\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={scale}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>grid-size</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                max={500}\r\n                min={0}\r\n                name=\"gridSize\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={gridSize}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>background-color</dt>\r\n            <dd>\r\n              <div\r\n                className=\"background-color\"\r\n                style={{ backgroundColor: `rgba(${r},${g}, ${b},${a})` }}\r\n              >\r\n                <ChromePicker\r\n                  className=\"picker\"\r\n                  color={backgroundColor}\r\n                  onChange={onChangeBackgroundColor}\r\n                />\r\n              </div>\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>overflow</dt>\r\n            <dd>\r\n              <Input\r\n                defaultChecked={overflow}\r\n                name=\"overflow\"\r\n                onChange={onChange}\r\n                type=\"checkbox\"\r\n              />\r\n            </dd>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </Dl>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  margin-bottom: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    border: 1px solid #ddd;\r\n    padding: 2.5px;\r\n\r\n    &.select {\r\n      border: solid #b33e5c 1px;\r\n    }\r\n\r\n    textarea {\r\n      border: 1px solid #ddd;\r\n      font-size: 1.2rem;\r\n      height: 50px;\r\n      min-height: 50px;\r\n      overflow-y: scroll;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n\r\n    .image {\r\n      background-position: center;\r\n      background-size: cover;\r\n      height: 50px;\r\n      overflow: hidden;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ImageLayer {\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  value: string;\r\n}\r\n\r\nexport interface LayersProps {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst Layers: React.SFC<LayersProps> = ({\r\n  index,\r\n  layers,\r\n  onChange,\r\n  onClick,\r\n  onFocus\r\n}: LayersProps) => (\r\n  <Ul>\r\n    {layers\r\n      .map((layer, layerIndex) => {\r\n        let v = <React.Fragment />;\r\n\r\n        if ('value' in layer) {\r\n          const { value } = layer;\r\n\r\n          v = (\r\n            <textarea\r\n              data-index={layerIndex}\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              value={value}\r\n            />\r\n          );\r\n        } else if ('url' in layer) {\r\n          const { url } = layer;\r\n\r\n          v = (\r\n            <div\r\n              className=\"image\"\r\n              data-index={layerIndex}\r\n              onClick={onClick}\r\n              style={{ backgroundImage: `url(${url})` }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return (\r\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\r\n            {v}\r\n          </li>\r\n        );\r\n      })\r\n      .reverse()}\r\n  </Ul>\r\n);\r\n\r\nexport default Layers;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  background-color: #bbb;\r\n  display: grid;\r\n  grid-auto-rows: 25px;\r\n  grid-gap: 5px;\r\n  grid-template-columns: repeat(auto-fill, 25px);\r\n  padding: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    button {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      .icon {\r\n        color: white;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LayerSettingProps {\r\n  children: React.ReactNodeArray;\r\n}\r\n\r\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\r\n  children\r\n}: LayerSettingProps) => (\r\n  <Ul>\r\n    {children.map((value, index) => (\r\n      <li key={index}>{value}</li>\r\n    ))}\r\n  </Ul>\r\n);\r\n\r\nexport default LayerSetting;\r\n","import * as React from 'react';\r\nimport { TiDownload } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DownloadButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DownloadButton: React.SFC<DownloadButtonProps> = (\r\n  props: DownloadButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDownload className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DownloadButton;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  position: relative;\r\n\r\n  &::before,\r\n  &::after {\r\n    background-color: #000;\r\n    display: block;\r\n    content: '';\r\n    left: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n  }\r\n\r\n  &::before {\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    height: 100%;\r\n    width: 1px;\r\n  }\r\n`;\r\n\r\nexport interface CloseButtonProps {\r\n  className?: string;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst CloseButton: React.SFC<CloseButtonProps> = (props: CloseButtonProps) => (\r\n  <Button {...props} />\r\n);\r\n\r\nexport default CloseButton;\r\n","import CloseButton, { CloseButtonProps } from 'components/atoms/CloseButton';\r\nimport * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .close-button {\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface PortalProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  onClickCloseButton?: CloseButtonProps['onClick'];\r\n}\r\n\r\nclass Portal extends React.Component<PortalProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { children, className, onClickCloseButton } = this.props;\r\n\r\n    return (\r\n      <Div className={`portal ${className}`}>\r\n        {children}\r\n        {onClickCloseButton ? (\r\n          <CloseButton className=\"close-button\" onClick={onClickCloseButton} />\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portal;\r\n","import DownloadButton from 'components/atoms/DownloadButton';\r\nimport Portal, { PortalProps } from 'components/templates/Portal';\r\nimport { saveAs } from 'file-saver';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  img {\r\n    max-height: 90%;\r\n    max-width: 90%;\r\n  }\r\n\r\n  .download-button {\r\n    bottom: 10px;\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface ImageProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  extension: 'jpg' | 'png' | 'svg';\r\n  fileName: string;\r\n  src: string;\r\n}\r\n\r\nconst Image: React.SFC<ImageProps> = ({\r\n  extension,\r\n  fileName,\r\n  onClickCloseButton,\r\n  src\r\n}: ImageProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <img src={src} />\r\n    <DownloadButton\r\n      className=\"download-button\"\r\n      onClick={() => {\r\n        saveAs(src, `${fileName || 'image'}.${extension}`);\r\n      }}\r\n    />\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Image;\r\n","import * as React from 'react';\r\nimport { TiDocument } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\nimport { string } from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentButtonProps {\r\n  className?: string;\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentButton: React.SFC<DocumentButtonProps> = (\r\n  props: DocumentButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocument className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentButton;\r\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\nimport DocumentButton, {\r\n  DocumentButtonProps\r\n} from 'components/atoms/DocumentButton';\r\nimport Input from 'components/atoms/Input';\r\nimport Portal, { PortalProps } from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 250px;\r\n\r\n    dt:not(:first-child) {\r\n      margin-top: 15px;\r\n    }\r\n\r\n    dd {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 5px;\r\n\r\n      .file-name {\r\n        width: 150px;\r\n      }\r\n\r\n      .input {\r\n        width: 50px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .document-button {\r\n    bottom: 10px;\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface NewProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  backgroundColor: ChromePickerProps['color'];\r\n  changePreviewIsInitialize: (value: boolean) => void;\r\n  fileName: string;\r\n  height: number;\r\n  onChangePreviewBackgroundColor: ChromePickerProps['onChange'];\r\n  onChangePreviewValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  width: number;\r\n}\r\n\r\nconst New: React.SFC<NewProps> = ({\r\n  backgroundColor,\r\n  changePreviewIsInitialize,\r\n  fileName,\r\n  height,\r\n  onChangePreviewBackgroundColor,\r\n  onChangePreviewValue,\r\n  onClickCloseButton,\r\n  width\r\n}: NewProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <dl className=\"wrapper\">\r\n      <dt>file-name</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"file-name\"\r\n          name=\"fileName\"\r\n          onChange={onChangePreviewValue}\r\n          type=\"text\"\r\n          value={fileName}\r\n        />\r\n      </dd>\r\n      <dt>width</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={1}\r\n          name=\"width\"\r\n          onChange={onChangePreviewValue}\r\n          type=\"number\"\r\n          value={width}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>height</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={1}\r\n          name=\"height\"\r\n          onChange={onChangePreviewValue}\r\n          type=\"number\"\r\n          value={height}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>background-color</dt>\r\n      <dd>\r\n        <ChromePicker\r\n          color={backgroundColor}\r\n          onChange={onChangePreviewBackgroundColor}\r\n        />\r\n      </dd>\r\n    </dl>\r\n    <DocumentButton\r\n      className=\"document-button\"\r\n      disabled={!fileName || !height || !width}\r\n      onClick={(e: ArgumentTypes<DocumentButtonProps['onClick']>[0]) => {\r\n        changePreviewIsInitialize(true);\r\n        onClickCloseButton(e);\r\n      }}\r\n    />\r\n  </StyledPortal>\r\n);\r\n\r\nexport default New;\r\n","import Portal from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport { DotLoader } from 'react-spinners';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  p {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst Loading: React.SFC = () => (\r\n  <StyledPortal>\r\n    <DotLoader color=\"#234794\" />\r\n    <p>Generating... wait a minutes.</p>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Loading;\r\n","import Image, { ImageProps } from 'components/templates/Image';\r\nimport New, { NewProps } from 'components/templates/New';\r\nimport Loading from 'components/templates/Loading';\r\nimport domtoimage from 'dom-to-image';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n\r\n  * {\r\n    cursor: default;\r\n  }\r\n\r\n  ul {\r\n    background-color: #fff;\r\n    border: 1px #ddd solid;\r\n    position: absolute;\r\n  }\r\n\r\n  li {\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    white-space: nowrap;\r\n\r\n    &:hover {\r\n      background-color: rgba(35, 71, 148, 0.1);\r\n\r\n      > ul > li {\r\n        display: flex;\r\n      }\r\n    }\r\n  }\r\n\r\n  > li {\r\n    display: flex;\r\n    height: 24px;\r\n    width: 50px;\r\n\r\n    > ul {\r\n      left: 0;\r\n      top: 100%;\r\n\r\n      li {\r\n        display: none;\r\n        height: 25px;\r\n\r\n        > *:not(ul) {\r\n          align-items: center;\r\n          color: inherit;\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          padding: 0 30px 0 15px;\r\n          text-decoration: none;\r\n        }\r\n      }\r\n\r\n      > li > ul {\r\n        left: 100%;\r\n        top: 0;\r\n\r\n        &::after {\r\n          border-color: transparent transparent transparent black;\r\n          border-style: solid;\r\n          border-width: 4px 0 4px 4px;\r\n          content: '';\r\n          display: block;\r\n          height: 0;\r\n          left: -10px;\r\n          position: absolute;\r\n          top: 9px;\r\n          width: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface MenuProps\r\n  extends Pick<\r\n    NewProps,\r\n    | 'backgroundColor'\r\n    | 'changePreviewIsInitialize'\r\n    | 'fileName'\r\n    | 'height'\r\n    | 'onChangePreviewBackgroundColor'\r\n    | 'onChangePreviewValue'\r\n    | 'width'\r\n  > {\r\n  changePreviewOverflow: (value: boolean) => void;\r\n  overflow: boolean;\r\n}\r\n\r\ninterface MenuState {\r\n  extension?: ImageProps['extension'];\r\n  imageUrl: string;\r\n  isNew: boolean;\r\n  isShowLoading: boolean;\r\n}\r\n\r\nclass Menu extends React.Component<MenuProps, MenuState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: MenuProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      extension: undefined,\r\n      imageUrl: '',\r\n      isNew: false,\r\n      isShowLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\r\n    const { changePreviewOverflow, overflow } = this.props;\r\n    const { extension, isShowLoading } = this.state;\r\n\r\n    if (isShowLoading) {\r\n      if (overflow) {\r\n        changePreviewOverflow(false);\r\n\r\n        return;\r\n      }\r\n\r\n      const callback = (imageUrl: string) => {\r\n        this.setState(\r\n          {\r\n            imageUrl,\r\n            isShowLoading: false\r\n          },\r\n          () => {\r\n            if (prevOverflow) {\r\n              changePreviewOverflow(true);\r\n            }\r\n          }\r\n        );\r\n      };\r\n\r\n      if (extension === 'jpg') {\r\n        domtoimage.toJpeg(document.getElementById('capture')!).then(callback);\r\n      }\r\n\r\n      if (extension === 'png') {\r\n        domtoimage.toPng(document.getElementById('capture')!).then(callback);\r\n      }\r\n\r\n      if (extension === 'svg') {\r\n        domtoimage.toSvg(document.getElementById('capture')!).then(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { fileName } = this.props;\r\n    const { extension, imageUrl, isNew, isShowLoading } = this.state;\r\n\r\n    return (\r\n      <Ul>\r\n        <li>\r\n          <p>File</p>\r\n          <ul>\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ isNew: true });\r\n                }}\r\n              >\r\n                New\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <p>Save</p>\r\n              <ul>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'jpg',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    JPG\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'png',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    PNG\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'svg',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    SVG\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <p>Help</p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/piro0919/image-maker\" target=\"_blank\">\r\n                GitHub\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        {extension &&\r\n          imageUrl &&\r\n          ReactDOM.createPortal(\r\n            <Image\r\n              extension={extension}\r\n              fileName={fileName}\r\n              onClickCloseButton={() => {\r\n                this.setState({ extension: undefined, imageUrl: '' });\r\n              }}\r\n              src={imageUrl}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isNew &&\r\n          ReactDOM.createPortal(\r\n            <New\r\n              {...this.props}\r\n              onClickCloseButton={() => {\r\n                this.setState({ isNew: false });\r\n              }}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isShowLoading && ReactDOM.createPortal(<Loading />, this.rootEl)}\r\n      </Ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import * as React from 'react';\r\nimport * as uniqid from 'uniqid';\r\n\r\nexport interface ImagePreviewProps {\r\n  id: string;\r\n  style: {\r\n    filter: {\r\n      blur: number;\r\n      brightness: number;\r\n      contrast: number;\r\n      grayscale: number;\r\n      hueRotate: number;\r\n      invert: number;\r\n      saturate: number;\r\n      sepia: number;\r\n    };\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface ImagePreviewState {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nclass ImagePreview extends React.Component<\r\n  ImagePreviewProps,\r\n  ImagePreviewState\r\n> {\r\n  id: string;\r\n\r\n  constructor(props: ImagePreviewProps) {\r\n    super(props);\r\n\r\n    this.id = uniqid();\r\n    this.state = {\r\n      height: 0,\r\n      width: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { url } = this.props;\r\n    const element = new Image();\r\n\r\n    element.onload = () => {\r\n      const { naturalHeight: height, naturalWidth: width } = element;\r\n\r\n      this.setState(\r\n        {\r\n          height,\r\n          width\r\n        },\r\n        () => {\r\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\r\n          const context = canvas.getContext('2d');\r\n          const image = new Image();\r\n\r\n          image.src = url;\r\n          image.onload = () => {\r\n            context!.drawImage(image, 0, 0, width, height);\r\n          };\r\n        }\r\n      );\r\n    };\r\n    element.src = url;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style: {\r\n        filter: {\r\n          blur,\r\n          brightness,\r\n          contrast,\r\n          grayscale,\r\n          hueRotate,\r\n          invert,\r\n          saturate,\r\n          sepia\r\n        },\r\n        rotate,\r\n        scale,\r\n        ...style\r\n      }\r\n    } = this.props;\r\n    const { height, width } = this.state;\r\n\r\n    return (\r\n      <canvas\r\n        height={height}\r\n        id={this.id}\r\n        style={{\r\n          filter: `blur(${blur}px) brightness(${brightness}) contrast(${contrast}%) grayscale(${grayscale}%) hue-rotate(${hueRotate}deg) invert(${invert}%) saturate(${saturate}%) sepia(${sepia}%)`,\r\n          transform: `rotate(${rotate}deg) scale(${scale})`,\r\n          ...style\r\n        }}\r\n        width={width}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface DivProps {\r\n  fontFamily: string;\r\n}\r\n\r\nconst Div = styled.div`\r\n  @font-face {\r\n    font-family: '${({ fontFamily }: DivProps) => fontFamily}';\r\n    src: url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.woff2') format('woff2'),\r\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.woff') format('woff'),\r\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.ttf') format('truetype');\r\n  }\r\n\r\n  white-space: nowrap;\r\n`;\r\n\r\ninterface TextShadow {\r\n  blurRadius: number;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  hShadow: number;\r\n  vShadow: number;\r\n}\r\n\r\nexport interface TextPreviewProps {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontStyle: boolean;\r\n    fontWeight: number;\r\n    letterSpacing: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n    textShadows: TextShadow[];\r\n  };\r\n  value: string;\r\n}\r\n\r\nconst TextPreview: React.SFC<TextPreviewProps> = ({\r\n  style: {\r\n    color: { a, b, g, r },\r\n    fontFamily: { value: fontFamily },\r\n    fontSize,\r\n    fontStyle,\r\n    fontWeight,\r\n    letterSpacing,\r\n    lineHeight,\r\n    opacity,\r\n    rotate,\r\n    textShadows\r\n  },\r\n  value\r\n}: TextPreviewProps) => (\r\n  <Div\r\n    fontFamily={fontFamily}\r\n    style={{\r\n      fontFamily,\r\n      fontWeight,\r\n      opacity,\r\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n      fontSize: `${fontSize}px`,\r\n      fontStyle: fontStyle ? 'italic' : 'normal',\r\n      letterSpacing: `${letterSpacing}px`,\r\n      textShadow: textShadows\r\n        .map(\r\n          ({\r\n            blurRadius,\r\n            color: {\r\n              a: textShadowA,\r\n              b: textShadowB,\r\n              g: textShadowG,\r\n              r: textShadowR\r\n            },\r\n            hShadow,\r\n            vShadow\r\n          }) =>\r\n            `${hShadow}px ${vShadow}px ${blurRadius}px rgba(${textShadowR}, ${textShadowG}, ${textShadowB}, ${textShadowA})`\r\n        )\r\n        .join(','),\r\n      transform: `rotate(${rotate}deg)`\r\n    }}\r\n  >\r\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\r\n      <div\r\n        key={index}\r\n        style={{\r\n          height: `${lineHeight}px`,\r\n          lineHeight: `${lineHeight}px`\r\n        }}\r\n      >\r\n        {v}\r\n      </div>\r\n    ))}\r\n  </Div>\r\n);\r\n\r\nexport default TextPreview;\r\n","import ImagePreview, {\r\n  ImagePreviewProps\r\n} from 'components/molecules/ImagePreview';\r\nimport TextPreview, {\r\n  TextPreviewProps\r\n} from 'components/molecules/TextPreview';\r\nimport * as React from 'react';\r\nimport ReactScalableDraggable from 'react-scalable-draggable';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #bbb;\r\n  height: 100%;\r\n  overflow: scroll;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  .wrapper {\r\n    box-sizing: content-box;\r\n    left: 0;\r\n    padding: 50px;\r\n    position: absolute;\r\n    top: 0;\r\n    transform-origin: top left;\r\n\r\n    #capture {\r\n      height: inherit;\r\n      width: inherit;\r\n\r\n      .screen {\r\n        height: inherit;\r\n        position: relative;\r\n        width: inherit;\r\n\r\n        &::before {\r\n          background-image: url(${process.env.PUBLIC_URL}/images/grid.png);\r\n          background-repeat: repeat;\r\n          background-size: inherit;\r\n          content: '';\r\n          display: block;\r\n          height: 100%;\r\n          left: 0;\r\n          position: absolute;\r\n          top: 0;\r\n          width: 100%;\r\n        }\r\n\r\n        .draggable {\r\n          cursor: move;\r\n          position: absolute;\r\n          word-break: keep-all;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface PreviewProps {\r\n  layers: (ImagePreviewProps | TextPreviewProps)[];\r\n  preview: {\r\n    backgroundColor: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    gridSize: number;\r\n    height: number;\r\n    isInitialize: boolean;\r\n    overflow: boolean;\r\n    scale: number;\r\n    width: number;\r\n  };\r\n}\r\n\r\nconst Preview: React.SFC<PreviewProps> = ({\r\n  layers,\r\n  preview: {\r\n    backgroundColor: { a, b, g, r },\r\n    gridSize,\r\n    height,\r\n    isInitialize,\r\n    overflow,\r\n    scale,\r\n    width\r\n  }\r\n}) => {\r\n  const previews = layers.map(layer => {\r\n    const { id } = layer;\r\n\r\n    let node = <React.Fragment />;\r\n\r\n    if ('value' in layer) {\r\n      node = <TextPreview {...layer} />;\r\n    } else if ('url' in layer) {\r\n      node = <ImagePreview {...layer} />;\r\n    }\r\n\r\n    return (\r\n      <ReactScalableDraggable\r\n        className=\"draggable\"\r\n        key={id}\r\n        parentScale={scale}\r\n      >\r\n        {node}\r\n      </ReactScalableDraggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Div id=\"preview\">\r\n      <div\r\n        className=\"wrapper\"\r\n        style={{\r\n          height: `${height}px`,\r\n          transform: `scale(${scale})`,\r\n          width: `${width}px`\r\n        }}\r\n      >\r\n        <div id=\"capture\">\r\n          {isInitialize && (\r\n            <div\r\n              className=\"screen\"\r\n              style={{\r\n                backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n                backgroundSize: `${gridSize}px`,\r\n                overflow: overflow ? 'visible' : 'hidden'\r\n              }}\r\n            >\r\n              {previews}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import * as React from 'react';\r\nimport { TiMinus } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface MinusButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  name?: string;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst MinusButton: React.SFC<MinusButtonProps> = (props: MinusButtonProps) => (\r\n  <Button {...props}>\r\n    <TiMinus className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default MinusButton;\r\n","import * as React from 'react';\r\nimport { TiPlus } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface PlusButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst PlusButton: React.SFC<PlusButtonProps> = (props: PlusButtonProps) => (\r\n  <Button {...props}>\r\n    <TiPlus className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default PlusButton;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\n\r\nconst Dl = styled.dl`\r\n  .input {\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface TextShadowProps {\r\n  blurRadius: number;\r\n  className?: string;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  hShadow: number;\r\n  name: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeTextShadowColor: (\r\n    color: ArgumentTypes<ChromePickerProps['onChange']>[0],\r\n    name: string\r\n  ) => void;\r\n  vShadow: number;\r\n}\r\n\r\nconst TextShadow: React.SFC<TextShadowProps> = ({\r\n  blurRadius,\r\n  className,\r\n  color,\r\n  hShadow,\r\n  name,\r\n  onChange,\r\n  onChangeTextShadowColor,\r\n  vShadow\r\n}: TextShadowProps) => (\r\n  <Dl className={className}>\r\n    <dt>h-shadow</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name={`${name}.hShadow`}\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={hShadow}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>v-shadow</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name={`${name}.vShadow`}\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={vShadow}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>blur-radius</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name={`${name}.blurRadius`}\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={blurRadius}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>color</dt>\r\n    <dd>\r\n      <ChromePicker\r\n        color={color}\r\n        onChange={color => onChangeTextShadowColor(color, `${name}.color`)}\r\n      />\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default TextShadow;\r\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\nimport MinusButton, { MinusButtonProps } from 'components/atoms/MinusButton';\r\nimport PlusButton, { PlusButtonProps } from 'components/atoms/PlusButton';\r\nimport Input from 'components/atoms/Input';\r\nimport LayerStyles from 'components/molecules/LayerStyles';\r\nimport TextShadow, { TextShadowProps } from 'components/molecules/TextShadow';\r\nimport * as React from 'react';\r\nimport Select from 'react-select';\r\nimport { Props } from 'react-select/lib/Select';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLayerStyles = styled(LayerStyles)`\r\n  .select {\r\n    width: 200px;\r\n  }\r\n\r\n  .input {\r\n    width: 50px;\r\n  }\r\n\r\n  .text-shadow {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .name {\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .plus-button {\r\n      height: 14.4px;\r\n      width: 14.4px;\r\n    }\r\n  }\r\n\r\n  .node-list {\r\n    width: 230px;\r\n\r\n    > li {\r\n      position: relative;\r\n\r\n      &:not(:first-child) {\r\n        border-top: 1px solid white;\r\n        margin-top: 10px;\r\n      }\r\n\r\n      .minus-button {\r\n        height: 14.4px;\r\n        position: absolute;\r\n        right: 0;\r\n        top: 0;\r\n        width: 14.4px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface TextLayerStylesProps\r\n  extends Pick<ChromePickerProps, 'color'>,\r\n    Pick<TextShadowProps, 'onChange'> {\r\n  fontFamily: {\r\n    label: string;\r\n    value: string;\r\n  };\r\n  fonts: Font[];\r\n  fontSize: number;\r\n  fontStyle: boolean;\r\n  fontWeight: number;\r\n  letterSpacing: number;\r\n  lineHeight: number;\r\n  onChangeColor: (\r\n    color: ArgumentTypes<ChromePickerProps['onChange']>[0],\r\n    name: string\r\n  ) => void;\r\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\r\n  onClickAddTextShadow: PlusButtonProps['onClick'];\r\n  onClickRemoveTextShadow: MinusButtonProps['onClick'];\r\n  opacity: number;\r\n  rotate: number;\r\n  textShadows: Pick<\r\n    TextShadowProps,\r\n    'blurRadius' | 'color' | 'hShadow' | 'vShadow'\r\n  >[];\r\n}\r\n\r\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\r\n  color,\r\n  fontFamily,\r\n  fonts,\r\n  fontSize,\r\n  fontStyle,\r\n  fontWeight,\r\n  letterSpacing,\r\n  lineHeight,\r\n  onChange,\r\n  onChangeColor,\r\n  onChangeFontFamily,\r\n  onClickAddTextShadow,\r\n  onClickRemoveTextShadow,\r\n  opacity,\r\n  rotate,\r\n  textShadows\r\n}: TextLayerStylesProps) => {\r\n  const options = fonts.map(({ fontFamily: value, name: label }) => ({\r\n    label,\r\n    value\r\n  }));\r\n  const index = options.findIndex(\r\n    font => JSON.stringify(fontFamily) === JSON.stringify(font)\r\n  );\r\n\r\n  return (\r\n    <StyledLayerStyles>\r\n      {[\r\n        {\r\n          name: 'color',\r\n          node: (\r\n            <ChromePicker\r\n              color={color}\r\n              onChange={color => onChangeColor(color, 'color')}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'font-family',\r\n          node: (\r\n            <Select\r\n              className=\"select\"\r\n              onChange={onChangeFontFamily}\r\n              options={options}\r\n              value={options[index]}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'font-size',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"fontSize\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={fontSize}\r\n              />\r\n              px\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: 'font-style',\r\n          node: (\r\n            <Input\r\n              defaultChecked={fontStyle}\r\n              name=\"fontStyle\"\r\n              onChange={onChange}\r\n              type=\"checkbox\"\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'font-weight',\r\n          node: (\r\n            <Input\r\n              className=\"input\"\r\n              max={900}\r\n              min={100}\r\n              name=\"fontWeight\"\r\n              onChange={onChange}\r\n              step={100}\r\n              type=\"number\"\r\n              value={fontWeight}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'letter-spacing',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"letterSpacing\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={letterSpacing}\r\n              />\r\n              px\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: 'line-height',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"lineHeight\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={lineHeight}\r\n              />\r\n              px\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: 'opacity',\r\n          node: (\r\n            <Input\r\n              className=\"input\"\r\n              max={1}\r\n              min={0}\r\n              name=\"opacity\"\r\n              onChange={onChange}\r\n              step={0.01}\r\n              type=\"number\"\r\n              value={opacity}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'rotate',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"rotate\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={rotate}\r\n              />\r\n              deg\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: (\r\n            <div className=\"name\">\r\n              <p>text-shadow</p>\r\n              <PlusButton\r\n                className=\"plus-button\"\r\n                onClick={onClickAddTextShadow}\r\n              />\r\n            </div>\r\n          ),\r\n          node: (\r\n            <ul className=\"node-list\">\r\n              {textShadows.map((textShadow, index) => (\r\n                <li key={index}>\r\n                  <MinusButton\r\n                    className=\"minus-button\"\r\n                    name={index.toString()}\r\n                    onClick={onClickRemoveTextShadow}\r\n                  />\r\n                  <TextShadow\r\n                    {...textShadow}\r\n                    className=\"text-shadow\"\r\n                    name={`textShadows[${index}]`}\r\n                    onChange={onChange}\r\n                    onChangeTextShadowColor={onChangeColor}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )\r\n        }\r\n      ]}\r\n    </StyledLayerStyles>\r\n  );\r\n};\r\n\r\nexport default TextLayerStyles;\r\n","import Portal, { PortalProps } from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport ReactDropzone, {\r\n  DropzoneProps as ReactDropzoneProps\r\n} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    align-items: center;\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: center;\r\n    width: 100%;\r\n\r\n    img {\r\n      height: calc(231px / 3);\r\n      opacity: 0.75;\r\n      width: calc(289px / 3);\r\n    }\r\n\r\n    p {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DropzoneProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  onDrop: ReactDropzoneProps['onDrop'];\r\n}\r\n\r\nconst Dropzone: React.SFC<DropzoneProps> = ({\r\n  onClickCloseButton,\r\n  onDrop\r\n}: DropzoneProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\r\n      {({ getRootProps, getInputProps, isDragActive }) => (\r\n        <div {...getRootProps()} className=\"wrapper\">\r\n          <input {...getInputProps()} />\r\n          <img src={`${process.env.PUBLIC_URL}/images/dd.png`} />\r\n          <p>\r\n            {isDragActive\r\n              ? 'Drop files here...'\r\n              : 'Try dropping some image files here, or click to select files to upload.'}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </ReactDropzone>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Dropzone;\r\n","import Portal from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    height: 360px;\r\n    position: relative;\r\n    width: 640px;\r\n\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n\r\n    p {\r\n      bottom: 80px;\r\n      color: #ef64a0;\r\n      font-size: 1.2em;\r\n      position: absolute;\r\n      right: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LogoProps {\r\n  loading: number;\r\n}\r\n\r\nconst Logo: React.SFC<LogoProps> = ({ loading }: LogoProps) => (\r\n  <StyledPortal>\r\n    <div className=\"wrapper\">\r\n      <img src={`${process.env.PUBLIC_URL}/images/top.png`} />\r\n      <p>loading... {loading}%</p>\r\n    </div>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Logo;\r\n","import setFonts from 'actions/fonts/setFonts';\r\nimport addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport addTextShadow from 'actions/layer/addTextShadow';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport removeTextShadow from 'actions/layer/removeTextShadow';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\r\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\r\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\r\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\r\nimport ImageButton from 'components/atoms/ImageButton';\r\nimport ReactHelmet from 'components/atoms/ReactHelmet';\r\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\r\nimport Information, {\r\n  InformationProps\r\n} from 'components/organisms/Information';\r\nimport Layers, { LayersProps } from 'components/organisms/Layers';\r\nimport LayerSetting from 'components/organisms/LayerSetting';\r\nimport Menu, { MenuProps } from 'components/organisms/Menu';\r\nimport Preview from 'components/organisms/Preview';\r\nimport TextLayerStyles, {\r\n  TextLayerStylesProps\r\n} from 'components/organisms/TextLayerStyles';\r\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\r\nimport Logo from 'components/templates/Logo';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { TwitterIcon, TwitterShareButton } from 'react-share';\r\nimport { State } from 'reducers';\r\nimport { Dispatch } from 'redux';\r\nimport styled from 'styled-components';\r\nimport * as WebFont from 'webfontloader';\r\n\r\nconst Div = styled.div`\r\n  background-color: #fbfbfb;\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 275px 1fr 200px;\r\n  grid-template-rows: 25px 1fr;\r\n\r\n  .header {\r\n    border-bottom: 1px #ddd inset;\r\n    grid-column: 1 / 4;\r\n    position: relative;\r\n    z-index: 2;\r\n\r\n    .twitter-share-button {\r\n      position: absolute;\r\n      right: 5px;\r\n      top: 0;\r\n\r\n      rect {\r\n        fill: rgba(0, 0, 0, 0);\r\n      }\r\n\r\n      path {\r\n        fill: rgb(0, 172, 237);\r\n      }\r\n    }\r\n  }\r\n\r\n  .detail {\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  .preview {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-rows: 1fr fit-content(20px);\r\n    padding: 5px;\r\n  }\r\n\r\n  .side-layers {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .layers {\r\n      flex-basis: 0;\r\n      flex-grow: 1;\r\n      overflow-y: scroll;\r\n      padding: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PagesProps\r\n  extends ReturnType<typeof mapDispatchToProps>,\r\n    ReturnType<typeof mapStateToProps>,\r\n    RouteComponentProps {}\r\n\r\ninterface PagesState {\r\n  isShowDropzone: boolean;\r\n  isShowLogo: boolean;\r\n  loading: number;\r\n}\r\n\r\nclass Pages extends React.Component<PagesProps, PagesState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: PagesProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      isShowDropzone: false,\r\n      // isShowLogo: true,\r\n      isShowLogo: process.env.NODE_ENV !== 'development',\r\n      loading: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFonts } = this.props;\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open('GET', `${process.env.PUBLIC_URL}/jsons/fonts.json`, true);\r\n    request.responseType = 'blob';\r\n    request.onload = ({ target: { response } }: any) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = ({ target: { result } }: any) => {\r\n        const fonts: Font[] = JSON.parse(result);\r\n\r\n        let counter = 0;\r\n\r\n        setFonts(fonts);\r\n\r\n        WebFont.load({\r\n          active: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false, loading: 100 });\r\n            }, 1000);\r\n          },\r\n          classes: false,\r\n          custom: {\r\n            families: fonts.map(({ fontFamily }) => fontFamily)\r\n          },\r\n          fontactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.floor((counter / fonts.length) * 100)\r\n            });\r\n          },\r\n          fontinactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.floor((counter / fonts.length) * 100)\r\n            });\r\n          },\r\n          inactive: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false, loading: 100 });\r\n            }, 1000);\r\n          }\r\n        });\r\n      };\r\n      reader.readAsText(response);\r\n    };\r\n    request.send();\r\n  }\r\n\r\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\r\n    const { layers } = this.props;\r\n    const { isShowDropzone } = this.state;\r\n\r\n    if (isShowDropzone && prevLayers.length !== layers.length) {\r\n      this.setState({ isShowDropzone: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addImageLayers,\r\n      addTextLayer,\r\n      addTextShadow,\r\n      changeColor,\r\n      changeFontFamily,\r\n      changePreviewBackgroundColor,\r\n      changePreviewIsInitialize,\r\n      changePreviewOverflow,\r\n      changePreviewValue,\r\n      changeStyle,\r\n      changeValue,\r\n      downLayer,\r\n      fonts,\r\n      index,\r\n      layers,\r\n      preview,\r\n      removeLayer,\r\n      removeTextShadow,\r\n      selectLayer,\r\n      upLayer\r\n    } = this.props;\r\n    const { isShowDropzone, isShowLogo, loading } = this.state;\r\n    const { fileName, isInitialize } = preview;\r\n\r\n    let styles = <React.Fragment />;\r\n\r\n    if (index !== undefined) {\r\n      const layer = layers[index];\r\n\r\n      if ('value' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = (\r\n          <TextLayerStyles\r\n            {...style}\r\n            fonts={fonts}\r\n            onChange={changeStyle}\r\n            onChangeColor={changeColor}\r\n            onChangeFontFamily={changeFontFamily}\r\n            onClickAddTextShadow={addTextShadow}\r\n            onClickRemoveTextShadow={removeTextShadow}\r\n          />\r\n        );\r\n      } else if ('url' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Div>\r\n        {fileName && isInitialize && <ReactHelmet fileName={fileName} />}\r\n        <header className=\"header\">\r\n          <Menu\r\n            {...preview}\r\n            changePreviewOverflow={changePreviewOverflow}\r\n            onChangePreviewBackgroundColor={changePreviewBackgroundColor}\r\n            changePreviewIsInitialize={changePreviewIsInitialize}\r\n            onChangePreviewValue={changePreviewValue}\r\n          />\r\n          <div className=\"twitter-share-button\">\r\n            <TwitterShareButton\r\n              hashtags={['image-maker']}\r\n              title=\"Image Maker\"\r\n              url=\"https://piro0919.github.io/image-maker/\"\r\n            >\r\n              <TwitterIcon size={25} />\r\n            </TwitterShareButton>\r\n          </div>\r\n        </header>\r\n        <aside className=\"detail\">{styles}</aside>\r\n        <div className=\"preview\">\r\n          <Preview layers={layers} preview={preview} />\r\n          <Information\r\n            {...preview}\r\n            onChange={changePreviewValue}\r\n            onChangeBackgroundColor={changePreviewBackgroundColor}\r\n          />\r\n        </div>\r\n        <aside className=\"side-layers\">\r\n          <LayerSetting>\r\n            {[\r\n              <DocumentAddButton\r\n                disabled={!isInitialize}\r\n                key=\"add\"\r\n                onClick={addTextLayer}\r\n              />,\r\n              <DocumentDeleteButton\r\n                disabled={!isInitialize || index === undefined}\r\n                key=\"delete\"\r\n                onClick={removeLayer}\r\n              />,\r\n              <ImageButton\r\n                disabled={!isInitialize}\r\n                key=\"image\"\r\n                onClick={() => {\r\n                  this.setState({ isShowDropzone: true });\r\n                }}\r\n              />,\r\n              <ArrowUpOutlineButton\r\n                disabled={\r\n                  !isInitialize ||\r\n                  index === undefined ||\r\n                  index === layers.length - 1\r\n                }\r\n                key=\"up\"\r\n                onClick={upLayer}\r\n              />,\r\n              <ArrowDownOutlineButton\r\n                disabled={!isInitialize || !index}\r\n                key=\"down\"\r\n                onClick={downLayer}\r\n              />\r\n            ]}\r\n          </LayerSetting>\r\n          <div className=\"layers\">\r\n            <Layers\r\n              index={index}\r\n              layers={layers}\r\n              onChange={changeValue}\r\n              onClick={selectLayer}\r\n              onFocus={selectLayer}\r\n            />\r\n          </div>\r\n        </aside>\r\n        {isShowDropzone &&\r\n          ReactDOM.createPortal(\r\n            <Dropzone\r\n              onClickCloseButton={() => {\r\n                this.setState({ isShowDropzone: false });\r\n              }}\r\n              onDrop={addImageLayers}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isShowLogo &&\r\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  addImageLayers: (\r\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\r\n  ) => {\r\n    acceptedFiles.forEach(acceptedFile => {\r\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\r\n    });\r\n  },\r\n  addTextLayer: () => dispatch(addTextLayer()),\r\n  addTextShadow: () => dispatch(addTextShadow()),\r\n  changeColor: (\r\n    { rgb: value }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0],\r\n    name: string\r\n  ) => dispatch(changeStyle({ name, value })),\r\n  changeFontFamily: (\r\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\r\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\r\n  changePreviewBackgroundColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changePreviewValue({ value, name: 'backgroundColor' })),\r\n  changePreviewIsInitialize: (\r\n    value: ArgumentTypes<MenuProps['changePreviewIsInitialize']>[0]\r\n  ) => dispatch(changePreviewValue({ value, name: 'isInitialize' })),\r\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\r\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\r\n  changePreviewValue: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeStyle: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changeStyle({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeValue: ({\r\n    target: { value }\r\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n    dispatch(changeValue({ value })),\r\n  downLayer: () => dispatch(downLayer()),\r\n  removeLayer: () => dispatch(removeLayer()),\r\n  removeTextShadow: ({\r\n    currentTarget: { name }\r\n  }: ArgumentTypes<TextLayerStylesProps['onClickRemoveTextShadow']>[0]) =>\r\n    dispatch(removeTextShadow({ index: parseInt(name, 10) })),\r\n  selectLayer: ({\r\n    currentTarget: { dataset }\r\n  }:\r\n    | ArgumentTypes<LayersProps['onClick']>[0]\r\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\r\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\r\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\r\n  upLayer: () => dispatch(upLayer())\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  fonts: { fonts },\r\n  layer: { index, layers },\r\n  preview\r\n}: State) => ({\r\n  fonts,\r\n  index,\r\n  layers,\r\n  preview\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pages);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import setFonts from 'actions/fonts/setFonts';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface FontsState {\r\n  fonts: Font[];\r\n}\r\n\r\nconst initialState: FontsState = {\r\n  fonts: []\r\n};\r\n\r\nconst fonts = reducerWithInitialState(initialState).case(\r\n  setFonts,\r\n  (state, { fonts }) => ({ ...state, fonts })\r\n);\r\n\r\nexport default fonts;\r\n","import addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport addTextShadow from 'actions/layer/addTextShadow';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport removeTextShadow from 'actions/layer/removeTextShadow';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport * as uniqid from 'uniqid';\r\n\r\ninterface ImageLayer {\r\n  id: string;\r\n  style: {\r\n    filter: {\r\n      blur: number;\r\n      brightness: number;\r\n      contrast: number;\r\n      grayscale: number;\r\n      hueRotate: number;\r\n      invert: number;\r\n      saturate: number;\r\n      sepia: number;\r\n    };\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface TextShadow {\r\n  blurRadius: number;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  hShadow: number;\r\n  vShadow: number;\r\n}\r\n\r\ninterface TextLayer {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontStyle: boolean;\r\n    fontWeight: number;\r\n    letterSpacing: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n    textShadows: TextShadow[];\r\n  };\r\n  value: string;\r\n}\r\n\r\nexport interface LayerState {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n}\r\n\r\nconst initialState: LayerState = {\r\n  index: undefined,\r\n  layers: []\r\n};\r\n\r\nconst layer = reducerWithInitialState(initialState)\r\n  .case(addImageLayer, (state, { url }) => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      url,\r\n      id: uniqid(),\r\n      style: {\r\n        filter: {\r\n          blur: 0,\r\n          brightness: 1,\r\n          contrast: 100,\r\n          grayscale: 0,\r\n          hueRotate: 0,\r\n          invert: 0,\r\n          saturate: 100,\r\n          sepia: 0\r\n        },\r\n        opacity: 1,\r\n        rotate: 0,\r\n        scale: 1\r\n      }\r\n    });\r\n\r\n    return { ...state, layers, index: layers.length - 1 };\r\n  })\r\n  .case(addTextLayer, state => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      id: uniqid(),\r\n      style: {\r\n        color: {\r\n          a: 1,\r\n          b: 0,\r\n          g: 0,\r\n          r: 0\r\n        },\r\n        fontFamily: {\r\n          label: 'M+ P Type-1 Regular',\r\n          value: 'mplus-1p-regular'\r\n        },\r\n        fontSize: 16,\r\n        fontStyle: false,\r\n        fontWeight: 400,\r\n        letterSpacing: 0,\r\n        lineHeight: 16,\r\n        opacity: 1,\r\n        rotate: 0,\r\n        textShadows: []\r\n      },\r\n      value: ''\r\n    });\r\n\r\n    return { ...state, layers, index: layers.length - 1 };\r\n  })\r\n  .case(addTextShadow, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    (layers[index] as TextLayer).style.textShadows.push({\r\n      blurRadius: 0,\r\n      color: {\r\n        a: 1,\r\n        b: 0,\r\n        g: 0,\r\n        r: 0\r\n      },\r\n      hShadow: 0,\r\n      vShadow: 0\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeStyle, (state, { name, value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    if (name.indexOf('.') >= 0) {\r\n      const [first, secondName] = name.split('.');\r\n\r\n      if (RegExp('([a-zA-Z]+)\\\\[(.+)\\\\]').test(first)) {\r\n        const [_, firstName, index2] = first.match('([a-zA-Z]+)\\\\[(.+)\\\\]');\r\n\r\n        layers[index].style[firstName][parseInt(index2, 10)][\r\n          secondName\r\n        ] = value;\r\n      } else {\r\n        layers[index].style[first][secondName] = value;\r\n      }\r\n    } else {\r\n      if (name === 'opacity' || name === 'rotate' || name === 'scale') {\r\n        layers[index].style[name] = parseFloat(value);\r\n      } else {\r\n        layers[index].style[name] = value;\r\n      }\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changePreviewValue, (state, { name }) => {\r\n    if (name === 'isInitialize') {\r\n      return initialState;\r\n    }\r\n\r\n    return state;\r\n  })\r\n  .case(changeValue, (state, { value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const layer = layers[index];\r\n\r\n    if ('value' in layer) {\r\n      layer.value = value;\r\n\r\n      layers[index] = layer;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(downLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index - 1];\r\n    layers[index - 1] = tmpLayer;\r\n\r\n    return { ...state, index: index - 1, layers };\r\n  })\r\n  .case(removeLayer, state => {\r\n    const { index: prevIndex, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    let index = undefined;\r\n\r\n    layers.splice(prevIndex, 1);\r\n\r\n    if (index - 1 >= 0) {\r\n      index = index - 1;\r\n    } else if (layers.length) {\r\n      index = 0;\r\n    }\r\n\r\n    return {\r\n      index,\r\n      layers\r\n    };\r\n  })\r\n  .case(removeTextShadow, (state, { index: textShadowIndex }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    (layers[index] as TextLayer).style.textShadows.splice(textShadowIndex, 1);\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\r\n  .case(upLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index + 1];\r\n    layers[index + 1] = tmpLayer;\r\n\r\n    return { ...state, index: index + 1, layers };\r\n  });\r\n\r\nexport default layer;\r\n","import changeValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface PreviewState {\r\n  backgroundColor: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  fileName: string;\r\n  gridSize: number;\r\n  height: number;\r\n  isInitialize: boolean;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst initialState: PreviewState = {\r\n  backgroundColor: {\r\n    a: 1,\r\n    b: 255,\r\n    g: 255,\r\n    r: 255\r\n  },\r\n  fileName: '',\r\n  gridSize: 0,\r\n  height: 300,\r\n  // isInitialize: false,\r\n  isInitialize: process.env.NODE_ENV === 'development',\r\n  overflow: false,\r\n  scale: 1,\r\n  width: 400\r\n};\r\n\r\nconst preview = reducerWithInitialState(initialState).case(\r\n  changeValue,\r\n  (state, { name, value: newValue }) => {\r\n    let value;\r\n\r\n    if (name === 'scale') {\r\n      value = parseFloat(newValue as string);\r\n    } else {\r\n      value = newValue;\r\n    }\r\n\r\n    return { ...state, ...{ [name]: value } };\r\n  }\r\n);\r\n\r\nexport default preview;\r\n","import { combineReducers } from 'redux';\r\nimport fonts, { FontsState } from './fonts';\r\nimport layer, { LayerState } from './layer';\r\nimport preview, { PreviewState } from './preview';\r\n\r\nexport interface State {\r\n  fonts: FontsState;\r\n  layer: LayerState;\r\n  preview: PreviewState;\r\n}\r\n\r\nconst reducers = () => combineReducers({ fonts, layer, preview });\r\n\r\nexport default reducers;\r\n","import Pages from 'containers/pages';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport 'ress';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers());\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\r\n    font-size: 62.5%;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    height: 100%;\r\n    line-height: 1.2;\r\n    overflow: hidden !important;\r\n    -webkit-overflow-scrolling: touch;\r\n    width: 100%;\r\n  \r\n    body {\r\n      font-size: 1.2rem;\r\n      height: 100%;\r\n      width: 100%;\r\n    \r\n      #root {\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        * {\r\n          appearance: none;\r\n          \r\n          &:focus {\r\n            outline: none;\r\n          }\r\n        }\r\n  \r\n        a {\r\n          line-height: 0;\r\n        }\r\n\r\n        ul {\r\n          list-style: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter\r\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\r\n    >\r\n      <Switch>\r\n        <Route component={Pages} exact={true} path=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n    <GlobalStyle />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}