{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/Input/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/molecules/ImagePreview/index.tsx","components/organisms/Preview/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","changeStyle","changeValue","downLayer","removeLayer","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","StyledInput","input","Input_templateObject","Input","Dl","ul","ImageLayerStyles_templateObject","ImageLayerStyles","_ref","onChange","opacity","rotate","scale","atoms_Input","max","min","name","step","type","value","Div","div","Information_templateObject","Information","height","overflow","width","defaultChecked","Ul","Layers_templateObject","Layers","index","layers","onClick","onFocus","map","layer","layerIndex","v","data-index","url","style","backgroundImage","concat","key","reverse","LayerSetting_templateObject","LayerSetting","children","LayerSetting_Ul","ImagePreview","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","id","uniqid","state","_this2","element","Image","onload","naturalHeight","naturalWidth","setState","context","document","getElementById","getContext","image","src","drawImage","_this$props$style","objectWithoutProperties","_this$state","objectSpread","transform","React","Preview_templateObject","Preview","_ref$preview","preview","previews","layerList","_layer$style","_layer$style$color","color","a","b","g","r","fontFamily","fontSize","lineHeight","split","forEach","push","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","TextLayerStyles_templateObject","TextLayerStyles","fonts","fontWeight","onChangeColor","onChangeFontFamily","TextLayerStyles_Dl","react_color_lib","react_select_esm","options","_ref2","label","Dropzone_templateObject","Dropzone","onDrop","Dropzone_Div","es","accept","getRootProps","getInputProps","isDragActive","assign","pages_templateObject","Pages","rootEl","isShowPortal","request","XMLHttpRequest","open","responseType","response","target","reader","FileReader","result","JSON","parse","WebFont","custom","families","_ref3","urls","readAsText","send","prevLayers","_ref4","length","_this$props","addImageLayers","changeColor","changeFontFamily","changePreviewValue","styles","undefined","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","domtoimage","toBlob","then","blob","saveAs","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","disabled","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","ReactDOM","templates_Dropzone","connect","_ref10","_ref10$layer","dispatch","acceptedFiles","acceptedFile","URL","createObjectURL","_ref5","rgb","_ref6","_ref6$currentTarget","currentTarget","checked","_ref7","_ref7$currentTarget","_ref8","_ref9","dataset","parseInt","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","parseFloat","tmpLayer","splice","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","pages","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5abe1304.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\r\n\r\nexport default setFonts;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\r\n\r\nexport default addImageLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\r\n\r\nexport default addTextLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeStyle = actionCreator<{ name: string; value: any }>(\r\n  'LAYER.CHANGE_STYLE'\r\n);\r\n\r\nexport default changeStyle;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\r\n\r\nexport default changeValue;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\r\n\r\nexport default downLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\r\n\r\nexport default removeLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\r\n\r\nexport default selectLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst upLayer = actionCreator('LAYER.UP_LAYER');\r\n\r\nexport default upLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ name: string; value: boolean | string }>(\r\n  'PREVIEW.CHANGE_VALUE'\r\n);\r\n\r\nexport default changeValue;\r\n","import * as React from 'react';\r\nimport { TiArrowUpOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowUpOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\r\n  props: ArrowUpOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowUpOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowUpOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiArrowDownOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowDownOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\r\n  props: ArrowDownOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowDownOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowDownOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentAddButtonProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\r\n  props: DocumentAddButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentAdd className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentAddButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentDelete } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentDeleteButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\r\n  props: DocumentDeleteButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentDelete className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentDeleteButton;\r\n","import * as React from 'react';\r\nimport { TiImage } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ImageButtonProps {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\r\n  <Button {...props}>\r\n    <TiImage className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ImageButton;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  background-color: #fff;\r\n  border: 1px #ddd solid;\r\n\r\n  &[type='checkbox'] {\r\n    height: 15px;\r\n    width: 15px;\r\n\r\n    &:checked {\r\n      background-color: #bbb;\r\n    }\r\n  }\r\n\r\n  &[type='number'] {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport interface InputProps {\r\n  defaultChecked?: boolean;\r\n  className?: string;\r\n  max?: number;\r\n  min?: number;\r\n  name: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  step?: number;\r\n  type: string;\r\n  value?: number | string;\r\n}\r\n\r\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\r\n  <StyledInput {...props} />\r\n);\r\n\r\nexport default Input;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.ul`\r\n  dt:not(:first-child) {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n\r\n    .input {\r\n      width: 75px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ImageLayerStylesProps {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n  scale: number;\r\n}\r\n\r\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\r\n  onChange,\r\n  opacity,\r\n  rotate,\r\n  scale\r\n}: ImageLayerStylesProps) => (\r\n  <Dl>\r\n    <dt>opacity</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={1}\r\n        min={0}\r\n        name=\"opacity\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={opacity}\r\n      />\r\n    </dd>\r\n    <dt>rotate</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name=\"rotate\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={rotate}\r\n      />\r\n      deg\r\n    </dd>\r\n    <dt>scale</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"scale\"\r\n        onChange={onChange}\r\n        step={0.01}\r\n        type=\"number\"\r\n        value={scale}\r\n      />\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default ImageLayerStyles;\r\n","import Input, { InputProps } from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  display: flex;\r\n\r\n  dl {\r\n    align-items: center;\r\n    display: flex;\r\n\r\n    dt:not(:first-child) {\r\n      margin-left: 10px;\r\n    }\r\n\r\n    dd {\r\n      align-items: center;\r\n      display: flex;\r\n      margin-left: 5px;\r\n\r\n      .input {\r\n        width: 75px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface InformationProps {\r\n  height: number;\r\n  onChange: InputProps['onChange'];\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst Information: React.SFC<InformationProps> = ({\r\n  height,\r\n  onChange,\r\n  overflow,\r\n  scale,\r\n  width\r\n}: InformationProps) => (\r\n  <Div>\r\n    <dl>\r\n      <dt>width</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={0}\r\n          name=\"width\"\r\n          onChange={onChange}\r\n          type=\"number\"\r\n          value={width}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>height</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={0}\r\n          name=\"height\"\r\n          onChange={onChange}\r\n          type=\"number\"\r\n          value={height}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>scale</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={0}\r\n          name=\"scale\"\r\n          onChange={onChange}\r\n          step={0.1}\r\n          type=\"number\"\r\n          value={scale}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>overflow</dt>\r\n      <dd>\r\n        <Input\r\n          defaultChecked={overflow}\r\n          name=\"overflow\"\r\n          onChange={onChange}\r\n          type=\"checkbox\"\r\n        />\r\n      </dd>\r\n    </dl>\r\n  </Div>\r\n);\r\n\r\nexport default Information;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  margin-bottom: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    border: 1px solid #ddd;\r\n    padding: 2.5px;\r\n\r\n    &.select {\r\n      border: solid red 1px;\r\n    }\r\n\r\n    textarea {\r\n      border: 1px solid #ddd;\r\n      height: 50px;\r\n      min-height: 50px;\r\n      overflow-y: scroll;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n\r\n    .image {\r\n      background-position: center;\r\n      background-size: cover;\r\n      height: 50px;\r\n      overflow: hidden;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ImageLayer {\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  value: string;\r\n}\r\n\r\nexport interface LayersProps {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst Layers: React.SFC<LayersProps> = ({\r\n  index,\r\n  layers,\r\n  onChange,\r\n  onClick,\r\n  onFocus\r\n}: LayersProps) => (\r\n  <Ul>\r\n    {layers\r\n      .map((layer, layerIndex) => {\r\n        let v = <React.Fragment />;\r\n\r\n        if ('value' in layer) {\r\n          const { value } = layer;\r\n\r\n          v = (\r\n            <textarea\r\n              data-index={layerIndex}\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              value={value}\r\n            />\r\n          );\r\n        } else if ('url' in layer) {\r\n          const { url } = layer;\r\n\r\n          v = (\r\n            <div\r\n              className=\"image\"\r\n              data-index={layerIndex}\r\n              onClick={onClick}\r\n              style={{ backgroundImage: `url(${url})` }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return (\r\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\r\n            {v}\r\n          </li>\r\n        );\r\n      })\r\n      .reverse()}\r\n  </Ul>\r\n);\r\n\r\nexport default Layers;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  background-color: #bbb;\r\n  display: grid;\r\n  grid-auto-rows: 25px;\r\n  grid-gap: 5px;\r\n  grid-template-columns: repeat(auto-fill, 25px);\r\n  padding: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    button {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      .icon {\r\n        color: white;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LayerSettingProps {\r\n  children: React.ReactNodeArray;\r\n}\r\n\r\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\r\n  children\r\n}: LayerSettingProps) => (\r\n  <Ul>\r\n    {children.map((value, index) => (\r\n      <li key={index}>{value}</li>\r\n    ))}\r\n  </Ul>\r\n);\r\n\r\nexport default LayerSetting;\r\n","import * as React from 'react';\r\nimport * as uniqid from 'uniqid';\r\n\r\nexport interface ImagePreviewProps {\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface ImagePreviewState {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nclass ImagePreview extends React.Component<\r\n  ImagePreviewProps,\r\n  ImagePreviewState\r\n> {\r\n  id: string;\r\n\r\n  constructor(props: ImagePreviewProps) {\r\n    super(props);\r\n\r\n    this.id = uniqid();\r\n    this.state = {\r\n      height: 0,\r\n      width: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { url } = this.props;\r\n    const element = new Image();\r\n\r\n    element.onload = () => {\r\n      const { naturalHeight: height, naturalWidth: width } = element;\r\n\r\n      this.setState(\r\n        {\r\n          height,\r\n          width\r\n        },\r\n        () => {\r\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\r\n          const context = canvas.getContext('2d');\r\n          const image = new Image();\r\n\r\n          image.src = url;\r\n          image.onload = () => {\r\n            context!.drawImage(image, 0, 0, width, height);\r\n          };\r\n        }\r\n      );\r\n    };\r\n    element.src = url;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style: { rotate, scale, ...style }\r\n    } = this.props;\r\n    const { height, width } = this.state;\r\n\r\n    return (\r\n      <canvas\r\n        height={height}\r\n        id={this.id}\r\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\r\n        width={width}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import ImagePreview, {\r\n  ImagePreviewProps\r\n} from 'components/molecules/ImagePreview';\r\nimport * as React from 'react';\r\nimport ReactScalableDraggable from 'react-scalable-draggable';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #bbb;\r\n  height: 100%;\r\n  overflow: scroll;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  .wrapper {\r\n    box-sizing: content-box;\r\n    left: 0;\r\n    padding: 50px;\r\n    position: absolute;\r\n    top: 0;\r\n    transform-origin: top left;\r\n\r\n    #test {\r\n      height: inherit;\r\n      width: inherit;\r\n\r\n      .screen {\r\n        background-color: white;\r\n        height: inherit;\r\n        position: relative;\r\n        width: inherit;\r\n\r\n        .draggable {\r\n          cursor: move;\r\n          position: absolute;\r\n          word-break: keep-all;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface TextLayer {\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    rotate: number;\r\n  };\r\n  value: string;\r\n}\r\n\r\nexport interface PreviewProps {\r\n  layers: (ImagePreviewProps | TextLayer)[];\r\n  preview: {\r\n    height: number;\r\n    overflow: boolean;\r\n    scale: number;\r\n    width: number;\r\n  };\r\n}\r\n\r\nconst Preview: React.SFC<PreviewProps> = ({\r\n  layers,\r\n  preview: { height, overflow, scale, width }\r\n}) => {\r\n  const previews = layers.map((layer, index) => {\r\n    const layerList = [];\r\n\r\n    if ('value' in layer) {\r\n      const {\r\n        style: {\r\n          color: { a, b, g, r },\r\n          fontFamily: { value: fontFamily },\r\n          fontSize,\r\n          lineHeight,\r\n          rotate,\r\n          ...style\r\n        },\r\n        value\r\n      } = layer;\r\n\r\n      value.split(/\\r\\n|\\r|\\n/).forEach((v, index) => {\r\n        layerList.push(\r\n          <div\r\n            key={index}\r\n            style={{\r\n              fontFamily,\r\n              color: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n              fontSize: `${fontSize}px`,\r\n              height: `${lineHeight}px`,\r\n              lineHeight: `${lineHeight}px`,\r\n              transform: `rotate(${rotate}deg)`,\r\n              ...style\r\n            }}\r\n          >\r\n            {v}\r\n          </div>\r\n        );\r\n      });\r\n    } else if ('url' in layer) {\r\n      const { style, url } = layer;\r\n\r\n      layerList.push(<ImagePreview key={url} style={style} url={url} />);\r\n    }\r\n\r\n    return (\r\n      <ReactScalableDraggable\r\n        className=\"draggable\"\r\n        key={index}\r\n        parentScale={scale}\r\n      >\r\n        {layerList}\r\n      </ReactScalableDraggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Div id=\"preview\">\r\n      <div\r\n        className=\"wrapper\"\r\n        style={{\r\n          height: `${height}px`,\r\n          transform: `scale(${scale})`,\r\n          width: `${width}px`\r\n        }}\r\n      >\r\n        <div id=\"test\">\r\n          <div\r\n            className=\"screen\"\r\n            style={{ overflow: overflow ? 'visible' : 'hidden' }}\r\n          >\r\n            {previews}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport { ChromePicker, ColorResult } from 'react-color';\r\nimport Select from 'react-select';\r\nimport { Props } from 'react-select/lib/Select';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.ul`\r\n  dt:not(:first-child) {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n\r\n    .select {\r\n      width: 200px;\r\n    }\r\n\r\n    .input {\r\n      width: 75px;\r\n    }\r\n\r\n    .picker .chrome-picker {\r\n      background-color: #fff;\r\n      border: 1px #ddd solid;\r\n      border-radius: 0 !important;\r\n      box-shadow: none !important;\r\n      font-family: inherit !important;\r\n\r\n      > div {\r\n        border-radius: 0 !important;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface TextLayerStylesProps {\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  fontFamily: {\r\n    label: string;\r\n    value: string;\r\n  };\r\n  fonts: Font[];\r\n  fontSize: number;\r\n  fontWeight: number;\r\n  lineHeight: number;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeColor: (color: ColorResult) => void;\r\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n}\r\n\r\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\r\n  color,\r\n  fontFamily,\r\n  fonts,\r\n  fontSize,\r\n  fontWeight,\r\n  lineHeight,\r\n  onChange,\r\n  onChangeColor,\r\n  onChangeFontFamily,\r\n  opacity,\r\n  rotate\r\n}: TextLayerStylesProps) => (\r\n  <Dl>\r\n    <dt>color</dt>\r\n    <dd>\r\n      <div className=\"picker\">\r\n        <ChromePicker color={color} onChange={onChangeColor} />\r\n      </div>\r\n    </dd>\r\n    <dt>font-family</dt>\r\n    <dd>\r\n      <Select\r\n        className=\"select\"\r\n        onChange={onChangeFontFamily}\r\n        options={fonts.map(({ fontFamily: value, name: label }) => ({\r\n          label,\r\n          value\r\n        }))}\r\n        value={fontFamily}\r\n      />\r\n    </dd>\r\n    <dt>font-size</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"fontSize\"\r\n        onChange={onChange}\r\n        type=\"number\"\r\n        value={fontSize}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>font-weight</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={900}\r\n        min={100}\r\n        name=\"fontWeight\"\r\n        onChange={onChange}\r\n        step={100}\r\n        type=\"number\"\r\n        value={fontWeight}\r\n      />\r\n    </dd>\r\n    <dt>line-height</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name=\"lineHeight\"\r\n        onChange={onChange}\r\n        type=\"number\"\r\n        value={lineHeight}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>opacity</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        max={1}\r\n        min={0}\r\n        name=\"opacity\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={opacity}\r\n      />\r\n    </dd>\r\n    <dt>rotate</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name=\"rotate\"\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={rotate}\r\n      />\r\n      deg\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default TextLayerStyles;\r\n","import * as React from 'react';\r\nimport ReactDropzone, {\r\n  DropzoneProps as ReactDropzoneProps\r\n} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  height: 100%;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .wrapper {\r\n    align-items: center;\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: center;\r\n    width: 100%;\r\n\r\n    img {\r\n      height: calc(231px / 3);\r\n      opacity: 0.75;\r\n      width: calc(289px / 3);\r\n    }\r\n\r\n    p {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DropzoneProps {\r\n  onDrop: ReactDropzoneProps['onDrop'];\r\n}\r\n\r\nconst Dropzone: React.SFC<DropzoneProps> = ({ onDrop }: DropzoneProps) => (\r\n  <Div>\r\n    <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\r\n      {({ getRootProps, getInputProps, isDragActive }) => (\r\n        <div {...getRootProps()} className=\"wrapper\">\r\n          <input {...getInputProps()} />\r\n          <img src=\"/images/dd.png\" />\r\n          <p>\r\n            {isDragActive\r\n              ? 'Drop files here...'\r\n              : 'Try dropping some image files here, or click to select files to upload.'}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </ReactDropzone>\r\n  </Div>\r\n);\r\n\r\nexport default Dropzone;\r\n","import setFonts from 'actions/fonts/setFonts';\r\nimport addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\r\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\r\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\r\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\r\nimport ImageButton from 'components/atoms/ImageButton';\r\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\r\nimport Information, {\r\n  InformationProps\r\n} from 'components/organisms/Information';\r\nimport Layers, { LayersProps } from 'components/organisms/Layers';\r\nimport LayerSetting from 'components/organisms/LayerSetting';\r\nimport Preview from 'components/organisms/Preview';\r\nimport TextLayerStyles, {\r\n  TextLayerStylesProps\r\n} from 'components/organisms/TextLayerStyles';\r\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\r\nimport domtoimage from 'dom-to-image';\r\nimport { saveAs } from 'file-saver';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { State } from 'reducers';\r\nimport { Dispatch } from 'redux';\r\nimport styled from 'styled-components';\r\nimport * as WebFont from 'webfontloader';\r\n\r\nconst Div = styled.div`\r\n  background-color: #fbfbfb;\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 275px 1fr 200px;\r\n  grid-template-rows: 25px 1fr;\r\n\r\n  .header {\r\n    border-bottom: 1px #ddd inset;\r\n    grid-column: 1 / 4;\r\n  }\r\n\r\n  .detail {\r\n    overflow-y: scroll;\r\n    padding: 5px;\r\n  }\r\n\r\n  .preview {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-rows: 1fr 20px;\r\n    padding: 5px;\r\n  }\r\n\r\n  .side-layers {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .layers {\r\n      flex-basis: 0;\r\n      flex-grow: 1;\r\n      overflow-y: scroll;\r\n      padding: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PagesProps\r\n  extends ReturnType<typeof mapDispatchToProps>,\r\n    ReturnType<typeof mapStateToProps> {}\r\n\r\ninterface PagesState {\r\n  isShowPortal: boolean;\r\n}\r\n\r\nclass Pages extends React.Component<PagesProps, PagesState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: PagesProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      isShowPortal: false\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFonts } = this.props;\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open('GET', '/jsons/fonts.json', true);\r\n    request.responseType = 'blob';\r\n    request.onload = ({ target: { response } }: any) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = ({ target: { result } }: any) => {\r\n        const fonts: Font[] = JSON.parse(result);\r\n\r\n        setFonts(fonts);\r\n\r\n        WebFont.load({\r\n          custom: {\r\n            families: fonts.map(({ fontFamily }) => fontFamily),\r\n            urls: ['/css/fonts.css']\r\n          }\r\n        });\r\n      };\r\n      reader.readAsText(response);\r\n    };\r\n    request.send();\r\n  }\r\n\r\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\r\n    const { layers } = this.props;\r\n\r\n    if (prevLayers.length !== layers.length) {\r\n      this.setState({\r\n        isShowPortal: false\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addImageLayers,\r\n      addTextLayer,\r\n      changeColor,\r\n      changeFontFamily,\r\n      changePreviewValue,\r\n      changeStyle,\r\n      changeValue,\r\n      downLayer,\r\n      fonts,\r\n      index,\r\n      layers,\r\n      preview,\r\n      removeLayer,\r\n      selectLayer,\r\n      upLayer\r\n    } = this.props;\r\n    const { isShowPortal } = this.state;\r\n\r\n    let styles = <React.Fragment />;\r\n\r\n    if (index !== undefined) {\r\n      const layer = layers[index];\r\n\r\n      if ('value' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = (\r\n          <TextLayerStyles\r\n            {...style}\r\n            fonts={fonts}\r\n            onChange={changeStyle}\r\n            onChangeColor={changeColor}\r\n            onChangeFontFamily={changeFontFamily}\r\n          />\r\n        );\r\n      } else if ('url' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Div>\r\n        <header className=\"header\">\r\n          <button\r\n            onClick={() => {\r\n              domtoimage.toBlob(document.getElementById('test')!).then(blob => {\r\n                saveAs(blob, 'test.png');\r\n              });\r\n            }}\r\n          >\r\n            save\r\n          </button>\r\n        </header>\r\n        <aside className=\"detail\">{styles}</aside>\r\n        <div className=\"preview\">\r\n          <Preview layers={layers} preview={preview} />\r\n          <Information {...preview} onChange={changePreviewValue} />\r\n        </div>\r\n        <aside className=\"side-layers\">\r\n          <LayerSetting>\r\n            {[\r\n              <DocumentAddButton key=\"add\" onClick={addTextLayer} />,\r\n              <DocumentDeleteButton\r\n                disabled={index === undefined}\r\n                key=\"delete\"\r\n                onClick={removeLayer}\r\n              />,\r\n              <ImageButton\r\n                key=\"image\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    isShowPortal: true\r\n                  });\r\n                }}\r\n              />,\r\n              <ArrowUpOutlineButton\r\n                disabled={index === undefined || index === layers.length - 1}\r\n                key=\"up\"\r\n                onClick={upLayer}\r\n              />,\r\n              <ArrowDownOutlineButton\r\n                disabled={!index}\r\n                key=\"down\"\r\n                onClick={downLayer}\r\n              />\r\n            ]}\r\n          </LayerSetting>\r\n          <div className=\"layers\">\r\n            <Layers\r\n              index={index}\r\n              layers={layers}\r\n              onChange={changeValue}\r\n              onClick={selectLayer}\r\n              onFocus={selectLayer}\r\n            />\r\n          </div>\r\n        </aside>\r\n        {isShowPortal\r\n          ? ReactDOM.createPortal(\r\n              <Dropzone onDrop={addImageLayers} />,\r\n              this.rootEl\r\n            )\r\n          : ''}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  addImageLayers: (\r\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\r\n  ) => {\r\n    acceptedFiles.forEach(acceptedFile => {\r\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\r\n    });\r\n  },\r\n  addTextLayer: () => dispatch(addTextLayer()),\r\n  changeColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changeStyle({ value, name: 'color' })),\r\n  changeFontFamily: (\r\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\r\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\r\n  changePreviewValue: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeStyle: ({\r\n    currentTarget: { name, value }\r\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\r\n    dispatch(changeStyle({ name, value })),\r\n  changeValue: ({\r\n    target: { value }\r\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n    dispatch(changeValue({ value })),\r\n  downLayer: () => dispatch(downLayer()),\r\n  removeLayer: () => dispatch(removeLayer()),\r\n  selectLayer: ({\r\n    currentTarget: { dataset }\r\n  }:\r\n    | ArgumentTypes<LayersProps['onClick']>[0]\r\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\r\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\r\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\r\n  upLayer: () => dispatch(upLayer())\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  fonts: { fonts },\r\n  layer: { index, layers },\r\n  preview\r\n}: State) => ({\r\n  fonts,\r\n  index,\r\n  layers,\r\n  preview\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pages);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface FontsState {\r\n  fonts: Font[];\r\n}\r\n\r\nconst initialState: FontsState = {\r\n  fonts: []\r\n};\r\n\r\nconst fonts = reducerWithInitialState(initialState).case(\r\n  setFonts,\r\n  (state, { fonts }) => ({ ...state, fonts })\r\n);\r\n\r\nexport default fonts;\r\n","import addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\ninterface ImageLayer {\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontWeight: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n  };\r\n  value: string;\r\n}\r\n\r\nexport interface LayerState {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n}\r\n\r\nconst initialState: LayerState = {\r\n  index: undefined,\r\n  layers: []\r\n};\r\n\r\nconst layer = reducerWithInitialState(initialState)\r\n  .case(addImageLayer, (state, { url }) => {\r\n    const { layers: oldLayers } = state;\r\n    const layers = oldLayers.slice();\r\n\r\n    layers.push({\r\n      url,\r\n      style: {\r\n        opacity: 1,\r\n        rotate: 0,\r\n        scale: 1\r\n      }\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(addTextLayer, state => {\r\n    const { layers: oldLayers } = state;\r\n    const layers = oldLayers.slice();\r\n\r\n    layers.push({\r\n      style: {\r\n        color: {\r\n          a: 1,\r\n          b: 0,\r\n          g: 0,\r\n          r: 0\r\n        },\r\n        fontFamily: {\r\n          label: '機械彫刻用標準書体 M',\r\n          value: 'KikaiChokokuJIS-Md'\r\n        },\r\n        fontSize: 16,\r\n        fontWeight: 400,\r\n        lineHeight: 16,\r\n        opacity: 1,\r\n        rotate: 0\r\n      },\r\n      value: ''\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeStyle, (state, { name, value }) => {\r\n    const { index, layers: oldLayers } = state;\r\n    const layers = oldLayers.slice();\r\n\r\n    if (name === 'fontSize' || name === 'fontWeight' || name === 'lineHeight') {\r\n      layers[index].style[name] = parseInt(value, 10);\r\n    } else if (name === 'opacity' || name === 'rotate' || name === 'scale') {\r\n      layers[index].style[name] = parseFloat(value);\r\n    } else {\r\n      layers[index].style[name] = value;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeValue, (state, { value }) => {\r\n    const { index, layers: oldLayers } = state;\r\n    const layers = oldLayers.slice();\r\n    const layer = layers[index];\r\n\r\n    if ('value' in layer) {\r\n      layer.value = value;\r\n\r\n      layers[index] = layer;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(downLayer, state => {\r\n    const { index, layers: oldLayers } = state;\r\n    const layers = oldLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index - 1];\r\n    layers[index - 1] = tmpLayer;\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(removeLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n\r\n    if (index === undefined) {\r\n      return state;\r\n    }\r\n\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.splice(index, 1);\r\n\r\n    return {\r\n      layers,\r\n      index: undefined\r\n    };\r\n  })\r\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\r\n  .case(upLayer, state => {\r\n    const { index, layers: oldLayers } = state;\r\n    const layers = oldLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index + 1];\r\n    layers[index + 1] = tmpLayer;\r\n\r\n    return { ...state, layers };\r\n  });\r\n\r\nexport default layer;\r\n","import changeValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface PreviewState {\r\n  height: number;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst initialState: PreviewState = {\r\n  height: 300,\r\n  overflow: true,\r\n  scale: 1,\r\n  width: 400\r\n};\r\n\r\nconst preview = reducerWithInitialState(initialState).case(\r\n  changeValue,\r\n  (state, { name, value: newValue }) => {\r\n    let value;\r\n\r\n    if (name === 'height' || name === 'width') {\r\n      value = parseInt(newValue as string, 10);\r\n    } else if (name === 'scale') {\r\n      value = parseFloat(newValue as string);\r\n    } else {\r\n      value = newValue;\r\n    }\r\n\r\n    return { ...state, ...{ [name]: value } };\r\n  }\r\n);\r\n\r\nexport default preview;\r\n","import { combineReducers } from 'redux';\r\nimport fonts, { FontsState } from './fonts';\r\nimport layer, { LayerState } from './layer';\r\nimport preview, { PreviewState } from './preview';\r\n\r\nexport interface State {\r\n  fonts: FontsState;\r\n  layer: LayerState;\r\n  preview: PreviewState;\r\n}\r\n\r\nconst reducers = () => combineReducers({ fonts, layer, preview });\r\n\r\nexport default reducers;\r\n","import Pages from 'containers/pages';\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport 'ress';\nimport { createGlobalStyle } from 'styled-components';\nimport * as serviceWorker from './serviceWorker';\nimport reducers from './reducers';\n\nconst store = createStore(reducers());\n\nconst GlobalStyle = createGlobalStyle`\n  html {\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\n    font-size: 62.5%;\n    -moz-osx-font-smoothing: grayscale;\n    -webkit-font-smoothing: antialiased;\n    font-style: normal;\n    font-weight: 400;\n    height: 100%;\n    line-height: 1.2;\n    overflow: hidden !important;\n    -webkit-overflow-scrolling: touch;\n    width: 100%;\n  \n    body {\n      font-size: 1.4rem;\n      height: 100%;\n      width: 100%;\n    \n      #root {\n        height: 100%;\n        width: 100%;\n\n        * {\n          appearance: none;\n          \n          &:focus {\n            outline: none;\n          }\n        }\n  \n        a {\n          line-height: 0;\n        }\n\n        ul {\n          list-style: none;\n        }\n      }\n    }\n  }\n`;\n\nReactDOM.render(\n  <Provider store={store}>\n    <Pages />\n    <GlobalStyle />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}