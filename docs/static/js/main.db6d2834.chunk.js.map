{"version":3,"sources":["actions/fonts/setFonts/index.ts","actions/layer/addImageLayer/index.ts","actions/layer/addTextLayer/index.ts","actions/layer/addTextShadow/index.ts","actions/layer/changeStyle/index.ts","actions/layer/changeValue/index.ts","actions/layer/downLayer/index.ts","actions/layer/removeLayer/index.ts","actions/layer/removeTextShadow/index.ts","actions/layer/selectLayer/index.ts","actions/layer/upLayer/index.ts","actions/preview/changeValue/index.ts","components/atoms/ArrowDownOutlineButton/index.tsx","components/atoms/ArrowUpOutlineButton/index.tsx","components/atoms/DocumentAddButton/index.tsx","components/atoms/DocumentDeleteButton/index.tsx","components/atoms/ImageButton/index.tsx","components/atoms/ReactHelmet/index.tsx","components/atoms/Input/index.tsx","components/molecules/LayerStyles/index.tsx","components/organisms/ImageLayerStyles/index.tsx","components/atoms/ChromePicker/index.tsx","components/organisms/Information/index.tsx","components/organisms/Layers/index.tsx","components/organisms/LayerSetting/index.tsx","components/atoms/DownloadButton/index.tsx","components/atoms/CloseButton/index.tsx","components/templates/Portal/index.tsx","components/templates/Image/index.tsx","components/atoms/DocumentButton/index.tsx","components/templates/New/index.tsx","components/templates/Loading/index.tsx","components/organisms/Menu/index.tsx","components/molecules/ImagePreview/index.tsx","components/molecules/TextPreview/index.tsx","components/organisms/Preview/index.tsx","components/atoms/MinusButton/index.tsx","components/atoms/PlusButton/index.tsx","components/molecules/TextShadow/index.tsx","components/organisms/TextLayerStyles/index.tsx","components/templates/Dropzone/index.tsx","components/templates/Logo/index.tsx","containers/pages/index.tsx","serviceWorker.js","reducers/fonts/index.ts","reducers/layer/index.ts","reducers/preview/index.ts","reducers/index.ts","index.tsx"],"names":["setFonts","actionCreatorFactory","actionCreator","addImageLayer","addTextLayer","addTextShadow","changeStyle","changeValue","downLayer","removeLayer","removeTextShadow","selectLayer","upLayer","Button","styled","button","_templateObject","ArrowUpOutlineButton","props","react","ti","className","ArrowUpOutlineButton_templateObject","ArrowDownOutlineButton","ArrowUpOutlineButton_Button","DocumentAddButton_templateObject","DocumentAddButton","DocumentAddButton_Button","DocumentDeleteButton_templateObject","DocumentDeleteButton","DocumentDeleteButton_Button","ImageButton_templateObject","ImageButton","ImageButton_Button","ReactHelmet","_ref","fileName","this","Helmet","concat","React","StyledInput","input","Input_templateObject","Input","Dl","dl","LayerStyles_templateObject","LayerStyles","children","map","_ref2","index","name","node","key","StyledLayerStyles","ImageLayerStyles_templateObject","ImageLayerStyles","onChange","opacity","rotate","scale","atoms_Input","max","min","step","type","value","Div","div","ChromePicker_templateObject","ChromePicker","Object","objectWithoutProperties","react_color_lib","Information_templateObject","Information","backgroundColor","gridSize","height","isInitialize","onChangeBackgroundColor","overflow","width","a","b","g","r","Information_Dl","style","atoms_ChromePicker","color","defaultChecked","Ul","ul","Layers_templateObject","Layers","layers","onClick","onFocus","layer","layerIndex","v","data-index","url","backgroundImage","reverse","LayerSetting_templateObject","LayerSetting","LayerSetting_Ul","DownloadButton_templateObject","DownloadButton","DownloadButton_Button","CloseButton_templateObject","CloseButton","CloseButton_Button","Portal_templateObject","Portal","$","css","_this$props","onClickCloseButton","Portal_Div","atoms_CloseButton","StyledPortal","Image_templateObject","Image","extension","src","atoms_DownloadButton","saveAs","DocumentButton_templateObject","DocumentButton","DocumentButton_Button","New_templateObject","New","changePreviewIsInitialize","onChangePreviewBackgroundColor","onChangePreviewValue","New_StyledPortal","atoms_DocumentButton","disabled","e","Loading_templateObject","Loading","Loading_StyledPortal","react_spinners","Menu_templateObject","Menu","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","rootEl","document","getElementById","state","undefined","imageUrl","isNew","isShowLoading","_this2","prevOverflow","changePreviewOverflow","_this$state","callback","setState","domtoimage","toJpeg","then","toPng","toSvg","_this3","_this$state2","Menu_Ul","href","target","ReactDOM","templates_Image","templates_New","assign","templates_Loading","ImagePreview","id","uniqid","element","onload","naturalHeight","naturalWidth","context","getContext","image","drawImage","_this$props$style","objectSpread","transform","TextPreview_templateObject","fontFamily","process","_ref3","_ref4","TextPreview","_ref5","_ref5$style","_ref5$style$color","fontSize","fontStyle","fontWeight","letterSpacing","lineHeight","textShadows","TextPreview_Div","textShadow","_ref6","blurRadius","_ref6$color","textShadowA","textShadowB","textShadowG","textShadowR","hShadow","vShadow","join","split","Preview_templateObject","Preview","_ref$preview","preview","_ref$preview$backgrou","previews","molecules_TextPreview","molecules_ImagePreview","react_scalable_draggable_lib_default","parentScale","Preview_Div","backgroundSize","MinusButton_templateObject","MinusButton","MinusButton_Button","PlusButton_templateObject","PlusButton","PlusButton_Button","TextShadow_templateObject","TextShadow","onChangeTextShadowColor","TextShadow_Dl","TextLayerStyles_templateObject","TextLayerStyles","fonts","onChangeColor","onChangeFontFamily","onClickAddTextShadow","onClickRemoveTextShadow","options","label","findIndex","font","JSON","stringify","TextLayerStyles_StyledLayerStyles","react_select_esm","atoms_PlusButton","atoms_MinusButton","toString","molecules_TextShadow","Dropzone_templateObject","Dropzone","onDrop","Dropzone_StyledPortal","es","accept","getRootProps","getInputProps","isDragActive","Logo_templateObject","Logo","loading","Logo_StyledPortal","pages_templateObject","Pages","isShowDropzone","isShowLogo","request","XMLHttpRequest","open","responseType","response","reader","FileReader","result","parse","counter","WebFont","active","setTimeout","classes","custom","families","fontactive","familyName","fvd","Math","floor","length","fontinactive","inactive","readAsText","send","prevLayers","addImageLayers","changeColor","changeFontFamily","changePreviewBackgroundColor","changePreviewValue","styles","organisms_TextLayerStyles","organisms_ImageLayerStyles","pages_Div","atoms_ReactHelmet","organisms_Menu","organisms_Preview","organisms_Information","organisms_LayerSetting","atoms_DocumentAddButton","atoms_DocumentDeleteButton","atoms_ImageButton","atoms_ArrowDownOutlineButton","atoms_ArrowUpOutlineButton","organisms_Layers","templates_Dropzone","templates_Logo","connect","_ref12","_ref12$layer","dispatch","acceptedFiles","forEach","acceptedFile","URL","createObjectURL","rgb","_ref7","_ref7$currentTarget","currentTarget","checked","_ref8","_ref8$currentTarget","_ref9","_ref10","parseInt","_ref11","dataset","Boolean","window","location","hostname","match","reducerWithInitialState","case","initialState","slice","push","indexOf","_name$split","_name$split2","slicedToArray","first","secondName","_first$match","_first$match2","firstName","index2","parseFloat","tmpLayer","prevIndex","splice","textShadowIndex","newValue","defineProperty","reducers","combineReducers","store","createStore","GlobalStyle","createGlobalStyle","src_templateObject","react_redux_es","BrowserRouter","basename","Switch","Route","component","exact","path","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.db6d2834.chunk.js","sourcesContent":["import actionCreatorFactory from 'typescript-fsa';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst setFonts = actionCreator<{ fonts: Font[] }>('FONTS.SET_FONTS');\r\n\r\nexport default setFonts;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addImageLayer = actionCreator<{ url: string }>('LAYER.ADD_IMAGE_LAYER');\r\n\r\nexport default addImageLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextLayer = actionCreator('LAYER.ADD_TEXT_LAYER');\r\n\r\nexport default addTextLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst addTextShadow = actionCreator('LAYER.ADD_TEXT_SHADOW');\r\n\r\nexport default addTextShadow;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeStyle = actionCreator<{ name: string; value: any }>(\r\n  'LAYER.CHANGE_STYLE'\r\n);\r\n\r\nexport default changeStyle;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ value: string }>('LAYER.CHANGE_VALUE');\r\n\r\nexport default changeValue;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst downLayer = actionCreator('LAYER.DOWN_LAYER');\r\n\r\nexport default downLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeLayer = actionCreator('LAYER.REMOVE_LAYER');\r\n\r\nexport default removeLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst removeTextShadow = actionCreator<{ index: number }>(\r\n  'LAYER.REMOVE_TEXT_SHADOW'\r\n);\r\n\r\nexport default removeTextShadow;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst selectLayer = actionCreator<{ index: number }>('LAYER.SELECT_LAYER');\r\n\r\nexport default selectLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst upLayer = actionCreator('LAYER.UP_LAYER');\r\n\r\nexport default upLayer;\r\n","import actionCreatorFactory from 'typescript-fsa';\r\n\r\nconst actionCreator = actionCreatorFactory();\r\nconst changeValue = actionCreator<{ name: string; value: any }>(\r\n  'PREVIEW.CHANGE_VALUE'\r\n);\r\n\r\nexport default changeValue;\r\n","import * as React from 'react';\r\nimport { TiArrowUpOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowUpOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowUpOutlineButton: React.SFC<ArrowUpOutlineButtonProps> = (\r\n  props: ArrowUpOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowUpOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowUpOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiArrowDownOutline } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ArrowDownOutlineButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ArrowDownOutlineButton: React.SFC<ArrowDownOutlineButtonProps> = (\r\n  props: ArrowDownOutlineButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiArrowDownOutline className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ArrowDownOutlineButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentAdd } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentAddButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentAddButton: React.SFC<DocumentAddButtonProps> = (\r\n  props: DocumentAddButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentAdd className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentAddButton;\r\n","import * as React from 'react';\r\nimport { TiDocumentDelete } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentDeleteButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentDeleteButton: React.SFC<DocumentDeleteButtonProps> = (\r\n  props: DocumentDeleteButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocumentDelete className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentDeleteButton;\r\n","import * as React from 'react';\r\nimport { TiImage } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: white;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface ImageButtonProps {\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst ImageButton: React.SFC<ImageButtonProps> = (props: ImageButtonProps) => (\r\n  <Button {...props}>\r\n    <TiImage className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default ImageButton;\r\n","import * as React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nexport interface ReactHelmetProps {\r\n  fileName: string;\r\n}\r\n\r\nclass ReactHelmet extends React.Component<ReactHelmetProps> {\r\n  shouldComponentUpdate({ fileName: nextFileName }) {\r\n    const { fileName } = this.props;\r\n\r\n    return nextFileName !== fileName;\r\n  }\r\n\r\n  render() {\r\n    const { fileName } = this.props;\r\n\r\n    return (\r\n      <Helmet>\r\n        <title>{`Image Maker: ${fileName}`}</title>\r\n      </Helmet>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ReactHelmet;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledInput = styled.input`\r\n  background-color: #fff;\r\n  border: 1px #ddd solid;\r\n\r\n  &[type='checkbox'] {\r\n    height: 15px;\r\n    width: 15px;\r\n\r\n    &:checked {\r\n      background-color: #bbb;\r\n    }\r\n  }\r\n\r\n  &[type='number'] {\r\n    text-align: right;\r\n  }\r\n`;\r\n\r\nexport interface InputProps {\r\n  defaultChecked?: boolean;\r\n  className?: string;\r\n  max?: number;\r\n  min?: number;\r\n  name: string;\r\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  step?: number;\r\n  type: string;\r\n  value?: number | string;\r\n}\r\n\r\nconst Input: React.SFC<InputProps> = (props: InputProps) => (\r\n  <StyledInput {...props} />\r\n);\r\n\r\nexport default Input;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.dl`\r\n  > div {\r\n    padding: 10px 10px;\r\n\r\n    &:hover {\r\n      background-color: rgba(35, 71, 148, 0.1);\r\n    }\r\n  }\r\n\r\n  dd {\r\n    display: flex;\r\n    justify-content: flex-end;\r\n    margin-top: 5px;\r\n  }\r\n`;\r\n\r\ninterface Child {\r\n  name: React.ReactNode;\r\n  node: React.ReactNode;\r\n}\r\n\r\nexport interface LayerStylesProps {\r\n  children: Child[];\r\n  className?: string;\r\n}\r\n\r\nconst LayerStyles: React.SFC<LayerStylesProps> = ({\r\n  children,\r\n  className\r\n}: LayerStylesProps) => (\r\n  <Dl className={className}>\r\n    {children.map(({ name, node }, index) => (\r\n      <div key={index}>\r\n        <dt>{name}</dt>\r\n        <dd>{node}</dd>\r\n      </div>\r\n    ))}\r\n  </Dl>\r\n);\r\n\r\nexport default LayerStyles;\r\n","import Input from 'components/atoms/Input';\r\nimport LayerStyles from 'components/molecules/LayerStyles';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLayerStyles = styled(LayerStyles)`\r\n  .input {\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface ImageLayerStylesProps {\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  opacity: number;\r\n  rotate: number;\r\n  scale: number;\r\n}\r\n\r\nconst ImageLayerStyles: React.SFC<ImageLayerStylesProps> = ({\r\n  onChange,\r\n  opacity,\r\n  rotate,\r\n  scale\r\n}: ImageLayerStylesProps) => (\r\n  <StyledLayerStyles>\r\n    {[\r\n      {\r\n        name: 'opacity',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            max={1}\r\n            min={0}\r\n            name=\"opacity\"\r\n            onChange={onChange}\r\n            step={0.01}\r\n            type=\"number\"\r\n            value={opacity}\r\n          />\r\n        )\r\n      },\r\n      {\r\n        name: 'rotate',\r\n        node: (\r\n          <React.Fragment>\r\n            <Input\r\n              className=\"input\"\r\n              name=\"rotate\"\r\n              onChange={onChange}\r\n              step={0.1}\r\n              type=\"number\"\r\n              value={rotate}\r\n            />\r\n            deg\r\n          </React.Fragment>\r\n        )\r\n      },\r\n      {\r\n        name: 'scale',\r\n        node: (\r\n          <Input\r\n            className=\"input\"\r\n            min={0}\r\n            name=\"scale\"\r\n            onChange={onChange}\r\n            step={0.01}\r\n            type=\"number\"\r\n            value={scale}\r\n          />\r\n        )\r\n      }\r\n    ]}\r\n  </StyledLayerStyles>\r\n);\r\n\r\nexport default ImageLayerStyles;\r\n","import * as React from 'react';\r\nimport {\r\n  ChromePicker as ReactColorChromePicker,\r\n  ColorResult\r\n} from 'react-color';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  .chrome-picker {\r\n    background-color: #fff !important;\r\n    border: 1px #ddd solid !important;\r\n    border-radius: 0 !important;\r\n    box-shadow: none !important;\r\n    font-family: inherit !important;\r\n\r\n    > div {\r\n      border-radius: 0 !important;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface ChromePickerProps {\r\n  className?: string;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  onChange: (color: ColorResult) => void;\r\n}\r\n\r\nconst ChromePicker: React.SFC<ChromePickerProps> = ({\r\n  className,\r\n  ...props\r\n}: ChromePickerProps) => (\r\n  <Div className={className}>\r\n    <ReactColorChromePicker {...props} />\r\n  </Div>\r\n);\r\n\r\nexport default ChromePicker;\r\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\nimport Input, { InputProps } from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Dl = styled.dl`\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin-left: -5px;\r\n  margin-top: -5px;\r\n\r\n  > div {\r\n    align-items: center;\r\n    display: flex;\r\n    margin-left: 5px;\r\n    margin-top: 5px;\r\n\r\n    dd {\r\n      align-items: center;\r\n      display: flex;\r\n      margin-left: 5px;\r\n\r\n      .input {\r\n        width: 50px;\r\n      }\r\n\r\n      .background-color {\r\n        border: 1px #ddd solid;\r\n        display: flex;\r\n        height: 15px;\r\n        justify-content: center;\r\n        position: relative;\r\n        width: 15px;\r\n\r\n        &:hover .picker {\r\n          display: block;\r\n        }\r\n\r\n        .picker {\r\n          background-color: #fff;\r\n          border: 1px #ddd solid;\r\n          bottom: 100%;\r\n          display: none;\r\n          padding: 10px;\r\n          position: absolute;\r\n\r\n          > div {\r\n            border: none !important;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface InformationProps {\r\n  backgroundColor: ChromePickerProps['color'];\r\n  gridSize: number;\r\n  height: number;\r\n  isInitialize: boolean;\r\n  onChange: InputProps['onChange'];\r\n  onChangeBackgroundColor: ChromePickerProps['onChange'];\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst Information: React.SFC<InformationProps> = ({\r\n  backgroundColor,\r\n  gridSize,\r\n  height,\r\n  isInitialize,\r\n  onChange,\r\n  onChangeBackgroundColor,\r\n  overflow,\r\n  scale,\r\n  width\r\n}: InformationProps) => {\r\n  const { a, b, g, r } = backgroundColor;\r\n\r\n  return (\r\n    <Dl>\r\n      {isInitialize && (\r\n        <React.Fragment>\r\n          <div>\r\n            <dt>width</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={1}\r\n                name=\"width\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={width}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>height</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={1}\r\n                name=\"height\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={height}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>scale</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"scale\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={scale}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>grid-size</dt>\r\n            <dd>\r\n              <Input\r\n                className=\"input\"\r\n                max={500}\r\n                min={0}\r\n                name=\"gridSize\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={gridSize}\r\n              />\r\n              px\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>background-color</dt>\r\n            <dd>\r\n              <div\r\n                className=\"background-color\"\r\n                style={{ backgroundColor: `rgba(${r},${g}, ${b},${a})` }}\r\n              >\r\n                <ChromePicker\r\n                  className=\"picker\"\r\n                  color={backgroundColor}\r\n                  onChange={onChangeBackgroundColor}\r\n                />\r\n              </div>\r\n            </dd>\r\n          </div>\r\n          <div>\r\n            <dt>overflow</dt>\r\n            <dd>\r\n              <Input\r\n                defaultChecked={overflow}\r\n                name=\"overflow\"\r\n                onChange={onChange}\r\n                type=\"checkbox\"\r\n              />\r\n            </dd>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </Dl>\r\n  );\r\n};\r\n\r\nexport default Information;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: grid;\r\n  grid-gap: 5px;\r\n  margin-bottom: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    border: 1px solid #ddd;\r\n    padding: 2.5px;\r\n\r\n    &.select {\r\n      border: solid #b33e5c 1px;\r\n    }\r\n\r\n    textarea {\r\n      border: 1px solid #ddd;\r\n      font-size: 1.2rem;\r\n      height: 50px;\r\n      min-height: 50px;\r\n      overflow-y: scroll;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n\r\n    .image {\r\n      background-position: center;\r\n      background-size: cover;\r\n      height: 50px;\r\n      overflow: hidden;\r\n      padding: 2.5px;\r\n      width: 100%;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface ImageLayer {\r\n  url: string;\r\n}\r\n\r\ninterface TextLayer {\r\n  value: string;\r\n}\r\n\r\nexport interface LayersProps {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n  onChange: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\r\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\r\n  onFocus: (e: React.FocusEvent<HTMLTextAreaElement>) => void;\r\n}\r\n\r\nconst Layers: React.SFC<LayersProps> = ({\r\n  index,\r\n  layers,\r\n  onChange,\r\n  onClick,\r\n  onFocus\r\n}: LayersProps) => (\r\n  <Ul>\r\n    {layers\r\n      .map((layer, layerIndex) => {\r\n        let v = <React.Fragment />;\r\n\r\n        if ('value' in layer) {\r\n          const { value } = layer;\r\n\r\n          v = (\r\n            <textarea\r\n              data-index={layerIndex}\r\n              onChange={onChange}\r\n              onFocus={onFocus}\r\n              value={value}\r\n            />\r\n          );\r\n        } else if ('url' in layer) {\r\n          const { url } = layer;\r\n\r\n          v = (\r\n            <div\r\n              className=\"image\"\r\n              data-index={layerIndex}\r\n              onClick={onClick}\r\n              style={{ backgroundImage: `url(${url})` }}\r\n            />\r\n          );\r\n        }\r\n\r\n        return (\r\n          <li className={index === layerIndex ? 'select' : ''} key={layerIndex}>\r\n            {v}\r\n          </li>\r\n        );\r\n      })\r\n      .reverse()}\r\n  </Ul>\r\n);\r\n\r\nexport default Layers;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  background-color: #bbb;\r\n  display: grid;\r\n  grid-auto-rows: 25px;\r\n  grid-gap: 5px;\r\n  grid-template-columns: repeat(auto-fill, 25px);\r\n  padding: 5px;\r\n  width: 100%;\r\n\r\n  li {\r\n    height: 100%;\r\n    width: 100%;\r\n\r\n    button {\r\n      height: 100%;\r\n      width: 100%;\r\n\r\n      .icon {\r\n        color: white;\r\n        height: 100%;\r\n        width: 100%;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LayerSettingProps {\r\n  children: React.ReactNodeArray;\r\n}\r\n\r\nconst LayerSetting: React.SFC<LayerSettingProps> = ({\r\n  children\r\n}: LayerSettingProps) => (\r\n  <Ul>\r\n    {children.map((value, index) => (\r\n      <li key={index}>{value}</li>\r\n    ))}\r\n  </Ul>\r\n);\r\n\r\nexport default LayerSetting;\r\n","import * as React from 'react';\r\nimport { TiDownload } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DownloadButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DownloadButton: React.SFC<DownloadButtonProps> = (\r\n  props: DownloadButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDownload className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DownloadButton;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  position: relative;\r\n\r\n  &::before,\r\n  &::after {\r\n    background-color: #000;\r\n    display: block;\r\n    content: '';\r\n    left: 50%;\r\n    position: absolute;\r\n    top: 50%;\r\n    transform: translate(-50%, -50%) rotate(45deg);\r\n  }\r\n\r\n  &::before {\r\n    height: 1px;\r\n    width: 100%;\r\n  }\r\n\r\n  &::after {\r\n    height: 100%;\r\n    width: 1px;\r\n  }\r\n`;\r\n\r\nexport interface CloseButtonProps {\r\n  className?: string;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst CloseButton: React.SFC<CloseButtonProps> = (props: CloseButtonProps) => (\r\n  <Button {...props} />\r\n);\r\n\r\nexport default CloseButton;\r\n","import CloseButton, { CloseButtonProps } from 'components/atoms/CloseButton';\r\nimport * as $ from 'jquery';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  align-items: center;\r\n  background-color: rgba(255, 255, 255, 0.75);\r\n  display: flex;\r\n  flex-direction: column;\r\n  height: 100%;\r\n  justify-content: center;\r\n  left: 0;\r\n  position: fixed;\r\n  top: 0;\r\n  width: 100%;\r\n  z-index: 9999;\r\n\r\n  .close-button {\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    top: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface PortalProps {\r\n  className?: string;\r\n  children: React.ReactNode;\r\n  onClickCloseButton?: CloseButtonProps['onClick'];\r\n}\r\n\r\nclass Portal extends React.Component<PortalProps> {\r\n  componentDidMount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(2.5px)');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    $('#root > div:not(.portal)').css('filter', 'blur(0)');\r\n  }\r\n\r\n  render() {\r\n    const { children, className, onClickCloseButton } = this.props;\r\n\r\n    return (\r\n      <Div className={`portal ${className}`}>\r\n        {children}\r\n        {onClickCloseButton ? (\r\n          <CloseButton className=\"close-button\" onClick={onClickCloseButton} />\r\n        ) : (\r\n          <React.Fragment />\r\n        )}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Portal;\r\n","import DownloadButton from 'components/atoms/DownloadButton';\r\nimport Portal, { PortalProps } from 'components/templates/Portal';\r\nimport { saveAs } from 'file-saver';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  img {\r\n    max-height: 90%;\r\n    max-width: 90%;\r\n  }\r\n\r\n  .download-button {\r\n    bottom: 10px;\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface ImageProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  extension: 'jpg' | 'png' | 'svg';\r\n  fileName: string;\r\n  src: string;\r\n}\r\n\r\nconst Image: React.SFC<ImageProps> = ({\r\n  extension,\r\n  fileName,\r\n  onClickCloseButton,\r\n  src\r\n}: ImageProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <img src={src} />\r\n    <DownloadButton\r\n      className=\"download-button\"\r\n      onClick={() => {\r\n        saveAs(src, `${fileName || 'image'}.${extension}`);\r\n      }}\r\n    />\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Image;\r\n","import * as React from 'react';\r\nimport { TiDocument } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\nimport { string } from 'prop-types';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface DocumentButtonProps {\r\n  className?: string;\r\n  disabled: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst DocumentButton: React.SFC<DocumentButtonProps> = (\r\n  props: DocumentButtonProps\r\n) => (\r\n  <Button {...props}>\r\n    <TiDocument className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default DocumentButton;\r\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\nimport DocumentButton, {\r\n  DocumentButtonProps\r\n} from 'components/atoms/DocumentButton';\r\nimport Input from 'components/atoms/Input';\r\nimport Portal, { PortalProps } from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 250px;\r\n\r\n    dt:not(:first-child) {\r\n      margin-top: 15px;\r\n    }\r\n\r\n    dd {\r\n      display: flex;\r\n      justify-content: flex-end;\r\n      margin-top: 5px;\r\n\r\n      .file-name {\r\n        width: 150px;\r\n      }\r\n\r\n      .input {\r\n        width: 50px;\r\n      }\r\n    }\r\n  }\r\n\r\n  .document-button {\r\n    bottom: 10px;\r\n    height: 50px;\r\n    position: fixed;\r\n    right: 10px;\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface NewProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  backgroundColor: ChromePickerProps['color'];\r\n  changePreviewIsInitialize: (value: boolean) => void;\r\n  fileName: string;\r\n  height: number;\r\n  onChangePreviewBackgroundColor: ChromePickerProps['onChange'];\r\n  onChangePreviewValue: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  width: number;\r\n}\r\n\r\nconst New: React.SFC<NewProps> = ({\r\n  backgroundColor,\r\n  changePreviewIsInitialize,\r\n  fileName,\r\n  height,\r\n  onChangePreviewBackgroundColor,\r\n  onChangePreviewValue,\r\n  onClickCloseButton,\r\n  width\r\n}: NewProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <dl className=\"wrapper\">\r\n      <dt>file-name</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"file-name\"\r\n          name=\"fileName\"\r\n          onChange={onChangePreviewValue}\r\n          type=\"text\"\r\n          value={fileName}\r\n        />\r\n      </dd>\r\n      <dt>width</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={1}\r\n          name=\"width\"\r\n          onChange={onChangePreviewValue}\r\n          type=\"number\"\r\n          value={width}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>height</dt>\r\n      <dd>\r\n        <Input\r\n          className=\"input\"\r\n          min={1}\r\n          name=\"height\"\r\n          onChange={onChangePreviewValue}\r\n          type=\"number\"\r\n          value={height}\r\n        />\r\n        px\r\n      </dd>\r\n      <dt>background-color</dt>\r\n      <dd>\r\n        <ChromePicker\r\n          color={backgroundColor}\r\n          onChange={onChangePreviewBackgroundColor}\r\n        />\r\n      </dd>\r\n    </dl>\r\n    <DocumentButton\r\n      className=\"document-button\"\r\n      disabled={!fileName || !height || !width}\r\n      onClick={(e: ArgumentTypes<DocumentButtonProps['onClick']>[0]) => {\r\n        changePreviewIsInitialize(true);\r\n        onClickCloseButton(e);\r\n      }}\r\n    />\r\n  </StyledPortal>\r\n);\r\n\r\nexport default New;\r\n","import Portal from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport { DotLoader } from 'react-spinners';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  p {\r\n    margin-top: 30px;\r\n  }\r\n`;\r\n\r\nconst Loading: React.SFC = () => (\r\n  <StyledPortal>\r\n    <DotLoader color=\"#234794\" />\r\n    <p>Generating... wait a minutes.</p>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Loading;\r\n","import Image, { ImageProps } from 'components/templates/Image';\r\nimport New, { NewProps } from 'components/templates/New';\r\nimport Loading from 'components/templates/Loading';\r\nimport domtoimage from 'dom-to-image';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport styled from 'styled-components';\r\n\r\nconst Ul = styled.ul`\r\n  display: flex;\r\n\r\n  * {\r\n    cursor: default;\r\n  }\r\n\r\n  ul {\r\n    background-color: #fff;\r\n    border: 1px #ddd solid;\r\n    position: absolute;\r\n  }\r\n\r\n  li {\r\n    align-items: center;\r\n    justify-content: center;\r\n    position: relative;\r\n    white-space: nowrap;\r\n\r\n    &:hover {\r\n      background-color: rgba(35, 71, 148, 0.1);\r\n\r\n      > ul > li {\r\n        display: flex;\r\n      }\r\n    }\r\n  }\r\n\r\n  > li {\r\n    display: flex;\r\n    height: 24px;\r\n    width: 50px;\r\n\r\n    > ul {\r\n      left: 0;\r\n      top: 100%;\r\n\r\n      li {\r\n        display: none;\r\n        height: 25px;\r\n\r\n        > *:not(ul) {\r\n          align-items: center;\r\n          color: inherit;\r\n          display: flex;\r\n          justify-content: flex-start;\r\n          padding: 0 30px 0 15px;\r\n          text-decoration: none;\r\n        }\r\n      }\r\n\r\n      > li > ul {\r\n        left: 100%;\r\n        top: 0;\r\n\r\n        &::after {\r\n          border-color: transparent transparent transparent black;\r\n          border-style: solid;\r\n          border-width: 4px 0 4px 4px;\r\n          content: '';\r\n          display: block;\r\n          height: 0;\r\n          left: -10px;\r\n          position: absolute;\r\n          top: 9px;\r\n          width: 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface MenuProps\r\n  extends Pick<\r\n    NewProps,\r\n    | 'backgroundColor'\r\n    | 'changePreviewIsInitialize'\r\n    | 'fileName'\r\n    | 'height'\r\n    | 'onChangePreviewBackgroundColor'\r\n    | 'onChangePreviewValue'\r\n    | 'width'\r\n  > {\r\n  changePreviewOverflow: (value: boolean) => void;\r\n  overflow: boolean;\r\n}\r\n\r\ninterface MenuState {\r\n  extension?: ImageProps['extension'];\r\n  imageUrl: string;\r\n  isNew: boolean;\r\n  isShowLoading: boolean;\r\n}\r\n\r\nclass Menu extends React.Component<MenuProps, MenuState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: MenuProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      extension: undefined,\r\n      imageUrl: '',\r\n      isNew: false,\r\n      isShowLoading: false\r\n    };\r\n  }\r\n\r\n  componentDidUpdate({ overflow: prevOverflow }: MenuProps) {\r\n    const { changePreviewOverflow, overflow } = this.props;\r\n    const { extension, isShowLoading } = this.state;\r\n\r\n    if (isShowLoading) {\r\n      if (overflow) {\r\n        changePreviewOverflow(false);\r\n\r\n        return;\r\n      }\r\n\r\n      const callback = (imageUrl: string) => {\r\n        this.setState(\r\n          {\r\n            imageUrl,\r\n            isShowLoading: false\r\n          },\r\n          () => {\r\n            if (prevOverflow) {\r\n              changePreviewOverflow(true);\r\n            }\r\n          }\r\n        );\r\n      };\r\n\r\n      if (extension === 'jpg') {\r\n        domtoimage.toJpeg(document.getElementById('capture')!).then(callback);\r\n      }\r\n\r\n      if (extension === 'png') {\r\n        domtoimage.toPng(document.getElementById('capture')!).then(callback);\r\n      }\r\n\r\n      if (extension === 'svg') {\r\n        domtoimage.toSvg(document.getElementById('capture')!).then(callback);\r\n      }\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { fileName } = this.props;\r\n    const { extension, imageUrl, isNew, isShowLoading } = this.state;\r\n\r\n    return (\r\n      <Ul>\r\n        <li>\r\n          <p>File</p>\r\n          <ul>\r\n            <li>\r\n              <button\r\n                onClick={() => {\r\n                  this.setState({ isNew: true });\r\n                }}\r\n              >\r\n                New\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <p>Save</p>\r\n              <ul>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'jpg',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    JPG\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'png',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    PNG\r\n                  </button>\r\n                </li>\r\n                <li>\r\n                  <button\r\n                    onClick={() => {\r\n                      this.setState({\r\n                        extension: 'svg',\r\n                        isShowLoading: true\r\n                      });\r\n                    }}\r\n                  >\r\n                    SVG\r\n                  </button>\r\n                </li>\r\n              </ul>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        <li>\r\n          <p>Help</p>\r\n          <ul>\r\n            <li>\r\n              <a href=\"https://github.com/piro0919/image-maker\" target=\"_blank\">\r\n                GitHub\r\n              </a>\r\n            </li>\r\n          </ul>\r\n        </li>\r\n        {extension &&\r\n          imageUrl &&\r\n          ReactDOM.createPortal(\r\n            <Image\r\n              extension={extension}\r\n              fileName={fileName}\r\n              onClickCloseButton={() => {\r\n                this.setState({ extension: undefined, imageUrl: '' });\r\n              }}\r\n              src={imageUrl}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isNew &&\r\n          ReactDOM.createPortal(\r\n            <New\r\n              {...this.props}\r\n              onClickCloseButton={() => {\r\n                this.setState({ isNew: false });\r\n              }}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isShowLoading && ReactDOM.createPortal(<Loading />, this.rootEl)}\r\n      </Ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Menu;\r\n","import * as React from 'react';\r\nimport * as uniqid from 'uniqid';\r\n\r\nexport interface ImagePreviewProps {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface ImagePreviewState {\r\n  height: number;\r\n  width: number;\r\n}\r\n\r\nclass ImagePreview extends React.Component<\r\n  ImagePreviewProps,\r\n  ImagePreviewState\r\n> {\r\n  id: string;\r\n\r\n  constructor(props: ImagePreviewProps) {\r\n    super(props);\r\n\r\n    this.id = uniqid();\r\n    this.state = {\r\n      height: 0,\r\n      width: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { url } = this.props;\r\n    const element = new Image();\r\n\r\n    element.onload = () => {\r\n      const { naturalHeight: height, naturalWidth: width } = element;\r\n\r\n      this.setState(\r\n        {\r\n          height,\r\n          width\r\n        },\r\n        () => {\r\n          const canvas = document.getElementById(this.id) as HTMLCanvasElement;\r\n          const context = canvas.getContext('2d');\r\n          const image = new Image();\r\n\r\n          image.src = url;\r\n          image.onload = () => {\r\n            context!.drawImage(image, 0, 0, width, height);\r\n          };\r\n        }\r\n      );\r\n    };\r\n    element.src = url;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      style: { rotate, scale, ...style }\r\n    } = this.props;\r\n    const { height, width } = this.state;\r\n\r\n    return (\r\n      <canvas\r\n        height={height}\r\n        id={this.id}\r\n        style={{ transform: `rotate(${rotate}deg) scale(${scale})`, ...style }}\r\n        width={width}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ImagePreview;\r\n","import * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface DivProps {\r\n  fontFamily: string;\r\n}\r\n\r\nconst Div = styled.div`\r\n  @font-face {\r\n    font-family: '${({ fontFamily }: DivProps) => fontFamily}';\r\n    src: url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.woff2') format('woff2'),\r\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.woff') format('woff'),\r\n      url('${process.env.PUBLIC_URL}/fonts/${({ fontFamily }: DivProps) =>\r\n  fontFamily}.ttf') format('truetype');\r\n  }\r\n\r\n  white-space: nowrap;\r\n`;\r\n\r\ninterface TextShadow {\r\n  blurRadius: number;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  hShadow: number;\r\n  vShadow: number;\r\n}\r\n\r\nexport interface TextPreviewProps {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontStyle: boolean;\r\n    fontWeight: number;\r\n    letterSpacing: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n    textShadows: TextShadow[];\r\n  };\r\n  value: string;\r\n}\r\n\r\nconst TextPreview: React.SFC<TextPreviewProps> = ({\r\n  style: {\r\n    color: { a, b, g, r },\r\n    fontFamily: { value: fontFamily },\r\n    fontSize,\r\n    fontStyle,\r\n    fontWeight,\r\n    letterSpacing,\r\n    lineHeight,\r\n    opacity,\r\n    rotate,\r\n    textShadows\r\n  },\r\n  value\r\n}: TextPreviewProps) => (\r\n  <Div\r\n    fontFamily={fontFamily}\r\n    style={{\r\n      fontFamily,\r\n      fontWeight,\r\n      opacity,\r\n      color: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n      fontSize: `${fontSize}px`,\r\n      fontStyle: fontStyle ? 'italic' : 'normal',\r\n      letterSpacing: `${letterSpacing}px`,\r\n      textShadow: textShadows\r\n        .map(\r\n          ({\r\n            blurRadius,\r\n            color: {\r\n              a: textShadowA,\r\n              b: textShadowB,\r\n              g: textShadowG,\r\n              r: textShadowR\r\n            },\r\n            hShadow,\r\n            vShadow\r\n          }) =>\r\n            `${hShadow}px ${vShadow}px ${blurRadius}px rgba(${textShadowR}, ${textShadowG}, ${textShadowB}, ${textShadowA})`\r\n        )\r\n        .join(','),\r\n      transform: `rotate(${rotate}deg)`\r\n    }}\r\n  >\r\n    {value.split(/\\r\\n|\\r|\\n/).map((v, index) => (\r\n      <div\r\n        key={index}\r\n        style={{\r\n          height: `${lineHeight}px`,\r\n          lineHeight: `${lineHeight}px`\r\n        }}\r\n      >\r\n        {v}\r\n      </div>\r\n    ))}\r\n  </Div>\r\n);\r\n\r\nexport default TextPreview;\r\n","import ImagePreview, {\r\n  ImagePreviewProps\r\n} from 'components/molecules/ImagePreview';\r\nimport TextPreview, {\r\n  TextPreviewProps\r\n} from 'components/molecules/TextPreview';\r\nimport * as React from 'react';\r\nimport ReactScalableDraggable from 'react-scalable-draggable';\r\nimport styled from 'styled-components';\r\n\r\nconst Div = styled.div`\r\n  background-color: #bbb;\r\n  height: 100%;\r\n  overflow: scroll;\r\n  position: relative;\r\n  width: 100%;\r\n\r\n  .wrapper {\r\n    box-sizing: content-box;\r\n    left: 0;\r\n    padding: 50px;\r\n    position: absolute;\r\n    top: 0;\r\n    transform-origin: top left;\r\n\r\n    #capture {\r\n      height: inherit;\r\n      width: inherit;\r\n\r\n      .screen {\r\n        height: inherit;\r\n        position: relative;\r\n        width: inherit;\r\n\r\n        &::before {\r\n          background-image: url(${process.env.PUBLIC_URL}/images/grid.png);\r\n          background-repeat: repeat;\r\n          background-size: inherit;\r\n          content: '';\r\n          display: block;\r\n          height: 100%;\r\n          left: 0;\r\n          position: absolute;\r\n          top: 0;\r\n          width: 100%;\r\n        }\r\n\r\n        .draggable {\r\n          cursor: move;\r\n          position: absolute;\r\n          word-break: keep-all;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface PreviewProps {\r\n  layers: (ImagePreviewProps | TextPreviewProps)[];\r\n  preview: {\r\n    backgroundColor: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    gridSize: number;\r\n    height: number;\r\n    isInitialize: boolean;\r\n    overflow: boolean;\r\n    scale: number;\r\n    width: number;\r\n  };\r\n}\r\n\r\nconst Preview: React.SFC<PreviewProps> = ({\r\n  layers,\r\n  preview: {\r\n    backgroundColor: { a, b, g, r },\r\n    gridSize,\r\n    height,\r\n    isInitialize,\r\n    overflow,\r\n    scale,\r\n    width\r\n  }\r\n}) => {\r\n  const previews = layers.map(layer => {\r\n    const { id } = layer;\r\n\r\n    let node = <React.Fragment />;\r\n\r\n    if ('value' in layer) {\r\n      node = <TextPreview {...layer} />;\r\n    } else if ('url' in layer) {\r\n      node = <ImagePreview {...layer} />;\r\n    }\r\n\r\n    return (\r\n      <ReactScalableDraggable\r\n        className=\"draggable\"\r\n        key={id}\r\n        parentScale={scale}\r\n      >\r\n        {node}\r\n      </ReactScalableDraggable>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <Div id=\"preview\">\r\n      <div\r\n        className=\"wrapper\"\r\n        style={{\r\n          height: `${height}px`,\r\n          transform: `scale(${scale})`,\r\n          width: `${width}px`\r\n        }}\r\n      >\r\n        <div id=\"capture\">\r\n          {isInitialize && (\r\n            <div\r\n              className=\"screen\"\r\n              style={{\r\n                backgroundColor: `rgba(${r}, ${g}, ${b}, ${a})`,\r\n                backgroundSize: `${gridSize}px`,\r\n                overflow: overflow ? 'visible' : 'hidden'\r\n              }}\r\n            >\r\n              {previews}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </Div>\r\n  );\r\n};\r\n\r\nexport default Preview;\r\n","import * as React from 'react';\r\nimport { TiMinus } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface MinusButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  name?: string;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst MinusButton: React.SFC<MinusButtonProps> = (props: MinusButtonProps) => (\r\n  <Button {...props}>\r\n    <TiMinus className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default MinusButton;\r\n","import * as React from 'react';\r\nimport { TiPlus } from 'react-icons/ti';\r\nimport styled from 'styled-components';\r\n\r\nconst Button = styled.button`\r\n  height: 100%;\r\n  width: 100%;\r\n\r\n  &:disabled {\r\n    opacity: 0.5;\r\n  }\r\n\r\n  .icon {\r\n    color: black;\r\n    height: 100%;\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport interface PlusButtonProps {\r\n  className?: string;\r\n  disabled?: boolean;\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement>) => void;\r\n}\r\n\r\nconst PlusButton: React.SFC<PlusButtonProps> = (props: PlusButtonProps) => (\r\n  <Button {...props}>\r\n    <TiPlus className=\"icon\" />\r\n  </Button>\r\n);\r\n\r\nexport default PlusButton;\r\n","import Input from 'components/atoms/Input';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\nimport ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\n\r\nconst Dl = styled.dl`\r\n  .input {\r\n    width: 50px;\r\n  }\r\n`;\r\n\r\nexport interface TextShadowProps {\r\n  blurRadius: number;\r\n  className?: string;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  hShadow: number;\r\n  name: string;\r\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\r\n  onChangeTextShadowColor: (\r\n    color: ArgumentTypes<ChromePickerProps['onChange']>[0],\r\n    name: string\r\n  ) => void;\r\n  vShadow: number;\r\n}\r\n\r\nconst TextShadow: React.SFC<TextShadowProps> = ({\r\n  blurRadius,\r\n  className,\r\n  color,\r\n  hShadow,\r\n  name,\r\n  onChange,\r\n  onChangeTextShadowColor,\r\n  vShadow\r\n}: TextShadowProps) => (\r\n  <Dl className={className}>\r\n    <dt>h-shadow</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name={`${name}.hShadow`}\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={hShadow}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>v-shadow</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        name={`${name}.vShadow`}\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={vShadow}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>blur-radius</dt>\r\n    <dd>\r\n      <Input\r\n        className=\"input\"\r\n        min={0}\r\n        name={`${name}.blurRadius`}\r\n        onChange={onChange}\r\n        step={0.1}\r\n        type=\"number\"\r\n        value={blurRadius}\r\n      />\r\n      px\r\n    </dd>\r\n    <dt>color</dt>\r\n    <dd>\r\n      <ChromePicker\r\n        color={color}\r\n        onChange={color => onChangeTextShadowColor(color, `${name}.color`)}\r\n      />\r\n    </dd>\r\n  </Dl>\r\n);\r\n\r\nexport default TextShadow;\r\n","import ChromePicker, { ChromePickerProps } from 'components/atoms/ChromePicker';\r\nimport MinusButton, { MinusButtonProps } from 'components/atoms/MinusButton';\r\nimport PlusButton, { PlusButtonProps } from 'components/atoms/PlusButton';\r\nimport Input from 'components/atoms/Input';\r\nimport LayerStyles from 'components/molecules/LayerStyles';\r\nimport TextShadow, { TextShadowProps } from 'components/molecules/TextShadow';\r\nimport * as React from 'react';\r\nimport Select from 'react-select';\r\nimport { Props } from 'react-select/lib/Select';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledLayerStyles = styled(LayerStyles)`\r\n  .select {\r\n    width: 200px;\r\n  }\r\n\r\n  .input {\r\n    width: 50px;\r\n  }\r\n\r\n  .text-shadow {\r\n    margin-top: 10px;\r\n  }\r\n\r\n  .name {\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .plus-button {\r\n      height: 14.4px;\r\n      width: 14.4px;\r\n    }\r\n  }\r\n\r\n  .node-list > li {\r\n    position: relative;\r\n\r\n    &:not(:first-child) {\r\n      border-top: 1px solid white;\r\n      margin-top: 10px;\r\n    }\r\n\r\n    .minus-button {\r\n      height: 14.4px;\r\n      position: absolute;\r\n      right: 0;\r\n      top: 0;\r\n      width: 14.4px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface TextLayerStylesProps\r\n  extends Pick<ChromePickerProps, 'color'>,\r\n    Pick<TextShadowProps, 'onChange'> {\r\n  fontFamily: {\r\n    label: string;\r\n    value: string;\r\n  };\r\n  fonts: Font[];\r\n  fontSize: number;\r\n  fontStyle: boolean;\r\n  fontWeight: number;\r\n  letterSpacing: number;\r\n  lineHeight: number;\r\n  onChangeColor: (\r\n    color: ArgumentTypes<ChromePickerProps['onChange']>[0],\r\n    name: string\r\n  ) => void;\r\n  onChangeFontFamily: (value: ArgumentTypes<Props['onChange']>[0]) => void;\r\n  onClickAddTextShadow: PlusButtonProps['onClick'];\r\n  onClickRemoveTextShadow: MinusButtonProps['onClick'];\r\n  opacity: number;\r\n  rotate: number;\r\n  textShadows: Pick<\r\n    TextShadowProps,\r\n    'blurRadius' | 'color' | 'hShadow' | 'vShadow'\r\n  >[];\r\n}\r\n\r\nconst TextLayerStyles: React.SFC<TextLayerStylesProps> = ({\r\n  color,\r\n  fontFamily,\r\n  fonts,\r\n  fontSize,\r\n  fontStyle,\r\n  fontWeight,\r\n  letterSpacing,\r\n  lineHeight,\r\n  onChange,\r\n  onChangeColor,\r\n  onChangeFontFamily,\r\n  onClickAddTextShadow,\r\n  onClickRemoveTextShadow,\r\n  opacity,\r\n  rotate,\r\n  textShadows\r\n}: TextLayerStylesProps) => {\r\n  const options = fonts.map(({ fontFamily: value, name: label }) => ({\r\n    label,\r\n    value\r\n  }));\r\n  const index = options.findIndex(\r\n    font => JSON.stringify(fontFamily) === JSON.stringify(font)\r\n  );\r\n\r\n  return (\r\n    <StyledLayerStyles>\r\n      {[\r\n        {\r\n          name: 'color',\r\n          node: (\r\n            <ChromePicker\r\n              color={color}\r\n              onChange={color => onChangeColor(color, 'color')}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'font-family',\r\n          node: (\r\n            <Select\r\n              className=\"select\"\r\n              onChange={onChangeFontFamily}\r\n              options={options}\r\n              value={options[index]}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'font-size',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"fontSize\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={fontSize}\r\n              />\r\n              px\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: 'font-style',\r\n          node: (\r\n            <Input\r\n              defaultChecked={fontStyle}\r\n              name=\"fontStyle\"\r\n              onChange={onChange}\r\n              type=\"checkbox\"\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'font-weight',\r\n          node: (\r\n            <Input\r\n              className=\"input\"\r\n              max={900}\r\n              min={100}\r\n              name=\"fontWeight\"\r\n              onChange={onChange}\r\n              step={100}\r\n              type=\"number\"\r\n              value={fontWeight}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'letter-spacing',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"letterSpacing\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={letterSpacing}\r\n              />\r\n              px\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: 'line-height',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                min={0}\r\n                name=\"lineHeight\"\r\n                onChange={onChange}\r\n                type=\"number\"\r\n                value={lineHeight}\r\n              />\r\n              px\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: 'opacity',\r\n          node: (\r\n            <Input\r\n              className=\"input\"\r\n              max={1}\r\n              min={0}\r\n              name=\"opacity\"\r\n              onChange={onChange}\r\n              step={0.01}\r\n              type=\"number\"\r\n              value={opacity}\r\n            />\r\n          )\r\n        },\r\n        {\r\n          name: 'rotate',\r\n          node: (\r\n            <React.Fragment>\r\n              <Input\r\n                className=\"input\"\r\n                name=\"rotate\"\r\n                onChange={onChange}\r\n                step={0.1}\r\n                type=\"number\"\r\n                value={rotate}\r\n              />\r\n              deg\r\n            </React.Fragment>\r\n          )\r\n        },\r\n        {\r\n          name: (\r\n            <div className=\"name\">\r\n              <p>text-shadow</p>\r\n              <PlusButton\r\n                className=\"plus-button\"\r\n                onClick={onClickAddTextShadow}\r\n              />\r\n            </div>\r\n          ),\r\n          node: (\r\n            <ul className=\"node-list\">\r\n              {textShadows.map((textShadow, index) => (\r\n                <li key={index}>\r\n                  <MinusButton\r\n                    className=\"minus-button\"\r\n                    name={index.toString()}\r\n                    onClick={onClickRemoveTextShadow}\r\n                  />\r\n                  <TextShadow\r\n                    {...textShadow}\r\n                    className=\"text-shadow\"\r\n                    name={`textShadows[${index}]`}\r\n                    onChange={onChange}\r\n                    onChangeTextShadowColor={onChangeColor}\r\n                  />\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          )\r\n        }\r\n      ]}\r\n    </StyledLayerStyles>\r\n  );\r\n};\r\n\r\nexport default TextLayerStyles;\r\n","import Portal, { PortalProps } from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport ReactDropzone, {\r\n  DropzoneProps as ReactDropzoneProps\r\n} from 'react-dropzone';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    align-items: center;\r\n    cursor: pointer;\r\n    display: flex;\r\n    flex-direction: column;\r\n    height: 100%;\r\n    justify-content: center;\r\n    width: 100%;\r\n\r\n    img {\r\n      height: calc(231px / 3);\r\n      opacity: 0.75;\r\n      width: calc(289px / 3);\r\n    }\r\n\r\n    p {\r\n      margin-top: 15px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface DropzoneProps\r\n  extends Required<Pick<PortalProps, 'onClickCloseButton'>> {\r\n  onDrop: ReactDropzoneProps['onDrop'];\r\n}\r\n\r\nconst Dropzone: React.SFC<DropzoneProps> = ({\r\n  onClickCloseButton,\r\n  onDrop\r\n}: DropzoneProps) => (\r\n  <StyledPortal onClickCloseButton={onClickCloseButton}>\r\n    <ReactDropzone accept=\"image/*\" onDrop={onDrop}>\r\n      {({ getRootProps, getInputProps, isDragActive }) => (\r\n        <div {...getRootProps()} className=\"wrapper\">\r\n          <input {...getInputProps()} />\r\n          <img src={`${process.env.PUBLIC_URL}/images/dd.png`} />\r\n          <p>\r\n            {isDragActive\r\n              ? 'Drop files here...'\r\n              : 'Try dropping some image files here, or click to select files to upload.'}\r\n          </p>\r\n        </div>\r\n      )}\r\n    </ReactDropzone>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Dropzone;\r\n","import Portal from 'components/templates/Portal';\r\nimport * as React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledPortal = styled(Portal)`\r\n  .wrapper {\r\n    height: 360px;\r\n    position: relative;\r\n    width: 640px;\r\n\r\n    img {\r\n      height: 100%;\r\n      width: 100%;\r\n    }\r\n\r\n    p {\r\n      bottom: 80px;\r\n      color: #ef64a0;\r\n      font-size: 1.2em;\r\n      position: absolute;\r\n      right: 30px;\r\n    }\r\n  }\r\n`;\r\n\r\nexport interface LogoProps {\r\n  loading: number;\r\n}\r\n\r\nconst Logo: React.SFC<LogoProps> = ({ loading }: LogoProps) => (\r\n  <StyledPortal>\r\n    <div className=\"wrapper\">\r\n      <img src={`${process.env.PUBLIC_URL}/images/top.png`} />\r\n      <p>loading... {loading}%</p>\r\n    </div>\r\n  </StyledPortal>\r\n);\r\n\r\nexport default Logo;\r\n","import setFonts from 'actions/fonts/setFonts';\r\nimport addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport addTextShadow from 'actions/layer/addTextShadow';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport removeTextShadow from 'actions/layer/removeTextShadow';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport ArrowUpOutlineButton from 'components/atoms/ArrowDownOutlineButton';\r\nimport ArrowDownOutlineButton from 'components/atoms/ArrowUpOutlineButton';\r\nimport DocumentAddButton from 'components/atoms/DocumentAddButton';\r\nimport DocumentDeleteButton from 'components/atoms/DocumentDeleteButton';\r\nimport ImageButton from 'components/atoms/ImageButton';\r\nimport ReactHelmet from 'components/atoms/ReactHelmet';\r\nimport ImageLayerStyles from 'components/organisms/ImageLayerStyles';\r\nimport Information, {\r\n  InformationProps\r\n} from 'components/organisms/Information';\r\nimport Layers, { LayersProps } from 'components/organisms/Layers';\r\nimport LayerSetting from 'components/organisms/LayerSetting';\r\nimport Menu, { MenuProps } from 'components/organisms/Menu';\r\nimport Preview from 'components/organisms/Preview';\r\nimport TextLayerStyles, {\r\n  TextLayerStylesProps\r\n} from 'components/organisms/TextLayerStyles';\r\nimport Dropzone, { DropzoneProps } from 'components/templates/Dropzone';\r\nimport Logo from 'components/templates/Logo';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { connect } from 'react-redux';\r\nimport { RouteComponentProps } from 'react-router-dom';\r\nimport { State } from 'reducers';\r\nimport { Dispatch } from 'redux';\r\nimport styled from 'styled-components';\r\nimport * as WebFont from 'webfontloader';\r\n\r\nconst Div = styled.div`\r\n  background-color: #fbfbfb;\r\n  display: grid;\r\n  height: 100%;\r\n  grid-template-columns: 275px 1fr 200px;\r\n  grid-template-rows: 25px 1fr;\r\n\r\n  .header {\r\n    border-bottom: 1px #ddd inset;\r\n    grid-column: 1 / 4;\r\n    z-index: 2;\r\n  }\r\n\r\n  .detail {\r\n    overflow-y: scroll;\r\n  }\r\n\r\n  .preview {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: grid;\r\n    grid-gap: 5px;\r\n    grid-template-rows: 1fr fit-content(20px);\r\n    padding: 5px;\r\n  }\r\n\r\n  .side-layers {\r\n    box-shadow: 1px 0px #ddd inset;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .layers {\r\n      flex-basis: 0;\r\n      flex-grow: 1;\r\n      overflow-y: scroll;\r\n      padding: 5px;\r\n    }\r\n  }\r\n`;\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface PagesProps\r\n  extends ReturnType<typeof mapDispatchToProps>,\r\n    ReturnType<typeof mapStateToProps>,\r\n    RouteComponentProps {}\r\n\r\ninterface PagesState {\r\n  isShowDropzone: boolean;\r\n  isShowLogo: boolean;\r\n  loading: number;\r\n}\r\n\r\nclass Pages extends React.Component<PagesProps, PagesState> {\r\n  rootEl: HTMLElement;\r\n\r\n  constructor(props: PagesProps) {\r\n    super(props);\r\n\r\n    this.rootEl = document.getElementById('root');\r\n    this.state = {\r\n      isShowDropzone: false,\r\n      // isShowLogo: true,\r\n      isShowLogo: process.env.NODE_ENV !== 'development',\r\n      loading: 0\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { setFonts } = this.props;\r\n    const request = new XMLHttpRequest();\r\n\r\n    request.open('GET', `${process.env.PUBLIC_URL}/jsons/fonts.json`, true);\r\n    request.responseType = 'blob';\r\n    request.onload = ({ target: { response } }: any) => {\r\n      const reader = new FileReader();\r\n\r\n      reader.onload = ({ target: { result } }: any) => {\r\n        const fonts: Font[] = JSON.parse(result);\r\n\r\n        let counter = 0;\r\n\r\n        setFonts(fonts);\r\n\r\n        WebFont.load({\r\n          active: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false, loading: 100 });\r\n            }, 1000);\r\n          },\r\n          classes: false,\r\n          custom: {\r\n            families: fonts.map(({ fontFamily }) => fontFamily)\r\n          },\r\n          fontactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.floor((counter / fonts.length) * 100)\r\n            });\r\n          },\r\n          fontinactive: (familyName: string, fvd: string) => {\r\n            counter = counter + 1;\r\n\r\n            this.setState({\r\n              loading: Math.floor((counter / fonts.length) * 100)\r\n            });\r\n          },\r\n          inactive: () => {\r\n            setTimeout(() => {\r\n              this.setState({ isShowLogo: false, loading: 100 });\r\n            }, 1000);\r\n          }\r\n        });\r\n      };\r\n      reader.readAsText(response);\r\n    };\r\n    request.send();\r\n  }\r\n\r\n  componentDidUpdate({ layers: prevLayers }: PagesProps) {\r\n    const { layers } = this.props;\r\n    const { isShowDropzone } = this.state;\r\n\r\n    if (isShowDropzone && prevLayers.length !== layers.length) {\r\n      this.setState({ isShowDropzone: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      addImageLayers,\r\n      addTextLayer,\r\n      addTextShadow,\r\n      changeColor,\r\n      changeFontFamily,\r\n      changePreviewBackgroundColor,\r\n      changePreviewIsInitialize,\r\n      changePreviewOverflow,\r\n      changePreviewValue,\r\n      changeStyle,\r\n      changeValue,\r\n      downLayer,\r\n      fonts,\r\n      index,\r\n      layers,\r\n      preview,\r\n      removeLayer,\r\n      removeTextShadow,\r\n      selectLayer,\r\n      upLayer\r\n    } = this.props;\r\n    const { isShowDropzone, isShowLogo, loading } = this.state;\r\n    const { fileName, isInitialize } = preview;\r\n\r\n    let styles = <React.Fragment />;\r\n\r\n    if (index !== undefined) {\r\n      const layer = layers[index];\r\n\r\n      if ('value' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = (\r\n          <TextLayerStyles\r\n            {...style}\r\n            fonts={fonts}\r\n            onChange={changeStyle}\r\n            onChangeColor={changeColor}\r\n            onChangeFontFamily={changeFontFamily}\r\n            onClickAddTextShadow={addTextShadow}\r\n            onClickRemoveTextShadow={removeTextShadow}\r\n          />\r\n        );\r\n      } else if ('url' in layer) {\r\n        const { style } = layer;\r\n\r\n        styles = <ImageLayerStyles {...style} onChange={changeStyle} />;\r\n      }\r\n    }\r\n\r\n    return (\r\n      <Div>\r\n        {fileName && isInitialize && <ReactHelmet fileName={fileName} />}\r\n        <header className=\"header\">\r\n          <Menu\r\n            {...preview}\r\n            changePreviewOverflow={changePreviewOverflow}\r\n            onChangePreviewBackgroundColor={changePreviewBackgroundColor}\r\n            changePreviewIsInitialize={changePreviewIsInitialize}\r\n            onChangePreviewValue={changePreviewValue}\r\n          />\r\n        </header>\r\n        <aside className=\"detail\">{styles}</aside>\r\n        <div className=\"preview\">\r\n          <Preview layers={layers} preview={preview} />\r\n          <Information\r\n            {...preview}\r\n            onChange={changePreviewValue}\r\n            onChangeBackgroundColor={changePreviewBackgroundColor}\r\n          />\r\n        </div>\r\n        <aside className=\"side-layers\">\r\n          <LayerSetting>\r\n            {[\r\n              <DocumentAddButton\r\n                disabled={!isInitialize}\r\n                key=\"add\"\r\n                onClick={addTextLayer}\r\n              />,\r\n              <DocumentDeleteButton\r\n                disabled={!isInitialize || index === undefined}\r\n                key=\"delete\"\r\n                onClick={removeLayer}\r\n              />,\r\n              <ImageButton\r\n                disabled={!isInitialize}\r\n                key=\"image\"\r\n                onClick={() => {\r\n                  this.setState({ isShowDropzone: true });\r\n                }}\r\n              />,\r\n              <ArrowUpOutlineButton\r\n                disabled={\r\n                  !isInitialize ||\r\n                  index === undefined ||\r\n                  index === layers.length - 1\r\n                }\r\n                key=\"up\"\r\n                onClick={upLayer}\r\n              />,\r\n              <ArrowDownOutlineButton\r\n                disabled={!isInitialize || !index}\r\n                key=\"down\"\r\n                onClick={downLayer}\r\n              />\r\n            ]}\r\n          </LayerSetting>\r\n          <div className=\"layers\">\r\n            <Layers\r\n              index={index}\r\n              layers={layers}\r\n              onChange={changeValue}\r\n              onClick={selectLayer}\r\n              onFocus={selectLayer}\r\n            />\r\n          </div>\r\n        </aside>\r\n        {isShowDropzone &&\r\n          ReactDOM.createPortal(\r\n            <Dropzone\r\n              onClickCloseButton={() => {\r\n                this.setState({ isShowDropzone: false });\r\n              }}\r\n              onDrop={addImageLayers}\r\n            />,\r\n            this.rootEl\r\n          )}\r\n        {isShowLogo &&\r\n          ReactDOM.createPortal(<Logo loading={loading} />, this.rootEl)}\r\n      </Div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => ({\r\n  addImageLayers: (\r\n    acceptedFiles: ArgumentTypes<DropzoneProps['onDrop']>[0]\r\n  ) => {\r\n    acceptedFiles.forEach(acceptedFile => {\r\n      dispatch(addImageLayer({ url: URL.createObjectURL(acceptedFile) }));\r\n    });\r\n  },\r\n  addTextLayer: () => dispatch(addTextLayer()),\r\n  addTextShadow: () => dispatch(addTextShadow()),\r\n  changeColor: (\r\n    { rgb: value }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0],\r\n    name: string\r\n  ) => dispatch(changeStyle({ name, value })),\r\n  changeFontFamily: (\r\n    value: ArgumentTypes<TextLayerStylesProps['onChangeFontFamily']>[0]\r\n  ) => dispatch(changeStyle({ value, name: 'fontFamily' })),\r\n  changePreviewBackgroundColor: ({\r\n    rgb: value\r\n  }: ArgumentTypes<TextLayerStylesProps['onChangeColor']>[0]) =>\r\n    dispatch(changePreviewValue({ value, name: 'backgroundColor' })),\r\n  changePreviewIsInitialize: (\r\n    value: ArgumentTypes<MenuProps['changePreviewIsInitialize']>[0]\r\n  ) => dispatch(changePreviewValue({ value, name: 'isInitialize' })),\r\n  changePreviewOverflow: (value: MenuProps['overflow']) =>\r\n    dispatch(changePreviewValue({ value, name: 'overflow' })),\r\n  changePreviewValue: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<InformationProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changePreviewValue({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeStyle: ({\r\n    currentTarget: { checked, name, type, value }\r\n  }: ArgumentTypes<TextLayerStylesProps['onChange']>[0]) =>\r\n    dispatch(\r\n      changeStyle({ name, value: type === 'checkbox' ? checked : value })\r\n    ),\r\n  changeValue: ({\r\n    target: { value }\r\n  }: React.ChangeEvent<HTMLTextAreaElement>) =>\r\n    dispatch(changeValue({ value })),\r\n  downLayer: () => dispatch(downLayer()),\r\n  removeLayer: () => dispatch(removeLayer()),\r\n  removeTextShadow: ({\r\n    currentTarget: { name }\r\n  }: ArgumentTypes<TextLayerStylesProps['onClickRemoveTextShadow']>[0]) =>\r\n    dispatch(removeTextShadow({ index: parseInt(name, 10) })),\r\n  selectLayer: ({\r\n    currentTarget: { dataset }\r\n  }:\r\n    | ArgumentTypes<LayersProps['onClick']>[0]\r\n    | ArgumentTypes<LayersProps['onFocus']>[0]) =>\r\n    dispatch(selectLayer({ index: parseInt(dataset['index'], 10) })),\r\n  setFonts: (fonts: Font[]) => dispatch(setFonts({ fonts })),\r\n  upLayer: () => dispatch(upLayer())\r\n});\r\n\r\nconst mapStateToProps = ({\r\n  fonts: { fonts },\r\n  layer: { index, layers },\r\n  preview\r\n}: State) => ({\r\n  fonts,\r\n  index,\r\n  layers,\r\n  preview\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(Pages);\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import setFonts from 'actions/fonts/setFonts';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\ninterface Font {\r\n  fontFamily: string;\r\n  name: string;\r\n}\r\n\r\nexport interface FontsState {\r\n  fonts: Font[];\r\n}\r\n\r\nconst initialState: FontsState = {\r\n  fonts: []\r\n};\r\n\r\nconst fonts = reducerWithInitialState(initialState).case(\r\n  setFonts,\r\n  (state, { fonts }) => ({ ...state, fonts })\r\n);\r\n\r\nexport default fonts;\r\n","import addImageLayer from 'actions/layer/addImageLayer';\r\nimport addTextLayer from 'actions/layer/addTextLayer';\r\nimport addTextShadow from 'actions/layer/addTextShadow';\r\nimport changeStyle from 'actions/layer/changeStyle';\r\nimport changeValue from 'actions/layer/changeValue';\r\nimport downLayer from 'actions/layer/downLayer';\r\nimport removeLayer from 'actions/layer/removeLayer';\r\nimport removeTextShadow from 'actions/layer/removeTextShadow';\r\nimport selectLayer from 'actions/layer/selectLayer';\r\nimport upLayer from 'actions/layer/upLayer';\r\nimport changePreviewValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\nimport * as uniqid from 'uniqid';\r\n\r\ninterface ImageLayer {\r\n  id: string;\r\n  style: {\r\n    opacity: number;\r\n    rotate: number;\r\n    scale: number;\r\n  };\r\n  url: string;\r\n}\r\n\r\ninterface TextShadow {\r\n  blurRadius: number;\r\n  color: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  hShadow: number;\r\n  vShadow: number;\r\n}\r\n\r\ninterface TextLayer {\r\n  id: string;\r\n  style: {\r\n    color: {\r\n      a: number;\r\n      b: number;\r\n      g: number;\r\n      r: number;\r\n    };\r\n    fontFamily: {\r\n      label: string;\r\n      value: string;\r\n    };\r\n    fontSize: number;\r\n    fontStyle: boolean;\r\n    fontWeight: number;\r\n    letterSpacing: number;\r\n    lineHeight: number;\r\n    opacity: number;\r\n    rotate: number;\r\n    textShadows: TextShadow[];\r\n  };\r\n  value: string;\r\n}\r\n\r\nexport interface LayerState {\r\n  index?: number;\r\n  layers: (ImageLayer | TextLayer)[];\r\n}\r\n\r\nconst initialState: LayerState = {\r\n  index: undefined,\r\n  layers: []\r\n};\r\n\r\nconst layer = reducerWithInitialState(initialState)\r\n  .case(addImageLayer, (state, { url }) => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      url,\r\n      id: uniqid(),\r\n      style: {\r\n        opacity: 1,\r\n        rotate: 0,\r\n        scale: 1\r\n      }\r\n    });\r\n\r\n    return { ...state, layers, index: layers.length - 1 };\r\n  })\r\n  .case(addTextLayer, state => {\r\n    const { layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    layers.push({\r\n      id: uniqid(),\r\n      style: {\r\n        color: {\r\n          a: 1,\r\n          b: 0,\r\n          g: 0,\r\n          r: 0\r\n        },\r\n        fontFamily: {\r\n          label: 'M+ P Type-1 Regular',\r\n          value: 'mplus-1p-regular'\r\n        },\r\n        fontSize: 16,\r\n        fontStyle: false,\r\n        fontWeight: 400,\r\n        letterSpacing: 0,\r\n        lineHeight: 16,\r\n        opacity: 1,\r\n        rotate: 0,\r\n        textShadows: []\r\n      },\r\n      value: ''\r\n    });\r\n\r\n    return { ...state, layers, index: layers.length - 1 };\r\n  })\r\n  .case(addTextShadow, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    (layers[index] as TextLayer).style.textShadows.push({\r\n      blurRadius: 0,\r\n      color: {\r\n        a: 1,\r\n        b: 0,\r\n        g: 0,\r\n        r: 0\r\n      },\r\n      hShadow: 0,\r\n      vShadow: 0\r\n    });\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changeStyle, (state, { name, value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    if (name.indexOf('.') >= 0) {\r\n      const [first, secondName] = name.split('.');\r\n      const [_, firstName, index2] = first.match('([a-zA-Z]+)\\\\[(.+)\\\\]');\r\n\r\n      layers[index].style[firstName][parseInt(index2, 10)][secondName] = value;\r\n    } else {\r\n      if (name === 'opacity' || name === 'rotate' || name === 'scale') {\r\n        layers[index].style[name] = parseFloat(value);\r\n      } else {\r\n        layers[index].style[name] = value;\r\n      }\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(changePreviewValue, (state, { name }) => {\r\n    if (name === 'isInitialize') {\r\n      return initialState;\r\n    }\r\n\r\n    return state;\r\n  })\r\n  .case(changeValue, (state, { value }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const layer = layers[index];\r\n\r\n    if ('value' in layer) {\r\n      layer.value = value;\r\n\r\n      layers[index] = layer;\r\n    }\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(downLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index - 1];\r\n    layers[index - 1] = tmpLayer;\r\n\r\n    return { ...state, index: index - 1, layers };\r\n  })\r\n  .case(removeLayer, state => {\r\n    const { index: prevIndex, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    let index = undefined;\r\n\r\n    layers.splice(prevIndex, 1);\r\n\r\n    if (index - 1 >= 0) {\r\n      index = index - 1;\r\n    } else if (layers.length) {\r\n      index = 0;\r\n    }\r\n\r\n    return {\r\n      index,\r\n      layers\r\n    };\r\n  })\r\n  .case(removeTextShadow, (state, { index: textShadowIndex }) => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n\r\n    (layers[index] as TextLayer).style.textShadows.splice(textShadowIndex, 1);\r\n\r\n    return { ...state, layers };\r\n  })\r\n  .case(selectLayer, (state, { index }) => ({ ...state, index }))\r\n  .case(upLayer, state => {\r\n    const { index, layers: prevLayers } = state;\r\n    const layers = prevLayers.slice();\r\n    const tmpLayer = layers[index];\r\n\r\n    layers[index] = layers[index + 1];\r\n    layers[index + 1] = tmpLayer;\r\n\r\n    return { ...state, index: index + 1, layers };\r\n  });\r\n\r\nexport default layer;\r\n","import changeValue from 'actions/preview/changeValue';\r\nimport { reducerWithInitialState } from 'typescript-fsa-reducers';\r\n\r\nexport interface PreviewState {\r\n  backgroundColor: {\r\n    a: number;\r\n    b: number;\r\n    g: number;\r\n    r: number;\r\n  };\r\n  fileName: string;\r\n  gridSize: number;\r\n  height: number;\r\n  isInitialize: boolean;\r\n  overflow: boolean;\r\n  scale: number;\r\n  width: number;\r\n}\r\n\r\nconst initialState: PreviewState = {\r\n  backgroundColor: {\r\n    a: 1,\r\n    b: 255,\r\n    g: 255,\r\n    r: 255\r\n  },\r\n  fileName: '',\r\n  gridSize: 0,\r\n  height: 300,\r\n  // isInitialize: false,\r\n  isInitialize: process.env.NODE_ENV === 'development',\r\n  overflow: false,\r\n  scale: 1,\r\n  width: 400\r\n};\r\n\r\nconst preview = reducerWithInitialState(initialState).case(\r\n  changeValue,\r\n  (state, { name, value: newValue }) => {\r\n    let value;\r\n\r\n    if (name === 'scale') {\r\n      value = parseFloat(newValue as string);\r\n    } else {\r\n      value = newValue;\r\n    }\r\n\r\n    return { ...state, ...{ [name]: value } };\r\n  }\r\n);\r\n\r\nexport default preview;\r\n","import { combineReducers } from 'redux';\r\nimport fonts, { FontsState } from './fonts';\r\nimport layer, { LayerState } from './layer';\r\nimport preview, { PreviewState } from './preview';\r\n\r\nexport interface State {\r\n  fonts: FontsState;\r\n  layer: LayerState;\r\n  preview: PreviewState;\r\n}\r\n\r\nconst reducers = () => combineReducers({ fonts, layer, preview });\r\n\r\nexport default reducers;\r\n","import Pages from 'containers/pages';\r\nimport * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\r\nimport { createStore } from 'redux';\r\nimport 'ress';\r\nimport { createGlobalStyle } from 'styled-components';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport reducers from './reducers';\r\n\r\nconst store = createStore(reducers());\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  html {\r\n    font-family: -apple-system, BlinkMacSystemFont, \"Helvetica Neue\", YuGothic, \"ヒラギノ角ゴ ProN W3\", Hiragino Kaku Gothic ProN, Arial, \"メイリオ\", Meiryo, sans-serif;\r\n    font-size: 62.5%;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    -webkit-font-smoothing: antialiased;\r\n    font-style: normal;\r\n    font-weight: 400;\r\n    height: 100%;\r\n    line-height: 1.2;\r\n    overflow: hidden !important;\r\n    -webkit-overflow-scrolling: touch;\r\n    width: 100%;\r\n  \r\n    body {\r\n      font-size: 1.2rem;\r\n      height: 100%;\r\n      width: 100%;\r\n    \r\n      #root {\r\n        height: 100%;\r\n        width: 100%;\r\n\r\n        * {\r\n          appearance: none;\r\n          \r\n          &:focus {\r\n            outline: none;\r\n          }\r\n        }\r\n  \r\n        a {\r\n          line-height: 0;\r\n        }\r\n\r\n        ul {\r\n          list-style: none;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter\r\n      basename={process.env.NODE_ENV === 'development' ? '' : '/image-maker'}\r\n    >\r\n      <Switch>\r\n        <Route component={Pages} exact={true} path=\"/\" />\r\n      </Switch>\r\n    </BrowserRouter>\r\n    <GlobalStyle />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}